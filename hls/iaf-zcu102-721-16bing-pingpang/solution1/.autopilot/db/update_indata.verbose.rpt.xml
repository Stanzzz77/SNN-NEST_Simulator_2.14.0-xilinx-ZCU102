<profile>

<section name = "Vivado HLS Report for 'update_indata'" level="0">
<item name = "Date">Sun Aug 22 22:27:36 2021
</item>
<item name = "Version">2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)</item>
<item name = "Project">iaf-zcu102-721-16bing-pingpang</item>
<item name = "Solution">solution1</item>
<item name = "Product family">zynquplus</item>
<item name = "Target device">xczu9eg-ffvb1156-2-i</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00, 8.750, 1.25</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">8, 8, 1, 1, function</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 80, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">-, -, -, -, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 54, -</column>
<column name="Register">-, -, 63, -, -</column>
<specialColumn name="Available">1824, 2520, 548160, 274080, 0</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, ~0, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
</table>
</item>
<item name = "DSP48"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="sum3_fu_232_p2">+, 0, 0, 33, 26, 26</column>
<column name="sum_fu_222_p2">+, 0, 0, 33, 26, 26</column>
<column name="ap_condition_900">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage0_01001">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage0_11001">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage0_subdone">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state2_io">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state9_pp0_stage0_iter8">or, 0, 0, 2, 1, 1</column>
<column name="ap_enable_pp0">xor, 0, 0, 2, 1, 2</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_sig_ioackin_m_axi_input00_V_ARREADY">9, 2, 1, 2</column>
<column name="ap_sig_ioackin_m_axi_input01_V_ARREADY">9, 2, 1, 2</column>
<column name="input00_V_blk_n_AR">9, 2, 1, 2</column>
<column name="input00_V_blk_n_R">9, 2, 1, 2</column>
<column name="input01_V_blk_n_AR">9, 2, 1, 2</column>
<column name="input01_V_blk_n_R">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter3">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter4">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter5">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter6">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter7">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter8">1, 0, 1, 0</column>
<column name="ap_reg_ioackin_m_axi_input00_V_ARREADY">1, 0, 1, 0</column>
<column name="ap_reg_ioackin_m_axi_input01_V_ARREADY">1, 0, 1, 0</column>
<column name="sum3_reg_993">26, 0, 26, 0</column>
<column name="sum_reg_988">26, 0, 26, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, update_indata, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, update_indata, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, update_indata, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, update_indata, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, update_indata, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, update_indata, return value</column>
<column name="ap_ce">in, 1, ap_ctrl_hs, update_indata, return value</column>
<column name="ap_return_0">out, 256, ap_ctrl_hs, update_indata, return value</column>
<column name="ap_return_1">out, 256, ap_ctrl_hs, update_indata, return value</column>
<column name="ap_return_2">out, 256, ap_ctrl_hs, update_indata, return value</column>
<column name="ap_return_3">out, 256, ap_ctrl_hs, update_indata, return value</column>
<column name="ap_return_4">out, 256, ap_ctrl_hs, update_indata, return value</column>
<column name="ap_return_5">out, 256, ap_ctrl_hs, update_indata, return value</column>
<column name="ap_return_6">out, 256, ap_ctrl_hs, update_indata, return value</column>
<column name="input00_V_blk_n_AR">out, 1, ap_ctrl_hs, update_indata, return value</column>
<column name="input00_V_blk_n_R">out, 1, ap_ctrl_hs, update_indata, return value</column>
<column name="input01_V_blk_n_AR">out, 1, ap_ctrl_hs, update_indata, return value</column>
<column name="input01_V_blk_n_R">out, 1, ap_ctrl_hs, update_indata, return value</column>
<column name="m_axi_input00_V_AWVALID">out, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_AWREADY">in, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_AWADDR">out, 32, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_AWID">out, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_AWLEN">out, 32, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_AWSIZE">out, 3, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_AWBURST">out, 2, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_AWLOCK">out, 2, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_AWCACHE">out, 4, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_AWPROT">out, 3, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_AWQOS">out, 4, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_AWREGION">out, 4, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_AWUSER">out, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_WVALID">out, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_WREADY">in, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_WDATA">out, 1024, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_WSTRB">out, 128, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_WLAST">out, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_WID">out, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_WUSER">out, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_ARVALID">out, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_ARREADY">in, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_ARADDR">out, 32, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_ARID">out, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_ARLEN">out, 32, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_ARSIZE">out, 3, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_ARBURST">out, 2, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_ARLOCK">out, 2, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_ARCACHE">out, 4, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_ARPROT">out, 3, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_ARQOS">out, 4, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_ARREGION">out, 4, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_ARUSER">out, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_RVALID">in, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_RREADY">out, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_RDATA">in, 1024, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_RLAST">in, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_RID">in, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_RUSER">in, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_RRESP">in, 2, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_BVALID">in, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_BREADY">out, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_BRESP">in, 2, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_BID">in, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input00_V_BUSER">in, 1, m_axi, input00_V, pointer</column>
<column name="m_axi_input01_V_AWVALID">out, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_AWREADY">in, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_AWADDR">out, 32, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_AWID">out, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_AWLEN">out, 32, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_AWSIZE">out, 3, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_AWBURST">out, 2, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_AWLOCK">out, 2, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_AWCACHE">out, 4, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_AWPROT">out, 3, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_AWQOS">out, 4, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_AWREGION">out, 4, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_AWUSER">out, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_WVALID">out, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_WREADY">in, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_WDATA">out, 1024, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_WSTRB">out, 128, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_WLAST">out, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_WID">out, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_WUSER">out, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_ARVALID">out, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_ARREADY">in, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_ARADDR">out, 32, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_ARID">out, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_ARLEN">out, 32, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_ARSIZE">out, 3, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_ARBURST">out, 2, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_ARLOCK">out, 2, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_ARCACHE">out, 4, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_ARPROT">out, 3, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_ARQOS">out, 4, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_ARREGION">out, 4, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_ARUSER">out, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_RVALID">in, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_RREADY">out, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_RDATA">in, 1024, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_RLAST">in, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_RID">in, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_RUSER">in, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_RRESP">in, 2, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_BVALID">in, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_BREADY">out, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_BRESP">in, 2, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_BID">in, 1, m_axi, input01_V, pointer</column>
<column name="m_axi_input01_V_BUSER">in, 1, m_axi, input01_V, pointer</column>
<column name="i">in, 30, ap_none, i, scalar</column>
<column name="input00_V_offset">in, 25, ap_none, input00_V_offset, scalar</column>
<column name="input01_V_offset">in, 25, ap_none, input01_V_offset, scalar</column>
</table>
</item>
</section>
</profile>
