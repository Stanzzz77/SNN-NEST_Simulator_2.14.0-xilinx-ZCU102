// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _update_indata_HH_
#define _update_indata_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct update_indata : public sc_module {
    // Port declarations 111
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_input00_V_AWVALID;
    sc_in< sc_logic > m_axi_input00_V_AWREADY;
    sc_out< sc_lv<32> > m_axi_input00_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_input00_V_AWID;
    sc_out< sc_lv<32> > m_axi_input00_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_input00_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_input00_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_input00_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_input00_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_input00_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_input00_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_input00_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_input00_V_AWUSER;
    sc_out< sc_logic > m_axi_input00_V_WVALID;
    sc_in< sc_logic > m_axi_input00_V_WREADY;
    sc_out< sc_lv<1024> > m_axi_input00_V_WDATA;
    sc_out< sc_lv<128> > m_axi_input00_V_WSTRB;
    sc_out< sc_logic > m_axi_input00_V_WLAST;
    sc_out< sc_lv<1> > m_axi_input00_V_WID;
    sc_out< sc_lv<1> > m_axi_input00_V_WUSER;
    sc_out< sc_logic > m_axi_input00_V_ARVALID;
    sc_in< sc_logic > m_axi_input00_V_ARREADY;
    sc_out< sc_lv<32> > m_axi_input00_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_input00_V_ARID;
    sc_out< sc_lv<32> > m_axi_input00_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_input00_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_input00_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_input00_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_input00_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_input00_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_input00_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_input00_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_input00_V_ARUSER;
    sc_in< sc_logic > m_axi_input00_V_RVALID;
    sc_out< sc_logic > m_axi_input00_V_RREADY;
    sc_in< sc_lv<1024> > m_axi_input00_V_RDATA;
    sc_in< sc_logic > m_axi_input00_V_RLAST;
    sc_in< sc_lv<1> > m_axi_input00_V_RID;
    sc_in< sc_lv<1> > m_axi_input00_V_RUSER;
    sc_in< sc_lv<2> > m_axi_input00_V_RRESP;
    sc_in< sc_logic > m_axi_input00_V_BVALID;
    sc_out< sc_logic > m_axi_input00_V_BREADY;
    sc_in< sc_lv<2> > m_axi_input00_V_BRESP;
    sc_in< sc_lv<1> > m_axi_input00_V_BID;
    sc_in< sc_lv<1> > m_axi_input00_V_BUSER;
    sc_out< sc_logic > m_axi_input01_V_AWVALID;
    sc_in< sc_logic > m_axi_input01_V_AWREADY;
    sc_out< sc_lv<32> > m_axi_input01_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_input01_V_AWID;
    sc_out< sc_lv<32> > m_axi_input01_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_input01_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_input01_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_input01_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_input01_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_input01_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_input01_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_input01_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_input01_V_AWUSER;
    sc_out< sc_logic > m_axi_input01_V_WVALID;
    sc_in< sc_logic > m_axi_input01_V_WREADY;
    sc_out< sc_lv<1024> > m_axi_input01_V_WDATA;
    sc_out< sc_lv<128> > m_axi_input01_V_WSTRB;
    sc_out< sc_logic > m_axi_input01_V_WLAST;
    sc_out< sc_lv<1> > m_axi_input01_V_WID;
    sc_out< sc_lv<1> > m_axi_input01_V_WUSER;
    sc_out< sc_logic > m_axi_input01_V_ARVALID;
    sc_in< sc_logic > m_axi_input01_V_ARREADY;
    sc_out< sc_lv<32> > m_axi_input01_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_input01_V_ARID;
    sc_out< sc_lv<32> > m_axi_input01_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_input01_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_input01_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_input01_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_input01_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_input01_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_input01_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_input01_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_input01_V_ARUSER;
    sc_in< sc_logic > m_axi_input01_V_RVALID;
    sc_out< sc_logic > m_axi_input01_V_RREADY;
    sc_in< sc_lv<1024> > m_axi_input01_V_RDATA;
    sc_in< sc_logic > m_axi_input01_V_RLAST;
    sc_in< sc_lv<1> > m_axi_input01_V_RID;
    sc_in< sc_lv<1> > m_axi_input01_V_RUSER;
    sc_in< sc_lv<2> > m_axi_input01_V_RRESP;
    sc_in< sc_logic > m_axi_input01_V_BVALID;
    sc_out< sc_logic > m_axi_input01_V_BREADY;
    sc_in< sc_lv<2> > m_axi_input01_V_BRESP;
    sc_in< sc_lv<1> > m_axi_input01_V_BID;
    sc_in< sc_lv<1> > m_axi_input01_V_BUSER;
    sc_in< sc_logic > ap_ce;
    sc_in< sc_lv<30> > i;
    sc_in< sc_lv<25> > input00_V_offset;
    sc_in< sc_lv<25> > input01_V_offset;
    sc_out< sc_lv<256> > ap_return_0;
    sc_out< sc_lv<256> > ap_return_1;
    sc_out< sc_lv<256> > ap_return_2;
    sc_out< sc_lv<256> > ap_return_3;
    sc_out< sc_lv<256> > ap_return_4;
    sc_out< sc_lv<256> > ap_return_5;
    sc_out< sc_lv<256> > ap_return_6;
    sc_out< sc_logic > input00_V_blk_n_AR;
    sc_out< sc_logic > input00_V_blk_n_R;
    sc_out< sc_logic > input01_V_blk_n_AR;
    sc_out< sc_logic > input01_V_blk_n_R;


    // Module declarations
    update_indata(sc_module_name name);
    SC_HAS_PROCESS(update_indata);

    ~update_indata();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_input00_V_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_input01_V_ARREADY;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter8;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<26> > sum_fu_222_p2;
    sc_signal< sc_lv<26> > sum_reg_988;
    sc_signal< sc_lv<26> > sum3_fu_232_p2;
    sc_signal< sc_lv<26> > sum3_reg_993;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > sum_cast_fu_238_p1;
    sc_signal< sc_lv<64> > sum3_cast_fu_248_p1;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_input00_V_ARREADY;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_input01_V_ARREADY;
    sc_signal< sc_lv<18> > tmp_fu_210_p1;
    sc_signal< sc_lv<26> > sext_cast_fu_218_p1;
    sc_signal< sc_lv<26> > tmp_cast_fu_214_p1;
    sc_signal< sc_lv<26> > sext2_cast_fu_228_p1;
    sc_signal< sc_lv<32> > p_Result_11_fu_736_p4;
    sc_signal< sc_lv<32> > p_Result_10_fu_666_p4;
    sc_signal< sc_lv<32> > p_Result_6_fu_596_p4;
    sc_signal< sc_lv<32> > p_Result_s_fu_526_p4;
    sc_signal< sc_lv<32> > p_Result_3_fu_456_p4;
    sc_signal< sc_lv<32> > p_Result_2_fu_386_p4;
    sc_signal< sc_lv<32> > p_Result_1_fu_316_p4;
    sc_signal< sc_lv<32> > tmp_68_fu_258_p1;
    sc_signal< sc_lv<32> > p_Result_4_7_fu_766_p4;
    sc_signal< sc_lv<32> > p_Result_4_6_fu_676_p4;
    sc_signal< sc_lv<32> > p_Result_4_5_fu_606_p4;
    sc_signal< sc_lv<32> > p_Result_4_4_fu_536_p4;
    sc_signal< sc_lv<32> > p_Result_4_3_fu_466_p4;
    sc_signal< sc_lv<32> > p_Result_4_2_fu_396_p4;
    sc_signal< sc_lv<32> > p_Result_4_1_fu_326_p4;
    sc_signal< sc_lv<32> > p_Result_4_fu_262_p4;
    sc_signal< sc_lv<32> > p_Result_5_7_fu_796_p4;
    sc_signal< sc_lv<32> > p_Result_5_6_fu_686_p4;
    sc_signal< sc_lv<32> > p_Result_5_5_fu_616_p4;
    sc_signal< sc_lv<32> > p_Result_5_4_fu_546_p4;
    sc_signal< sc_lv<32> > p_Result_5_3_fu_476_p4;
    sc_signal< sc_lv<32> > p_Result_5_2_fu_406_p4;
    sc_signal< sc_lv<32> > p_Result_5_1_fu_336_p4;
    sc_signal< sc_lv<32> > p_Result_5_fu_272_p4;
    sc_signal< sc_lv<32> > p_Result_6_7_fu_826_p4;
    sc_signal< sc_lv<32> > p_Result_6_6_fu_696_p4;
    sc_signal< sc_lv<32> > p_Result_6_5_fu_626_p4;
    sc_signal< sc_lv<32> > p_Result_6_4_fu_556_p4;
    sc_signal< sc_lv<32> > p_Result_6_3_fu_486_p4;
    sc_signal< sc_lv<32> > p_Result_6_2_fu_416_p4;
    sc_signal< sc_lv<32> > p_Result_6_1_fu_346_p4;
    sc_signal< sc_lv<32> > tmp_69_fu_282_p1;
    sc_signal< sc_lv<32> > p_Result_7_7_fu_856_p4;
    sc_signal< sc_lv<32> > p_Result_7_6_fu_706_p4;
    sc_signal< sc_lv<32> > p_Result_7_5_fu_636_p4;
    sc_signal< sc_lv<32> > p_Result_7_4_fu_566_p4;
    sc_signal< sc_lv<32> > p_Result_7_3_fu_496_p4;
    sc_signal< sc_lv<32> > p_Result_7_2_fu_426_p4;
    sc_signal< sc_lv<32> > p_Result_7_1_fu_356_p4;
    sc_signal< sc_lv<32> > p_Result_7_fu_286_p4;
    sc_signal< sc_lv<32> > p_Result_8_7_fu_886_p4;
    sc_signal< sc_lv<32> > p_Result_8_6_fu_716_p4;
    sc_signal< sc_lv<32> > p_Result_8_5_fu_646_p4;
    sc_signal< sc_lv<32> > p_Result_8_4_fu_576_p4;
    sc_signal< sc_lv<32> > p_Result_8_3_fu_506_p4;
    sc_signal< sc_lv<32> > p_Result_8_2_fu_436_p4;
    sc_signal< sc_lv<32> > p_Result_8_1_fu_366_p4;
    sc_signal< sc_lv<32> > p_Result_8_fu_296_p4;
    sc_signal< sc_lv<32> > p_Result_9_7_fu_916_p4;
    sc_signal< sc_lv<32> > p_Result_9_6_fu_726_p4;
    sc_signal< sc_lv<32> > p_Result_9_5_fu_656_p4;
    sc_signal< sc_lv<32> > p_Result_9_4_fu_586_p4;
    sc_signal< sc_lv<32> > p_Result_9_3_fu_516_p4;
    sc_signal< sc_lv<32> > p_Result_9_2_fu_446_p4;
    sc_signal< sc_lv<32> > p_Result_9_1_fu_376_p4;
    sc_signal< sc_lv<32> > p_Result_9_fu_306_p4;
    sc_signal< sc_lv<256> > weighted_spikes_ex_s_fu_746_p9;
    sc_signal< sc_lv<256> > weighted_spikes_in_s_fu_776_p9;
    sc_signal< sc_lv<256> > I_e_s_fu_806_p9;
    sc_signal< sc_lv<256> > i_syn_ex_s_fu_836_p9;
    sc_signal< sc_lv<256> > i_syn_in_s_fu_866_p9;
    sc_signal< sc_lv<256> > r_ref_s_fu_896_p9;
    sc_signal< sc_lv<256> > V_m_s_fu_926_p9;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to7;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_900;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1024> ap_const_lv1024_lc_1;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<12> ap_const_lv12_20;
    static const sc_lv<12> ap_const_lv12_3F;
    static const sc_lv<12> ap_const_lv12_40;
    static const sc_lv<12> ap_const_lv12_5F;
    static const sc_lv<12> ap_const_lv12_60;
    static const sc_lv<12> ap_const_lv12_7F;
    static const sc_lv<12> ap_const_lv12_80;
    static const sc_lv<12> ap_const_lv12_9F;
    static const sc_lv<12> ap_const_lv12_A0;
    static const sc_lv<12> ap_const_lv12_BF;
    static const sc_lv<12> ap_const_lv12_C0;
    static const sc_lv<12> ap_const_lv12_DF;
    static const sc_lv<12> ap_const_lv12_E0;
    static const sc_lv<12> ap_const_lv12_FF;
    static const sc_lv<12> ap_const_lv12_100;
    static const sc_lv<12> ap_const_lv12_11F;
    static const sc_lv<12> ap_const_lv12_120;
    static const sc_lv<12> ap_const_lv12_13F;
    static const sc_lv<12> ap_const_lv12_140;
    static const sc_lv<12> ap_const_lv12_15F;
    static const sc_lv<12> ap_const_lv12_160;
    static const sc_lv<12> ap_const_lv12_17F;
    static const sc_lv<12> ap_const_lv12_180;
    static const sc_lv<12> ap_const_lv12_19F;
    static const sc_lv<12> ap_const_lv12_1A0;
    static const sc_lv<12> ap_const_lv12_1BF;
    static const sc_lv<12> ap_const_lv12_1C0;
    static const sc_lv<12> ap_const_lv12_1DF;
    static const sc_lv<12> ap_const_lv12_1E0;
    static const sc_lv<12> ap_const_lv12_1FF;
    static const sc_lv<12> ap_const_lv12_200;
    static const sc_lv<12> ap_const_lv12_21F;
    static const sc_lv<12> ap_const_lv12_220;
    static const sc_lv<12> ap_const_lv12_23F;
    static const sc_lv<12> ap_const_lv12_240;
    static const sc_lv<12> ap_const_lv12_25F;
    static const sc_lv<12> ap_const_lv12_260;
    static const sc_lv<12> ap_const_lv12_27F;
    static const sc_lv<12> ap_const_lv12_280;
    static const sc_lv<12> ap_const_lv12_29F;
    static const sc_lv<12> ap_const_lv12_2A0;
    static const sc_lv<12> ap_const_lv12_2BF;
    static const sc_lv<12> ap_const_lv12_2C0;
    static const sc_lv<12> ap_const_lv12_2DF;
    static const sc_lv<12> ap_const_lv12_2E0;
    static const sc_lv<12> ap_const_lv12_2FF;
    static const sc_lv<12> ap_const_lv12_300;
    static const sc_lv<12> ap_const_lv12_31F;
    static const sc_lv<12> ap_const_lv12_320;
    static const sc_lv<12> ap_const_lv12_33F;
    static const sc_lv<12> ap_const_lv12_340;
    static const sc_lv<12> ap_const_lv12_35F;
    static const sc_lv<12> ap_const_lv12_360;
    static const sc_lv<12> ap_const_lv12_37F;
    static const sc_lv<12> ap_const_lv12_380;
    static const sc_lv<12> ap_const_lv12_39F;
    static const sc_lv<12> ap_const_lv12_3A0;
    static const sc_lv<12> ap_const_lv12_3BF;
    static const sc_lv<12> ap_const_lv12_3C0;
    static const sc_lv<12> ap_const_lv12_3DF;
    static const sc_lv<12> ap_const_lv12_3E0;
    static const sc_lv<12> ap_const_lv12_3FF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_I_e_s_fu_806_p9();
    void thread_V_m_s_fu_926_p9();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_io();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_block_state6_pp0_stage0_iter5();
    void thread_ap_block_state7_pp0_stage0_iter6();
    void thread_ap_block_state8_pp0_stage0_iter7();
    void thread_ap_block_state9_pp0_stage0_iter8();
    void thread_ap_condition_900();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to7();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_sig_ioackin_m_axi_input00_V_ARREADY();
    void thread_ap_sig_ioackin_m_axi_input01_V_ARREADY();
    void thread_i_syn_ex_s_fu_836_p9();
    void thread_i_syn_in_s_fu_866_p9();
    void thread_input00_V_blk_n_AR();
    void thread_input00_V_blk_n_R();
    void thread_input01_V_blk_n_AR();
    void thread_input01_V_blk_n_R();
    void thread_m_axi_input00_V_ARADDR();
    void thread_m_axi_input00_V_ARBURST();
    void thread_m_axi_input00_V_ARCACHE();
    void thread_m_axi_input00_V_ARID();
    void thread_m_axi_input00_V_ARLEN();
    void thread_m_axi_input00_V_ARLOCK();
    void thread_m_axi_input00_V_ARPROT();
    void thread_m_axi_input00_V_ARQOS();
    void thread_m_axi_input00_V_ARREGION();
    void thread_m_axi_input00_V_ARSIZE();
    void thread_m_axi_input00_V_ARUSER();
    void thread_m_axi_input00_V_ARVALID();
    void thread_m_axi_input00_V_AWADDR();
    void thread_m_axi_input00_V_AWBURST();
    void thread_m_axi_input00_V_AWCACHE();
    void thread_m_axi_input00_V_AWID();
    void thread_m_axi_input00_V_AWLEN();
    void thread_m_axi_input00_V_AWLOCK();
    void thread_m_axi_input00_V_AWPROT();
    void thread_m_axi_input00_V_AWQOS();
    void thread_m_axi_input00_V_AWREGION();
    void thread_m_axi_input00_V_AWSIZE();
    void thread_m_axi_input00_V_AWUSER();
    void thread_m_axi_input00_V_AWVALID();
    void thread_m_axi_input00_V_BREADY();
    void thread_m_axi_input00_V_RREADY();
    void thread_m_axi_input00_V_WDATA();
    void thread_m_axi_input00_V_WID();
    void thread_m_axi_input00_V_WLAST();
    void thread_m_axi_input00_V_WSTRB();
    void thread_m_axi_input00_V_WUSER();
    void thread_m_axi_input00_V_WVALID();
    void thread_m_axi_input01_V_ARADDR();
    void thread_m_axi_input01_V_ARBURST();
    void thread_m_axi_input01_V_ARCACHE();
    void thread_m_axi_input01_V_ARID();
    void thread_m_axi_input01_V_ARLEN();
    void thread_m_axi_input01_V_ARLOCK();
    void thread_m_axi_input01_V_ARPROT();
    void thread_m_axi_input01_V_ARQOS();
    void thread_m_axi_input01_V_ARREGION();
    void thread_m_axi_input01_V_ARSIZE();
    void thread_m_axi_input01_V_ARUSER();
    void thread_m_axi_input01_V_ARVALID();
    void thread_m_axi_input01_V_AWADDR();
    void thread_m_axi_input01_V_AWBURST();
    void thread_m_axi_input01_V_AWCACHE();
    void thread_m_axi_input01_V_AWID();
    void thread_m_axi_input01_V_AWLEN();
    void thread_m_axi_input01_V_AWLOCK();
    void thread_m_axi_input01_V_AWPROT();
    void thread_m_axi_input01_V_AWQOS();
    void thread_m_axi_input01_V_AWREGION();
    void thread_m_axi_input01_V_AWSIZE();
    void thread_m_axi_input01_V_AWUSER();
    void thread_m_axi_input01_V_AWVALID();
    void thread_m_axi_input01_V_BREADY();
    void thread_m_axi_input01_V_RREADY();
    void thread_m_axi_input01_V_WDATA();
    void thread_m_axi_input01_V_WID();
    void thread_m_axi_input01_V_WLAST();
    void thread_m_axi_input01_V_WSTRB();
    void thread_m_axi_input01_V_WUSER();
    void thread_m_axi_input01_V_WVALID();
    void thread_p_Result_10_fu_666_p4();
    void thread_p_Result_11_fu_736_p4();
    void thread_p_Result_1_fu_316_p4();
    void thread_p_Result_2_fu_386_p4();
    void thread_p_Result_3_fu_456_p4();
    void thread_p_Result_4_1_fu_326_p4();
    void thread_p_Result_4_2_fu_396_p4();
    void thread_p_Result_4_3_fu_466_p4();
    void thread_p_Result_4_4_fu_536_p4();
    void thread_p_Result_4_5_fu_606_p4();
    void thread_p_Result_4_6_fu_676_p4();
    void thread_p_Result_4_7_fu_766_p4();
    void thread_p_Result_4_fu_262_p4();
    void thread_p_Result_5_1_fu_336_p4();
    void thread_p_Result_5_2_fu_406_p4();
    void thread_p_Result_5_3_fu_476_p4();
    void thread_p_Result_5_4_fu_546_p4();
    void thread_p_Result_5_5_fu_616_p4();
    void thread_p_Result_5_6_fu_686_p4();
    void thread_p_Result_5_7_fu_796_p4();
    void thread_p_Result_5_fu_272_p4();
    void thread_p_Result_6_1_fu_346_p4();
    void thread_p_Result_6_2_fu_416_p4();
    void thread_p_Result_6_3_fu_486_p4();
    void thread_p_Result_6_4_fu_556_p4();
    void thread_p_Result_6_5_fu_626_p4();
    void thread_p_Result_6_6_fu_696_p4();
    void thread_p_Result_6_7_fu_826_p4();
    void thread_p_Result_6_fu_596_p4();
    void thread_p_Result_7_1_fu_356_p4();
    void thread_p_Result_7_2_fu_426_p4();
    void thread_p_Result_7_3_fu_496_p4();
    void thread_p_Result_7_4_fu_566_p4();
    void thread_p_Result_7_5_fu_636_p4();
    void thread_p_Result_7_6_fu_706_p4();
    void thread_p_Result_7_7_fu_856_p4();
    void thread_p_Result_7_fu_286_p4();
    void thread_p_Result_8_1_fu_366_p4();
    void thread_p_Result_8_2_fu_436_p4();
    void thread_p_Result_8_3_fu_506_p4();
    void thread_p_Result_8_4_fu_576_p4();
    void thread_p_Result_8_5_fu_646_p4();
    void thread_p_Result_8_6_fu_716_p4();
    void thread_p_Result_8_7_fu_886_p4();
    void thread_p_Result_8_fu_296_p4();
    void thread_p_Result_9_1_fu_376_p4();
    void thread_p_Result_9_2_fu_446_p4();
    void thread_p_Result_9_3_fu_516_p4();
    void thread_p_Result_9_4_fu_586_p4();
    void thread_p_Result_9_5_fu_656_p4();
    void thread_p_Result_9_6_fu_726_p4();
    void thread_p_Result_9_7_fu_916_p4();
    void thread_p_Result_9_fu_306_p4();
    void thread_p_Result_s_fu_526_p4();
    void thread_r_ref_s_fu_896_p9();
    void thread_sext2_cast_fu_228_p1();
    void thread_sext_cast_fu_218_p1();
    void thread_sum3_cast_fu_248_p1();
    void thread_sum3_fu_232_p2();
    void thread_sum_cast_fu_238_p1();
    void thread_sum_fu_222_p2();
    void thread_tmp_68_fu_258_p1();
    void thread_tmp_69_fu_282_p1();
    void thread_tmp_cast_fu_214_p1();
    void thread_tmp_fu_210_p1();
    void thread_weighted_spikes_ex_s_fu_746_p9();
    void thread_weighted_spikes_in_s_fu_776_p9();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
