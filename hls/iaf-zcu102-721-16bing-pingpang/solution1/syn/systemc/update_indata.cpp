// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "update_indata.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic update_indata::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic update_indata::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> update_indata::ap_ST_fsm_pp0_stage0 = "1";
const bool update_indata::ap_const_boolean_1 = true;
const sc_lv<32> update_indata::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool update_indata::ap_const_boolean_0 = false;
const sc_lv<1> update_indata::ap_const_lv1_0 = "0";
const sc_lv<3> update_indata::ap_const_lv3_0 = "000";
const sc_lv<2> update_indata::ap_const_lv2_0 = "00";
const sc_lv<4> update_indata::ap_const_lv4_0 = "0000";
const sc_lv<1024> update_indata::ap_const_lv1024_lc
const sc_lv<128> update_indata::ap_const_lv128_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> update_indata::ap_const_lv32_1 = "1";
const sc_lv<12> update_indata::ap_const_lv12_20 = "100000";
const sc_lv<12> update_indata::ap_const_lv12_3F = "111111";
const sc_lv<12> update_indata::ap_const_lv12_40 = "1000000";
const sc_lv<12> update_indata::ap_const_lv12_5F = "1011111";
const sc_lv<12> update_indata::ap_const_lv12_60 = "1100000";
const sc_lv<12> update_indata::ap_const_lv12_7F = "1111111";
const sc_lv<12> update_indata::ap_const_lv12_80 = "10000000";
const sc_lv<12> update_indata::ap_const_lv12_9F = "10011111";
const sc_lv<12> update_indata::ap_const_lv12_A0 = "10100000";
const sc_lv<12> update_indata::ap_const_lv12_BF = "10111111";
const sc_lv<12> update_indata::ap_const_lv12_C0 = "11000000";
const sc_lv<12> update_indata::ap_const_lv12_DF = "11011111";
const sc_lv<12> update_indata::ap_const_lv12_E0 = "11100000";
const sc_lv<12> update_indata::ap_const_lv12_FF = "11111111";
const sc_lv<12> update_indata::ap_const_lv12_100 = "100000000";
const sc_lv<12> update_indata::ap_const_lv12_11F = "100011111";
const sc_lv<12> update_indata::ap_const_lv12_120 = "100100000";
const sc_lv<12> update_indata::ap_const_lv12_13F = "100111111";
const sc_lv<12> update_indata::ap_const_lv12_140 = "101000000";
const sc_lv<12> update_indata::ap_const_lv12_15F = "101011111";
const sc_lv<12> update_indata::ap_const_lv12_160 = "101100000";
const sc_lv<12> update_indata::ap_const_lv12_17F = "101111111";
const sc_lv<12> update_indata::ap_const_lv12_180 = "110000000";
const sc_lv<12> update_indata::ap_const_lv12_19F = "110011111";
const sc_lv<12> update_indata::ap_const_lv12_1A0 = "110100000";
const sc_lv<12> update_indata::ap_const_lv12_1BF = "110111111";
const sc_lv<12> update_indata::ap_const_lv12_1C0 = "111000000";
const sc_lv<12> update_indata::ap_const_lv12_1DF = "111011111";
const sc_lv<12> update_indata::ap_const_lv12_1E0 = "111100000";
const sc_lv<12> update_indata::ap_const_lv12_1FF = "111111111";
const sc_lv<12> update_indata::ap_const_lv12_200 = "1000000000";
const sc_lv<12> update_indata::ap_const_lv12_21F = "1000011111";
const sc_lv<12> update_indata::ap_const_lv12_220 = "1000100000";
const sc_lv<12> update_indata::ap_const_lv12_23F = "1000111111";
const sc_lv<12> update_indata::ap_const_lv12_240 = "1001000000";
const sc_lv<12> update_indata::ap_const_lv12_25F = "1001011111";
const sc_lv<12> update_indata::ap_const_lv12_260 = "1001100000";
const sc_lv<12> update_indata::ap_const_lv12_27F = "1001111111";
const sc_lv<12> update_indata::ap_const_lv12_280 = "1010000000";
const sc_lv<12> update_indata::ap_const_lv12_29F = "1010011111";
const sc_lv<12> update_indata::ap_const_lv12_2A0 = "1010100000";
const sc_lv<12> update_indata::ap_const_lv12_2BF = "1010111111";
const sc_lv<12> update_indata::ap_const_lv12_2C0 = "1011000000";
const sc_lv<12> update_indata::ap_const_lv12_2DF = "1011011111";
const sc_lv<12> update_indata::ap_const_lv12_2E0 = "1011100000";
const sc_lv<12> update_indata::ap_const_lv12_2FF = "1011111111";
const sc_lv<12> update_indata::ap_const_lv12_300 = "1100000000";
const sc_lv<12> update_indata::ap_const_lv12_31F = "1100011111";
const sc_lv<12> update_indata::ap_const_lv12_320 = "1100100000";
const sc_lv<12> update_indata::ap_const_lv12_33F = "1100111111";
const sc_lv<12> update_indata::ap_const_lv12_340 = "1101000000";
const sc_lv<12> update_indata::ap_const_lv12_35F = "1101011111";
const sc_lv<12> update_indata::ap_const_lv12_360 = "1101100000";
const sc_lv<12> update_indata::ap_const_lv12_37F = "1101111111";
const sc_lv<12> update_indata::ap_const_lv12_380 = "1110000000";
const sc_lv<12> update_indata::ap_const_lv12_39F = "1110011111";
const sc_lv<12> update_indata::ap_const_lv12_3A0 = "1110100000";
const sc_lv<12> update_indata::ap_const_lv12_3BF = "1110111111";
const sc_lv<12> update_indata::ap_const_lv12_3C0 = "1111000000";
const sc_lv<12> update_indata::ap_const_lv12_3DF = "1111011111";
const sc_lv<12> update_indata::ap_const_lv12_3E0 = "1111100000";
const sc_lv<12> update_indata::ap_const_lv12_3FF = "1111111111";

update_indata::update_indata(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_I_e_s_fu_806_p9);
    sensitive << ( p_Result_5_7_fu_796_p4 );
    sensitive << ( p_Result_5_6_fu_686_p4 );
    sensitive << ( p_Result_5_5_fu_616_p4 );
    sensitive << ( p_Result_5_4_fu_546_p4 );
    sensitive << ( p_Result_5_3_fu_476_p4 );
    sensitive << ( p_Result_5_2_fu_406_p4 );
    sensitive << ( p_Result_5_1_fu_336_p4 );
    sensitive << ( p_Result_5_fu_272_p4 );

    SC_METHOD(thread_V_m_s_fu_926_p9);
    sensitive << ( p_Result_9_7_fu_916_p4 );
    sensitive << ( p_Result_9_6_fu_726_p4 );
    sensitive << ( p_Result_9_5_fu_656_p4 );
    sensitive << ( p_Result_9_4_fu_586_p4 );
    sensitive << ( p_Result_9_3_fu_516_p4 );
    sensitive << ( p_Result_9_2_fu_446_p4 );
    sensitive << ( p_Result_9_1_fu_376_p4 );
    sensitive << ( p_Result_9_fu_306_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( m_axi_input00_V_RVALID );
    sensitive << ( m_axi_input01_V_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( m_axi_input00_V_RVALID );
    sensitive << ( m_axi_input01_V_RVALID );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( m_axi_input00_V_RVALID );
    sensitive << ( m_axi_input01_V_RVALID );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( ap_sig_ioackin_m_axi_input00_V_ARREADY );
    sensitive << ( ap_sig_ioackin_m_axi_input01_V_ARREADY );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter8);
    sensitive << ( m_axi_input00_V_RVALID );
    sensitive << ( m_axi_input01_V_RVALID );

    SC_METHOD(thread_ap_condition_900);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_idle_pp0_0to7);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to7 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( weighted_spikes_ex_s_fu_746_p9 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( weighted_spikes_in_s_fu_776_p9 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( I_e_s_fu_806_p9 );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( i_syn_ex_s_fu_836_p9 );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( i_syn_in_s_fu_866_p9 );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( r_ref_s_fu_896_p9 );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( V_m_s_fu_926_p9 );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_input00_V_ARREADY);
    sensitive << ( m_axi_input00_V_ARREADY );
    sensitive << ( ap_reg_ioackin_m_axi_input00_V_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_input01_V_ARREADY);
    sensitive << ( m_axi_input01_V_ARREADY );
    sensitive << ( ap_reg_ioackin_m_axi_input01_V_ARREADY );

    SC_METHOD(thread_i_syn_ex_s_fu_836_p9);
    sensitive << ( p_Result_6_7_fu_826_p4 );
    sensitive << ( p_Result_6_6_fu_696_p4 );
    sensitive << ( p_Result_6_5_fu_626_p4 );
    sensitive << ( p_Result_6_4_fu_556_p4 );
    sensitive << ( p_Result_6_3_fu_486_p4 );
    sensitive << ( p_Result_6_2_fu_416_p4 );
    sensitive << ( p_Result_6_1_fu_346_p4 );
    sensitive << ( tmp_69_fu_282_p1 );

    SC_METHOD(thread_i_syn_in_s_fu_866_p9);
    sensitive << ( p_Result_7_7_fu_856_p4 );
    sensitive << ( p_Result_7_6_fu_706_p4 );
    sensitive << ( p_Result_7_5_fu_636_p4 );
    sensitive << ( p_Result_7_4_fu_566_p4 );
    sensitive << ( p_Result_7_3_fu_496_p4 );
    sensitive << ( p_Result_7_2_fu_426_p4 );
    sensitive << ( p_Result_7_1_fu_356_p4 );
    sensitive << ( p_Result_7_fu_286_p4 );

    SC_METHOD(thread_input00_V_blk_n_AR);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( m_axi_input00_V_ARREADY );

    SC_METHOD(thread_input00_V_blk_n_R);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( m_axi_input00_V_RVALID );

    SC_METHOD(thread_input01_V_blk_n_AR);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( m_axi_input01_V_ARREADY );

    SC_METHOD(thread_input01_V_blk_n_R);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( m_axi_input01_V_RVALID );

    SC_METHOD(thread_m_axi_input00_V_ARADDR);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_ce );
    sensitive << ( sum_cast_fu_238_p1 );
    sensitive << ( ap_reg_ioackin_m_axi_input00_V_ARREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_input00_V_ARBURST);

    SC_METHOD(thread_m_axi_input00_V_ARCACHE);

    SC_METHOD(thread_m_axi_input00_V_ARID);

    SC_METHOD(thread_m_axi_input00_V_ARLEN);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_ce );
    sensitive << ( ap_reg_ioackin_m_axi_input00_V_ARREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_input00_V_ARLOCK);

    SC_METHOD(thread_m_axi_input00_V_ARPROT);

    SC_METHOD(thread_m_axi_input00_V_ARQOS);

    SC_METHOD(thread_m_axi_input00_V_ARREGION);

    SC_METHOD(thread_m_axi_input00_V_ARSIZE);

    SC_METHOD(thread_m_axi_input00_V_ARUSER);

    SC_METHOD(thread_m_axi_input00_V_ARVALID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_ce );
    sensitive << ( ap_reg_ioackin_m_axi_input00_V_ARREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_input00_V_AWADDR);

    SC_METHOD(thread_m_axi_input00_V_AWBURST);

    SC_METHOD(thread_m_axi_input00_V_AWCACHE);

    SC_METHOD(thread_m_axi_input00_V_AWID);

    SC_METHOD(thread_m_axi_input00_V_AWLEN);

    SC_METHOD(thread_m_axi_input00_V_AWLOCK);

    SC_METHOD(thread_m_axi_input00_V_AWPROT);

    SC_METHOD(thread_m_axi_input00_V_AWQOS);

    SC_METHOD(thread_m_axi_input00_V_AWREGION);

    SC_METHOD(thread_m_axi_input00_V_AWSIZE);

    SC_METHOD(thread_m_axi_input00_V_AWUSER);

    SC_METHOD(thread_m_axi_input00_V_AWVALID);

    SC_METHOD(thread_m_axi_input00_V_BREADY);

    SC_METHOD(thread_m_axi_input00_V_RREADY);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_m_axi_input00_V_WDATA);

    SC_METHOD(thread_m_axi_input00_V_WID);

    SC_METHOD(thread_m_axi_input00_V_WLAST);

    SC_METHOD(thread_m_axi_input00_V_WSTRB);

    SC_METHOD(thread_m_axi_input00_V_WUSER);

    SC_METHOD(thread_m_axi_input00_V_WVALID);

    SC_METHOD(thread_m_axi_input01_V_ARADDR);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_ce );
    sensitive << ( sum3_cast_fu_248_p1 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( ap_reg_ioackin_m_axi_input01_V_ARREADY );

    SC_METHOD(thread_m_axi_input01_V_ARBURST);

    SC_METHOD(thread_m_axi_input01_V_ARCACHE);

    SC_METHOD(thread_m_axi_input01_V_ARID);

    SC_METHOD(thread_m_axi_input01_V_ARLEN);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( ap_reg_ioackin_m_axi_input01_V_ARREADY );

    SC_METHOD(thread_m_axi_input01_V_ARLOCK);

    SC_METHOD(thread_m_axi_input01_V_ARPROT);

    SC_METHOD(thread_m_axi_input01_V_ARQOS);

    SC_METHOD(thread_m_axi_input01_V_ARREGION);

    SC_METHOD(thread_m_axi_input01_V_ARSIZE);

    SC_METHOD(thread_m_axi_input01_V_ARUSER);

    SC_METHOD(thread_m_axi_input01_V_ARVALID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( ap_reg_ioackin_m_axi_input01_V_ARREADY );

    SC_METHOD(thread_m_axi_input01_V_AWADDR);

    SC_METHOD(thread_m_axi_input01_V_AWBURST);

    SC_METHOD(thread_m_axi_input01_V_AWCACHE);

    SC_METHOD(thread_m_axi_input01_V_AWID);

    SC_METHOD(thread_m_axi_input01_V_AWLEN);

    SC_METHOD(thread_m_axi_input01_V_AWLOCK);

    SC_METHOD(thread_m_axi_input01_V_AWPROT);

    SC_METHOD(thread_m_axi_input01_V_AWQOS);

    SC_METHOD(thread_m_axi_input01_V_AWREGION);

    SC_METHOD(thread_m_axi_input01_V_AWSIZE);

    SC_METHOD(thread_m_axi_input01_V_AWUSER);

    SC_METHOD(thread_m_axi_input01_V_AWVALID);

    SC_METHOD(thread_m_axi_input01_V_BREADY);

    SC_METHOD(thread_m_axi_input01_V_RREADY);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_m_axi_input01_V_WDATA);

    SC_METHOD(thread_m_axi_input01_V_WID);

    SC_METHOD(thread_m_axi_input01_V_WLAST);

    SC_METHOD(thread_m_axi_input01_V_WSTRB);

    SC_METHOD(thread_m_axi_input01_V_WUSER);

    SC_METHOD(thread_m_axi_input01_V_WVALID);

    SC_METHOD(thread_p_Result_10_fu_666_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_11_fu_736_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_1_fu_316_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_2_fu_386_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_3_fu_456_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_4_1_fu_326_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_4_2_fu_396_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_4_3_fu_466_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_4_4_fu_536_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_4_5_fu_606_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_4_6_fu_676_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_4_7_fu_766_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_4_fu_262_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_5_1_fu_336_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_5_2_fu_406_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_5_3_fu_476_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_5_4_fu_546_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_5_5_fu_616_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_5_6_fu_686_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_5_7_fu_796_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_5_fu_272_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_6_1_fu_346_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_6_2_fu_416_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_6_3_fu_486_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_6_4_fu_556_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_6_5_fu_626_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_6_6_fu_696_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_6_7_fu_826_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_6_fu_596_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_p_Result_7_1_fu_356_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_7_2_fu_426_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_7_3_fu_496_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_7_4_fu_566_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_7_5_fu_636_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_7_6_fu_706_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_7_7_fu_856_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_7_fu_286_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_8_1_fu_366_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_8_2_fu_436_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_8_3_fu_506_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_8_4_fu_576_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_8_5_fu_646_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_8_6_fu_716_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_8_7_fu_886_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_8_fu_296_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_9_1_fu_376_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_9_2_fu_446_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_9_3_fu_516_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_9_4_fu_586_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_9_5_fu_656_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_9_6_fu_726_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_9_7_fu_916_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_9_fu_306_p4);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_p_Result_s_fu_526_p4);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_r_ref_s_fu_896_p9);
    sensitive << ( p_Result_8_7_fu_886_p4 );
    sensitive << ( p_Result_8_6_fu_716_p4 );
    sensitive << ( p_Result_8_5_fu_646_p4 );
    sensitive << ( p_Result_8_4_fu_576_p4 );
    sensitive << ( p_Result_8_3_fu_506_p4 );
    sensitive << ( p_Result_8_2_fu_436_p4 );
    sensitive << ( p_Result_8_1_fu_366_p4 );
    sensitive << ( p_Result_8_fu_296_p4 );

    SC_METHOD(thread_sext2_cast_fu_228_p1);
    sensitive << ( input01_V_offset );

    SC_METHOD(thread_sext_cast_fu_218_p1);
    sensitive << ( input00_V_offset );

    SC_METHOD(thread_sum3_cast_fu_248_p1);
    sensitive << ( sum3_reg_993 );

    SC_METHOD(thread_sum3_fu_232_p2);
    sensitive << ( tmp_cast_fu_214_p1 );
    sensitive << ( sext2_cast_fu_228_p1 );

    SC_METHOD(thread_sum_cast_fu_238_p1);
    sensitive << ( sum_reg_988 );

    SC_METHOD(thread_sum_fu_222_p2);
    sensitive << ( sext_cast_fu_218_p1 );
    sensitive << ( tmp_cast_fu_214_p1 );

    SC_METHOD(thread_tmp_68_fu_258_p1);
    sensitive << ( m_axi_input00_V_RDATA );

    SC_METHOD(thread_tmp_69_fu_282_p1);
    sensitive << ( m_axi_input01_V_RDATA );

    SC_METHOD(thread_tmp_cast_fu_214_p1);
    sensitive << ( tmp_fu_210_p1 );

    SC_METHOD(thread_tmp_fu_210_p1);
    sensitive << ( i );

    SC_METHOD(thread_weighted_spikes_ex_s_fu_746_p9);
    sensitive << ( p_Result_11_fu_736_p4 );
    sensitive << ( p_Result_10_fu_666_p4 );
    sensitive << ( p_Result_6_fu_596_p4 );
    sensitive << ( p_Result_s_fu_526_p4 );
    sensitive << ( p_Result_3_fu_456_p4 );
    sensitive << ( p_Result_2_fu_386_p4 );
    sensitive << ( p_Result_1_fu_316_p4 );
    sensitive << ( tmp_68_fu_258_p1 );

    SC_METHOD(thread_weighted_spikes_in_s_fu_776_p9);
    sensitive << ( p_Result_4_7_fu_766_p4 );
    sensitive << ( p_Result_4_6_fu_676_p4 );
    sensitive << ( p_Result_4_5_fu_606_p4 );
    sensitive << ( p_Result_4_4_fu_536_p4 );
    sensitive << ( p_Result_4_3_fu_466_p4 );
    sensitive << ( p_Result_4_2_fu_396_p4 );
    sensitive << ( p_Result_4_1_fu_326_p4 );
    sensitive << ( p_Result_4_fu_262_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_input00_V_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_input01_V_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "update_indata_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_input00_V_AWVALID, "(port)m_axi_input00_V_AWVALID");
    sc_trace(mVcdFile, m_axi_input00_V_AWREADY, "(port)m_axi_input00_V_AWREADY");
    sc_trace(mVcdFile, m_axi_input00_V_AWADDR, "(port)m_axi_input00_V_AWADDR");
    sc_trace(mVcdFile, m_axi_input00_V_AWID, "(port)m_axi_input00_V_AWID");
    sc_trace(mVcdFile, m_axi_input00_V_AWLEN, "(port)m_axi_input00_V_AWLEN");
    sc_trace(mVcdFile, m_axi_input00_V_AWSIZE, "(port)m_axi_input00_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_input00_V_AWBURST, "(port)m_axi_input00_V_AWBURST");
    sc_trace(mVcdFile, m_axi_input00_V_AWLOCK, "(port)m_axi_input00_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_input00_V_AWCACHE, "(port)m_axi_input00_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_input00_V_AWPROT, "(port)m_axi_input00_V_AWPROT");
    sc_trace(mVcdFile, m_axi_input00_V_AWQOS, "(port)m_axi_input00_V_AWQOS");
    sc_trace(mVcdFile, m_axi_input00_V_AWREGION, "(port)m_axi_input00_V_AWREGION");
    sc_trace(mVcdFile, m_axi_input00_V_AWUSER, "(port)m_axi_input00_V_AWUSER");
    sc_trace(mVcdFile, m_axi_input00_V_WVALID, "(port)m_axi_input00_V_WVALID");
    sc_trace(mVcdFile, m_axi_input00_V_WREADY, "(port)m_axi_input00_V_WREADY");
    sc_trace(mVcdFile, m_axi_input00_V_WDATA, "(port)m_axi_input00_V_WDATA");
    sc_trace(mVcdFile, m_axi_input00_V_WSTRB, "(port)m_axi_input00_V_WSTRB");
    sc_trace(mVcdFile, m_axi_input00_V_WLAST, "(port)m_axi_input00_V_WLAST");
    sc_trace(mVcdFile, m_axi_input00_V_WID, "(port)m_axi_input00_V_WID");
    sc_trace(mVcdFile, m_axi_input00_V_WUSER, "(port)m_axi_input00_V_WUSER");
    sc_trace(mVcdFile, m_axi_input00_V_ARVALID, "(port)m_axi_input00_V_ARVALID");
    sc_trace(mVcdFile, m_axi_input00_V_ARREADY, "(port)m_axi_input00_V_ARREADY");
    sc_trace(mVcdFile, m_axi_input00_V_ARADDR, "(port)m_axi_input00_V_ARADDR");
    sc_trace(mVcdFile, m_axi_input00_V_ARID, "(port)m_axi_input00_V_ARID");
    sc_trace(mVcdFile, m_axi_input00_V_ARLEN, "(port)m_axi_input00_V_ARLEN");
    sc_trace(mVcdFile, m_axi_input00_V_ARSIZE, "(port)m_axi_input00_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_input00_V_ARBURST, "(port)m_axi_input00_V_ARBURST");
    sc_trace(mVcdFile, m_axi_input00_V_ARLOCK, "(port)m_axi_input00_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_input00_V_ARCACHE, "(port)m_axi_input00_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_input00_V_ARPROT, "(port)m_axi_input00_V_ARPROT");
    sc_trace(mVcdFile, m_axi_input00_V_ARQOS, "(port)m_axi_input00_V_ARQOS");
    sc_trace(mVcdFile, m_axi_input00_V_ARREGION, "(port)m_axi_input00_V_ARREGION");
    sc_trace(mVcdFile, m_axi_input00_V_ARUSER, "(port)m_axi_input00_V_ARUSER");
    sc_trace(mVcdFile, m_axi_input00_V_RVALID, "(port)m_axi_input00_V_RVALID");
    sc_trace(mVcdFile, m_axi_input00_V_RREADY, "(port)m_axi_input00_V_RREADY");
    sc_trace(mVcdFile, m_axi_input00_V_RDATA, "(port)m_axi_input00_V_RDATA");
    sc_trace(mVcdFile, m_axi_input00_V_RLAST, "(port)m_axi_input00_V_RLAST");
    sc_trace(mVcdFile, m_axi_input00_V_RID, "(port)m_axi_input00_V_RID");
    sc_trace(mVcdFile, m_axi_input00_V_RUSER, "(port)m_axi_input00_V_RUSER");
    sc_trace(mVcdFile, m_axi_input00_V_RRESP, "(port)m_axi_input00_V_RRESP");
    sc_trace(mVcdFile, m_axi_input00_V_BVALID, "(port)m_axi_input00_V_BVALID");
    sc_trace(mVcdFile, m_axi_input00_V_BREADY, "(port)m_axi_input00_V_BREADY");
    sc_trace(mVcdFile, m_axi_input00_V_BRESP, "(port)m_axi_input00_V_BRESP");
    sc_trace(mVcdFile, m_axi_input00_V_BID, "(port)m_axi_input00_V_BID");
    sc_trace(mVcdFile, m_axi_input00_V_BUSER, "(port)m_axi_input00_V_BUSER");
    sc_trace(mVcdFile, m_axi_input01_V_AWVALID, "(port)m_axi_input01_V_AWVALID");
    sc_trace(mVcdFile, m_axi_input01_V_AWREADY, "(port)m_axi_input01_V_AWREADY");
    sc_trace(mVcdFile, m_axi_input01_V_AWADDR, "(port)m_axi_input01_V_AWADDR");
    sc_trace(mVcdFile, m_axi_input01_V_AWID, "(port)m_axi_input01_V_AWID");
    sc_trace(mVcdFile, m_axi_input01_V_AWLEN, "(port)m_axi_input01_V_AWLEN");
    sc_trace(mVcdFile, m_axi_input01_V_AWSIZE, "(port)m_axi_input01_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_input01_V_AWBURST, "(port)m_axi_input01_V_AWBURST");
    sc_trace(mVcdFile, m_axi_input01_V_AWLOCK, "(port)m_axi_input01_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_input01_V_AWCACHE, "(port)m_axi_input01_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_input01_V_AWPROT, "(port)m_axi_input01_V_AWPROT");
    sc_trace(mVcdFile, m_axi_input01_V_AWQOS, "(port)m_axi_input01_V_AWQOS");
    sc_trace(mVcdFile, m_axi_input01_V_AWREGION, "(port)m_axi_input01_V_AWREGION");
    sc_trace(mVcdFile, m_axi_input01_V_AWUSER, "(port)m_axi_input01_V_AWUSER");
    sc_trace(mVcdFile, m_axi_input01_V_WVALID, "(port)m_axi_input01_V_WVALID");
    sc_trace(mVcdFile, m_axi_input01_V_WREADY, "(port)m_axi_input01_V_WREADY");
    sc_trace(mVcdFile, m_axi_input01_V_WDATA, "(port)m_axi_input01_V_WDATA");
    sc_trace(mVcdFile, m_axi_input01_V_WSTRB, "(port)m_axi_input01_V_WSTRB");
    sc_trace(mVcdFile, m_axi_input01_V_WLAST, "(port)m_axi_input01_V_WLAST");
    sc_trace(mVcdFile, m_axi_input01_V_WID, "(port)m_axi_input01_V_WID");
    sc_trace(mVcdFile, m_axi_input01_V_WUSER, "(port)m_axi_input01_V_WUSER");
    sc_trace(mVcdFile, m_axi_input01_V_ARVALID, "(port)m_axi_input01_V_ARVALID");
    sc_trace(mVcdFile, m_axi_input01_V_ARREADY, "(port)m_axi_input01_V_ARREADY");
    sc_trace(mVcdFile, m_axi_input01_V_ARADDR, "(port)m_axi_input01_V_ARADDR");
    sc_trace(mVcdFile, m_axi_input01_V_ARID, "(port)m_axi_input01_V_ARID");
    sc_trace(mVcdFile, m_axi_input01_V_ARLEN, "(port)m_axi_input01_V_ARLEN");
    sc_trace(mVcdFile, m_axi_input01_V_ARSIZE, "(port)m_axi_input01_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_input01_V_ARBURST, "(port)m_axi_input01_V_ARBURST");
    sc_trace(mVcdFile, m_axi_input01_V_ARLOCK, "(port)m_axi_input01_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_input01_V_ARCACHE, "(port)m_axi_input01_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_input01_V_ARPROT, "(port)m_axi_input01_V_ARPROT");
    sc_trace(mVcdFile, m_axi_input01_V_ARQOS, "(port)m_axi_input01_V_ARQOS");
    sc_trace(mVcdFile, m_axi_input01_V_ARREGION, "(port)m_axi_input01_V_ARREGION");
    sc_trace(mVcdFile, m_axi_input01_V_ARUSER, "(port)m_axi_input01_V_ARUSER");
    sc_trace(mVcdFile, m_axi_input01_V_RVALID, "(port)m_axi_input01_V_RVALID");
    sc_trace(mVcdFile, m_axi_input01_V_RREADY, "(port)m_axi_input01_V_RREADY");
    sc_trace(mVcdFile, m_axi_input01_V_RDATA, "(port)m_axi_input01_V_RDATA");
    sc_trace(mVcdFile, m_axi_input01_V_RLAST, "(port)m_axi_input01_V_RLAST");
    sc_trace(mVcdFile, m_axi_input01_V_RID, "(port)m_axi_input01_V_RID");
    sc_trace(mVcdFile, m_axi_input01_V_RUSER, "(port)m_axi_input01_V_RUSER");
    sc_trace(mVcdFile, m_axi_input01_V_RRESP, "(port)m_axi_input01_V_RRESP");
    sc_trace(mVcdFile, m_axi_input01_V_BVALID, "(port)m_axi_input01_V_BVALID");
    sc_trace(mVcdFile, m_axi_input01_V_BREADY, "(port)m_axi_input01_V_BREADY");
    sc_trace(mVcdFile, m_axi_input01_V_BRESP, "(port)m_axi_input01_V_BRESP");
    sc_trace(mVcdFile, m_axi_input01_V_BID, "(port)m_axi_input01_V_BID");
    sc_trace(mVcdFile, m_axi_input01_V_BUSER, "(port)m_axi_input01_V_BUSER");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
    sc_trace(mVcdFile, i, "(port)i");
    sc_trace(mVcdFile, input00_V_offset, "(port)input00_V_offset");
    sc_trace(mVcdFile, input01_V_offset, "(port)input01_V_offset");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, input00_V_blk_n_AR, "(port)input00_V_blk_n_AR");
    sc_trace(mVcdFile, input00_V_blk_n_R, "(port)input00_V_blk_n_R");
    sc_trace(mVcdFile, input01_V_blk_n_AR, "(port)input01_V_blk_n_AR");
    sc_trace(mVcdFile, input01_V_blk_n_R, "(port)input01_V_blk_n_R");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_input00_V_ARREADY, "ap_sig_ioackin_m_axi_input00_V_ARREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_input01_V_ARREADY, "ap_sig_ioackin_m_axi_input01_V_ARREADY");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter4, "ap_block_state5_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter5, "ap_block_state6_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter6, "ap_block_state7_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter7, "ap_block_state8_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter8, "ap_block_state9_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, sum_fu_222_p2, "sum_fu_222_p2");
    sc_trace(mVcdFile, sum_reg_988, "sum_reg_988");
    sc_trace(mVcdFile, sum3_fu_232_p2, "sum3_fu_232_p2");
    sc_trace(mVcdFile, sum3_reg_993, "sum3_reg_993");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, sum_cast_fu_238_p1, "sum_cast_fu_238_p1");
    sc_trace(mVcdFile, sum3_cast_fu_248_p1, "sum3_cast_fu_248_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_input00_V_ARREADY, "ap_reg_ioackin_m_axi_input00_V_ARREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_input01_V_ARREADY, "ap_reg_ioackin_m_axi_input01_V_ARREADY");
    sc_trace(mVcdFile, tmp_fu_210_p1, "tmp_fu_210_p1");
    sc_trace(mVcdFile, sext_cast_fu_218_p1, "sext_cast_fu_218_p1");
    sc_trace(mVcdFile, tmp_cast_fu_214_p1, "tmp_cast_fu_214_p1");
    sc_trace(mVcdFile, sext2_cast_fu_228_p1, "sext2_cast_fu_228_p1");
    sc_trace(mVcdFile, p_Result_11_fu_736_p4, "p_Result_11_fu_736_p4");
    sc_trace(mVcdFile, p_Result_10_fu_666_p4, "p_Result_10_fu_666_p4");
    sc_trace(mVcdFile, p_Result_6_fu_596_p4, "p_Result_6_fu_596_p4");
    sc_trace(mVcdFile, p_Result_s_fu_526_p4, "p_Result_s_fu_526_p4");
    sc_trace(mVcdFile, p_Result_3_fu_456_p4, "p_Result_3_fu_456_p4");
    sc_trace(mVcdFile, p_Result_2_fu_386_p4, "p_Result_2_fu_386_p4");
    sc_trace(mVcdFile, p_Result_1_fu_316_p4, "p_Result_1_fu_316_p4");
    sc_trace(mVcdFile, tmp_68_fu_258_p1, "tmp_68_fu_258_p1");
    sc_trace(mVcdFile, p_Result_4_7_fu_766_p4, "p_Result_4_7_fu_766_p4");
    sc_trace(mVcdFile, p_Result_4_6_fu_676_p4, "p_Result_4_6_fu_676_p4");
    sc_trace(mVcdFile, p_Result_4_5_fu_606_p4, "p_Result_4_5_fu_606_p4");
    sc_trace(mVcdFile, p_Result_4_4_fu_536_p4, "p_Result_4_4_fu_536_p4");
    sc_trace(mVcdFile, p_Result_4_3_fu_466_p4, "p_Result_4_3_fu_466_p4");
    sc_trace(mVcdFile, p_Result_4_2_fu_396_p4, "p_Result_4_2_fu_396_p4");
    sc_trace(mVcdFile, p_Result_4_1_fu_326_p4, "p_Result_4_1_fu_326_p4");
    sc_trace(mVcdFile, p_Result_4_fu_262_p4, "p_Result_4_fu_262_p4");
    sc_trace(mVcdFile, p_Result_5_7_fu_796_p4, "p_Result_5_7_fu_796_p4");
    sc_trace(mVcdFile, p_Result_5_6_fu_686_p4, "p_Result_5_6_fu_686_p4");
    sc_trace(mVcdFile, p_Result_5_5_fu_616_p4, "p_Result_5_5_fu_616_p4");
    sc_trace(mVcdFile, p_Result_5_4_fu_546_p4, "p_Result_5_4_fu_546_p4");
    sc_trace(mVcdFile, p_Result_5_3_fu_476_p4, "p_Result_5_3_fu_476_p4");
    sc_trace(mVcdFile, p_Result_5_2_fu_406_p4, "p_Result_5_2_fu_406_p4");
    sc_trace(mVcdFile, p_Result_5_1_fu_336_p4, "p_Result_5_1_fu_336_p4");
    sc_trace(mVcdFile, p_Result_5_fu_272_p4, "p_Result_5_fu_272_p4");
    sc_trace(mVcdFile, p_Result_6_7_fu_826_p4, "p_Result_6_7_fu_826_p4");
    sc_trace(mVcdFile, p_Result_6_6_fu_696_p4, "p_Result_6_6_fu_696_p4");
    sc_trace(mVcdFile, p_Result_6_5_fu_626_p4, "p_Result_6_5_fu_626_p4");
    sc_trace(mVcdFile, p_Result_6_4_fu_556_p4, "p_Result_6_4_fu_556_p4");
    sc_trace(mVcdFile, p_Result_6_3_fu_486_p4, "p_Result_6_3_fu_486_p4");
    sc_trace(mVcdFile, p_Result_6_2_fu_416_p4, "p_Result_6_2_fu_416_p4");
    sc_trace(mVcdFile, p_Result_6_1_fu_346_p4, "p_Result_6_1_fu_346_p4");
    sc_trace(mVcdFile, tmp_69_fu_282_p1, "tmp_69_fu_282_p1");
    sc_trace(mVcdFile, p_Result_7_7_fu_856_p4, "p_Result_7_7_fu_856_p4");
    sc_trace(mVcdFile, p_Result_7_6_fu_706_p4, "p_Result_7_6_fu_706_p4");
    sc_trace(mVcdFile, p_Result_7_5_fu_636_p4, "p_Result_7_5_fu_636_p4");
    sc_trace(mVcdFile, p_Result_7_4_fu_566_p4, "p_Result_7_4_fu_566_p4");
    sc_trace(mVcdFile, p_Result_7_3_fu_496_p4, "p_Result_7_3_fu_496_p4");
    sc_trace(mVcdFile, p_Result_7_2_fu_426_p4, "p_Result_7_2_fu_426_p4");
    sc_trace(mVcdFile, p_Result_7_1_fu_356_p4, "p_Result_7_1_fu_356_p4");
    sc_trace(mVcdFile, p_Result_7_fu_286_p4, "p_Result_7_fu_286_p4");
    sc_trace(mVcdFile, p_Result_8_7_fu_886_p4, "p_Result_8_7_fu_886_p4");
    sc_trace(mVcdFile, p_Result_8_6_fu_716_p4, "p_Result_8_6_fu_716_p4");
    sc_trace(mVcdFile, p_Result_8_5_fu_646_p4, "p_Result_8_5_fu_646_p4");
    sc_trace(mVcdFile, p_Result_8_4_fu_576_p4, "p_Result_8_4_fu_576_p4");
    sc_trace(mVcdFile, p_Result_8_3_fu_506_p4, "p_Result_8_3_fu_506_p4");
    sc_trace(mVcdFile, p_Result_8_2_fu_436_p4, "p_Result_8_2_fu_436_p4");
    sc_trace(mVcdFile, p_Result_8_1_fu_366_p4, "p_Result_8_1_fu_366_p4");
    sc_trace(mVcdFile, p_Result_8_fu_296_p4, "p_Result_8_fu_296_p4");
    sc_trace(mVcdFile, p_Result_9_7_fu_916_p4, "p_Result_9_7_fu_916_p4");
    sc_trace(mVcdFile, p_Result_9_6_fu_726_p4, "p_Result_9_6_fu_726_p4");
    sc_trace(mVcdFile, p_Result_9_5_fu_656_p4, "p_Result_9_5_fu_656_p4");
    sc_trace(mVcdFile, p_Result_9_4_fu_586_p4, "p_Result_9_4_fu_586_p4");
    sc_trace(mVcdFile, p_Result_9_3_fu_516_p4, "p_Result_9_3_fu_516_p4");
    sc_trace(mVcdFile, p_Result_9_2_fu_446_p4, "p_Result_9_2_fu_446_p4");
    sc_trace(mVcdFile, p_Result_9_1_fu_376_p4, "p_Result_9_1_fu_376_p4");
    sc_trace(mVcdFile, p_Result_9_fu_306_p4, "p_Result_9_fu_306_p4");
    sc_trace(mVcdFile, weighted_spikes_ex_s_fu_746_p9, "weighted_spikes_ex_s_fu_746_p9");
    sc_trace(mVcdFile, weighted_spikes_in_s_fu_776_p9, "weighted_spikes_in_s_fu_776_p9");
    sc_trace(mVcdFile, I_e_s_fu_806_p9, "I_e_s_fu_806_p9");
    sc_trace(mVcdFile, i_syn_ex_s_fu_836_p9, "i_syn_ex_s_fu_836_p9");
    sc_trace(mVcdFile, i_syn_in_s_fu_866_p9, "i_syn_in_s_fu_866_p9");
    sc_trace(mVcdFile, r_ref_s_fu_896_p9, "r_ref_s_fu_896_p9");
    sc_trace(mVcdFile, V_m_s_fu_926_p9, "V_m_s_fu_926_p9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to7, "ap_idle_pp0_0to7");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_900, "ap_condition_900");
#endif

    }
}

update_indata::~update_indata() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void update_indata::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_input00_V_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_900.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_m_axi_input00_V_ARREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axi_input00_V_ARREADY.read()) && 
                        esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
                ap_reg_ioackin_m_axi_input00_V_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_input01_V_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_900.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_m_axi_input01_V_ARREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, m_axi_input01_V_ARREADY.read()))) {
                ap_reg_ioackin_m_axi_input01_V_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        sum3_reg_993 = sum3_fu_232_p2.read();
        sum_reg_988 = sum_fu_222_p2.read();
    }
}

void update_indata::thread_I_e_s_fu_806_p9() {
    I_e_s_fu_806_p9 = esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(p_Result_5_7_fu_796_p4.read(), p_Result_5_6_fu_686_p4.read()), p_Result_5_5_fu_616_p4.read()), p_Result_5_4_fu_546_p4.read()), p_Result_5_3_fu_476_p4.read()), p_Result_5_2_fu_406_p4.read()), p_Result_5_1_fu_336_p4.read()), p_Result_5_fu_272_p4.read());
}

void update_indata::thread_V_m_s_fu_926_p9() {
    V_m_s_fu_926_p9 = esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(p_Result_9_7_fu_916_p4.read(), p_Result_9_6_fu_726_p4.read()), p_Result_9_5_fu_656_p4.read()), p_Result_9_4_fu_586_p4.read()), p_Result_9_3_fu_516_p4.read()), p_Result_9_2_fu_446_p4.read()), p_Result_9_1_fu_376_p4.read()), p_Result_9_fu_306_p4.read());
}

void update_indata::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void update_indata::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void update_indata::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, m_axi_input00_V_RVALID.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, m_axi_input01_V_RVALID.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())));
}

void update_indata::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, m_axi_input00_V_RVALID.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, m_axi_input01_V_RVALID.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())));
}

void update_indata::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, m_axi_input00_V_RVALID.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, m_axi_input01_V_RVALID.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())) || esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_0));
}

void update_indata::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0);
}

void update_indata::thread_ap_block_state2_io() {
    ap_block_state2_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_input00_V_ARREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_input01_V_ARREADY.read()));
}

void update_indata::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void update_indata::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void update_indata::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void update_indata::thread_ap_block_state5_pp0_stage0_iter4() {
    ap_block_state5_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void update_indata::thread_ap_block_state6_pp0_stage0_iter5() {
    ap_block_state6_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void update_indata::thread_ap_block_state7_pp0_stage0_iter6() {
    ap_block_state7_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void update_indata::thread_ap_block_state8_pp0_stage0_iter7() {
    ap_block_state8_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void update_indata::thread_ap_block_state9_pp0_stage0_iter8() {
    ap_block_state9_pp0_stage0_iter8 = (esl_seteq<1,1,1>(ap_const_logic_0, m_axi_input00_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_input01_V_RVALID.read()));
}

void update_indata::thread_ap_condition_900() {
    ap_condition_900 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1));
}

void update_indata::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void update_indata::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void update_indata::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void update_indata::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void update_indata::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void update_indata::thread_ap_idle_pp0_0to7() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()))) {
        ap_idle_pp0_0to7 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to7 = ap_const_logic_0;
    }
}

void update_indata::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void update_indata::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to7.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void update_indata::thread_ap_return_0() {
    ap_return_0 = weighted_spikes_ex_s_fu_746_p9.read();
}

void update_indata::thread_ap_return_1() {
    ap_return_1 = weighted_spikes_in_s_fu_776_p9.read();
}

void update_indata::thread_ap_return_2() {
    ap_return_2 = I_e_s_fu_806_p9.read();
}

void update_indata::thread_ap_return_3() {
    ap_return_3 = i_syn_ex_s_fu_836_p9.read();
}

void update_indata::thread_ap_return_4() {
    ap_return_4 = i_syn_in_s_fu_866_p9.read();
}

void update_indata::thread_ap_return_5() {
    ap_return_5 = r_ref_s_fu_896_p9.read();
}

void update_indata::thread_ap_return_6() {
    ap_return_6 = V_m_s_fu_926_p9.read();
}

void update_indata::thread_ap_sig_ioackin_m_axi_input00_V_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_input00_V_ARREADY.read())) {
        ap_sig_ioackin_m_axi_input00_V_ARREADY = m_axi_input00_V_ARREADY.read();
    } else {
        ap_sig_ioackin_m_axi_input00_V_ARREADY = ap_const_logic_1;
    }
}

void update_indata::thread_ap_sig_ioackin_m_axi_input01_V_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_input01_V_ARREADY.read())) {
        ap_sig_ioackin_m_axi_input01_V_ARREADY = m_axi_input01_V_ARREADY.read();
    } else {
        ap_sig_ioackin_m_axi_input01_V_ARREADY = ap_const_logic_1;
    }
}

void update_indata::thread_i_syn_ex_s_fu_836_p9() {
    i_syn_ex_s_fu_836_p9 = esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(p_Result_6_7_fu_826_p4.read(), p_Result_6_6_fu_696_p4.read()), p_Result_6_5_fu_626_p4.read()), p_Result_6_4_fu_556_p4.read()), p_Result_6_3_fu_486_p4.read()), p_Result_6_2_fu_416_p4.read()), p_Result_6_1_fu_346_p4.read()), tmp_69_fu_282_p1.read());
}

void update_indata::thread_i_syn_in_s_fu_866_p9() {
    i_syn_in_s_fu_866_p9 = esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(p_Result_7_7_fu_856_p4.read(), p_Result_7_6_fu_706_p4.read()), p_Result_7_5_fu_636_p4.read()), p_Result_7_4_fu_566_p4.read()), p_Result_7_3_fu_496_p4.read()), p_Result_7_2_fu_426_p4.read()), p_Result_7_1_fu_356_p4.read()), p_Result_7_fu_286_p4.read());
}

void update_indata::thread_input00_V_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        input00_V_blk_n_AR = m_axi_input00_V_ARREADY.read();
    } else {
        input00_V_blk_n_AR = ap_const_logic_1;
    }
}

void update_indata::thread_input00_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()))) {
        input00_V_blk_n_R = m_axi_input00_V_RVALID.read();
    } else {
        input00_V_blk_n_R = ap_const_logic_1;
    }
}

void update_indata::thread_input01_V_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        input01_V_blk_n_AR = m_axi_input01_V_ARREADY.read();
    } else {
        input01_V_blk_n_AR = ap_const_logic_1;
    }
}

void update_indata::thread_input01_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()))) {
        input01_V_blk_n_R = m_axi_input01_V_RVALID.read();
    } else {
        input01_V_blk_n_R = ap_const_logic_1;
    }
}

void update_indata::thread_m_axi_input00_V_ARADDR() {
    m_axi_input00_V_ARADDR =  (sc_lv<32>) (sum_cast_fu_238_p1.read());
}

void update_indata::thread_m_axi_input00_V_ARBURST() {
    m_axi_input00_V_ARBURST = ap_const_lv2_0;
}

void update_indata::thread_m_axi_input00_V_ARCACHE() {
    m_axi_input00_V_ARCACHE = ap_const_lv4_0;
}

void update_indata::thread_m_axi_input00_V_ARID() {
    m_axi_input00_V_ARID = ap_const_lv1_0;
}

void update_indata::thread_m_axi_input00_V_ARLEN() {
    m_axi_input00_V_ARLEN = ap_const_lv32_1;
}

void update_indata::thread_m_axi_input00_V_ARLOCK() {
    m_axi_input00_V_ARLOCK = ap_const_lv2_0;
}

void update_indata::thread_m_axi_input00_V_ARPROT() {
    m_axi_input00_V_ARPROT = ap_const_lv3_0;
}

void update_indata::thread_m_axi_input00_V_ARQOS() {
    m_axi_input00_V_ARQOS = ap_const_lv4_0;
}

void update_indata::thread_m_axi_input00_V_ARREGION() {
    m_axi_input00_V_ARREGION = ap_const_lv4_0;
}

void update_indata::thread_m_axi_input00_V_ARSIZE() {
    m_axi_input00_V_ARSIZE = ap_const_lv3_0;
}

void update_indata::thread_m_axi_input00_V_ARUSER() {
    m_axi_input00_V_ARUSER = ap_const_lv1_0;
}

void update_indata::thread_m_axi_input00_V_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_input00_V_ARREADY.read()))) {
        m_axi_input00_V_ARVALID = ap_const_logic_1;
    } else {
        m_axi_input00_V_ARVALID = ap_const_logic_0;
    }
}

void update_indata::thread_m_axi_input00_V_AWADDR() {
    m_axi_input00_V_AWADDR = ap_const_lv32_0;
}

void update_indata::thread_m_axi_input00_V_AWBURST() {
    m_axi_input00_V_AWBURST = ap_const_lv2_0;
}

void update_indata::thread_m_axi_input00_V_AWCACHE() {
    m_axi_input00_V_AWCACHE = ap_const_lv4_0;
}

void update_indata::thread_m_axi_input00_V_AWID() {
    m_axi_input00_V_AWID = ap_const_lv1_0;
}

void update_indata::thread_m_axi_input00_V_AWLEN() {
    m_axi_input00_V_AWLEN = ap_const_lv32_0;
}

void update_indata::thread_m_axi_input00_V_AWLOCK() {
    m_axi_input00_V_AWLOCK = ap_const_lv2_0;
}

void update_indata::thread_m_axi_input00_V_AWPROT() {
    m_axi_input00_V_AWPROT = ap_const_lv3_0;
}

void update_indata::thread_m_axi_input00_V_AWQOS() {
    m_axi_input00_V_AWQOS = ap_const_lv4_0;
}

void update_indata::thread_m_axi_input00_V_AWREGION() {
    m_axi_input00_V_AWREGION = ap_const_lv4_0;
}

void update_indata::thread_m_axi_input00_V_AWSIZE() {
    m_axi_input00_V_AWSIZE = ap_const_lv3_0;
}

void update_indata::thread_m_axi_input00_V_AWUSER() {
    m_axi_input00_V_AWUSER = ap_const_lv1_0;
}

void update_indata::thread_m_axi_input00_V_AWVALID() {
    m_axi_input00_V_AWVALID = ap_const_logic_0;
}

void update_indata::thread_m_axi_input00_V_BREADY() {
    m_axi_input00_V_BREADY = ap_const_logic_0;
}

void update_indata::thread_m_axi_input00_V_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        m_axi_input00_V_RREADY = ap_const_logic_1;
    } else {
        m_axi_input00_V_RREADY = ap_const_logic_0;
    }
}

void update_indata::thread_m_axi_input00_V_WDATA() {
    m_axi_input00_V_WDATA = ap_const_lv1024_lc_1;
}

void update_indata::thread_m_axi_input00_V_WID() {
    m_axi_input00_V_WID = ap_const_lv1_0;
}

void update_indata::thread_m_axi_input00_V_WLAST() {
    m_axi_input00_V_WLAST = ap_const_logic_0;
}

void update_indata::thread_m_axi_input00_V_WSTRB() {
    m_axi_input00_V_WSTRB = ap_const_lv128_lc_1;
}

void update_indata::thread_m_axi_input00_V_WUSER() {
    m_axi_input00_V_WUSER = ap_const_lv1_0;
}

void update_indata::thread_m_axi_input00_V_WVALID() {
    m_axi_input00_V_WVALID = ap_const_logic_0;
}

void update_indata::thread_m_axi_input01_V_ARADDR() {
    m_axi_input01_V_ARADDR =  (sc_lv<32>) (sum3_cast_fu_248_p1.read());
}

void update_indata::thread_m_axi_input01_V_ARBURST() {
    m_axi_input01_V_ARBURST = ap_const_lv2_0;
}

void update_indata::thread_m_axi_input01_V_ARCACHE() {
    m_axi_input01_V_ARCACHE = ap_const_lv4_0;
}

void update_indata::thread_m_axi_input01_V_ARID() {
    m_axi_input01_V_ARID = ap_const_lv1_0;
}

void update_indata::thread_m_axi_input01_V_ARLEN() {
    m_axi_input01_V_ARLEN = ap_const_lv32_1;
}

void update_indata::thread_m_axi_input01_V_ARLOCK() {
    m_axi_input01_V_ARLOCK = ap_const_lv2_0;
}

void update_indata::thread_m_axi_input01_V_ARPROT() {
    m_axi_input01_V_ARPROT = ap_const_lv3_0;
}

void update_indata::thread_m_axi_input01_V_ARQOS() {
    m_axi_input01_V_ARQOS = ap_const_lv4_0;
}

void update_indata::thread_m_axi_input01_V_ARREGION() {
    m_axi_input01_V_ARREGION = ap_const_lv4_0;
}

void update_indata::thread_m_axi_input01_V_ARSIZE() {
    m_axi_input01_V_ARSIZE = ap_const_lv3_0;
}

void update_indata::thread_m_axi_input01_V_ARUSER() {
    m_axi_input01_V_ARUSER = ap_const_lv1_0;
}

void update_indata::thread_m_axi_input01_V_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_input01_V_ARREADY.read()))) {
        m_axi_input01_V_ARVALID = ap_const_logic_1;
    } else {
        m_axi_input01_V_ARVALID = ap_const_logic_0;
    }
}

void update_indata::thread_m_axi_input01_V_AWADDR() {
    m_axi_input01_V_AWADDR = ap_const_lv32_0;
}

void update_indata::thread_m_axi_input01_V_AWBURST() {
    m_axi_input01_V_AWBURST = ap_const_lv2_0;
}

void update_indata::thread_m_axi_input01_V_AWCACHE() {
    m_axi_input01_V_AWCACHE = ap_const_lv4_0;
}

void update_indata::thread_m_axi_input01_V_AWID() {
    m_axi_input01_V_AWID = ap_const_lv1_0;
}

void update_indata::thread_m_axi_input01_V_AWLEN() {
    m_axi_input01_V_AWLEN = ap_const_lv32_0;
}

void update_indata::thread_m_axi_input01_V_AWLOCK() {
    m_axi_input01_V_AWLOCK = ap_const_lv2_0;
}

void update_indata::thread_m_axi_input01_V_AWPROT() {
    m_axi_input01_V_AWPROT = ap_const_lv3_0;
}

void update_indata::thread_m_axi_input01_V_AWQOS() {
    m_axi_input01_V_AWQOS = ap_const_lv4_0;
}

void update_indata::thread_m_axi_input01_V_AWREGION() {
    m_axi_input01_V_AWREGION = ap_const_lv4_0;
}

void update_indata::thread_m_axi_input01_V_AWSIZE() {
    m_axi_input01_V_AWSIZE = ap_const_lv3_0;
}

void update_indata::thread_m_axi_input01_V_AWUSER() {
    m_axi_input01_V_AWUSER = ap_const_lv1_0;
}

void update_indata::thread_m_axi_input01_V_AWVALID() {
    m_axi_input01_V_AWVALID = ap_const_logic_0;
}

void update_indata::thread_m_axi_input01_V_BREADY() {
    m_axi_input01_V_BREADY = ap_const_logic_0;
}

void update_indata::thread_m_axi_input01_V_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        m_axi_input01_V_RREADY = ap_const_logic_1;
    } else {
        m_axi_input01_V_RREADY = ap_const_logic_0;
    }
}

void update_indata::thread_m_axi_input01_V_WDATA() {
    m_axi_input01_V_WDATA = ap_const_lv1024_lc_1;
}

void update_indata::thread_m_axi_input01_V_WID() {
    m_axi_input01_V_WID = ap_const_lv1_0;
}

void update_indata::thread_m_axi_input01_V_WLAST() {
    m_axi_input01_V_WLAST = ap_const_logic_0;
}

void update_indata::thread_m_axi_input01_V_WSTRB() {
    m_axi_input01_V_WSTRB = ap_const_lv128_lc_1;
}

void update_indata::thread_m_axi_input01_V_WUSER() {
    m_axi_input01_V_WUSER = ap_const_lv1_0;
}

void update_indata::thread_m_axi_input01_V_WVALID() {
    m_axi_input01_V_WVALID = ap_const_logic_0;
}

void update_indata::thread_p_Result_10_fu_666_p4() {
    p_Result_10_fu_666_p4 = m_axi_input00_V_RDATA.read().range(799, 768);
}

void update_indata::thread_p_Result_11_fu_736_p4() {
    p_Result_11_fu_736_p4 = m_axi_input00_V_RDATA.read().range(927, 896);
}

void update_indata::thread_p_Result_1_fu_316_p4() {
    p_Result_1_fu_316_p4 = m_axi_input00_V_RDATA.read().range(159, 128);
}

void update_indata::thread_p_Result_2_fu_386_p4() {
    p_Result_2_fu_386_p4 = m_axi_input00_V_RDATA.read().range(287, 256);
}

void update_indata::thread_p_Result_3_fu_456_p4() {
    p_Result_3_fu_456_p4 = m_axi_input00_V_RDATA.read().range(415, 384);
}

void update_indata::thread_p_Result_4_1_fu_326_p4() {
    p_Result_4_1_fu_326_p4 = m_axi_input00_V_RDATA.read().range(191, 160);
}

void update_indata::thread_p_Result_4_2_fu_396_p4() {
    p_Result_4_2_fu_396_p4 = m_axi_input00_V_RDATA.read().range(319, 288);
}

void update_indata::thread_p_Result_4_3_fu_466_p4() {
    p_Result_4_3_fu_466_p4 = m_axi_input00_V_RDATA.read().range(447, 416);
}

void update_indata::thread_p_Result_4_4_fu_536_p4() {
    p_Result_4_4_fu_536_p4 = m_axi_input00_V_RDATA.read().range(575, 544);
}

void update_indata::thread_p_Result_4_5_fu_606_p4() {
    p_Result_4_5_fu_606_p4 = m_axi_input00_V_RDATA.read().range(703, 672);
}

void update_indata::thread_p_Result_4_6_fu_676_p4() {
    p_Result_4_6_fu_676_p4 = m_axi_input00_V_RDATA.read().range(831, 800);
}

void update_indata::thread_p_Result_4_7_fu_766_p4() {
    p_Result_4_7_fu_766_p4 = m_axi_input00_V_RDATA.read().range(959, 928);
}

void update_indata::thread_p_Result_4_fu_262_p4() {
    p_Result_4_fu_262_p4 = m_axi_input00_V_RDATA.read().range(63, 32);
}

void update_indata::thread_p_Result_5_1_fu_336_p4() {
    p_Result_5_1_fu_336_p4 = m_axi_input00_V_RDATA.read().range(223, 192);
}

void update_indata::thread_p_Result_5_2_fu_406_p4() {
    p_Result_5_2_fu_406_p4 = m_axi_input00_V_RDATA.read().range(351, 320);
}

void update_indata::thread_p_Result_5_3_fu_476_p4() {
    p_Result_5_3_fu_476_p4 = m_axi_input00_V_RDATA.read().range(479, 448);
}

void update_indata::thread_p_Result_5_4_fu_546_p4() {
    p_Result_5_4_fu_546_p4 = m_axi_input00_V_RDATA.read().range(607, 576);
}

void update_indata::thread_p_Result_5_5_fu_616_p4() {
    p_Result_5_5_fu_616_p4 = m_axi_input00_V_RDATA.read().range(735, 704);
}

void update_indata::thread_p_Result_5_6_fu_686_p4() {
    p_Result_5_6_fu_686_p4 = m_axi_input00_V_RDATA.read().range(863, 832);
}

void update_indata::thread_p_Result_5_7_fu_796_p4() {
    p_Result_5_7_fu_796_p4 = m_axi_input00_V_RDATA.read().range(991, 960);
}

void update_indata::thread_p_Result_5_fu_272_p4() {
    p_Result_5_fu_272_p4 = m_axi_input00_V_RDATA.read().range(95, 64);
}

void update_indata::thread_p_Result_6_1_fu_346_p4() {
    p_Result_6_1_fu_346_p4 = m_axi_input01_V_RDATA.read().range(159, 128);
}

void update_indata::thread_p_Result_6_2_fu_416_p4() {
    p_Result_6_2_fu_416_p4 = m_axi_input01_V_RDATA.read().range(287, 256);
}

void update_indata::thread_p_Result_6_3_fu_486_p4() {
    p_Result_6_3_fu_486_p4 = m_axi_input01_V_RDATA.read().range(415, 384);
}

void update_indata::thread_p_Result_6_4_fu_556_p4() {
    p_Result_6_4_fu_556_p4 = m_axi_input01_V_RDATA.read().range(543, 512);
}

void update_indata::thread_p_Result_6_5_fu_626_p4() {
    p_Result_6_5_fu_626_p4 = m_axi_input01_V_RDATA.read().range(671, 640);
}

void update_indata::thread_p_Result_6_6_fu_696_p4() {
    p_Result_6_6_fu_696_p4 = m_axi_input01_V_RDATA.read().range(799, 768);
}

void update_indata::thread_p_Result_6_7_fu_826_p4() {
    p_Result_6_7_fu_826_p4 = m_axi_input01_V_RDATA.read().range(927, 896);
}

void update_indata::thread_p_Result_6_fu_596_p4() {
    p_Result_6_fu_596_p4 = m_axi_input00_V_RDATA.read().range(671, 640);
}

void update_indata::thread_p_Result_7_1_fu_356_p4() {
    p_Result_7_1_fu_356_p4 = m_axi_input01_V_RDATA.read().range(191, 160);
}

void update_indata::thread_p_Result_7_2_fu_426_p4() {
    p_Result_7_2_fu_426_p4 = m_axi_input01_V_RDATA.read().range(319, 288);
}

void update_indata::thread_p_Result_7_3_fu_496_p4() {
    p_Result_7_3_fu_496_p4 = m_axi_input01_V_RDATA.read().range(447, 416);
}

void update_indata::thread_p_Result_7_4_fu_566_p4() {
    p_Result_7_4_fu_566_p4 = m_axi_input01_V_RDATA.read().range(575, 544);
}

void update_indata::thread_p_Result_7_5_fu_636_p4() {
    p_Result_7_5_fu_636_p4 = m_axi_input01_V_RDATA.read().range(703, 672);
}

void update_indata::thread_p_Result_7_6_fu_706_p4() {
    p_Result_7_6_fu_706_p4 = m_axi_input01_V_RDATA.read().range(831, 800);
}

void update_indata::thread_p_Result_7_7_fu_856_p4() {
    p_Result_7_7_fu_856_p4 = m_axi_input01_V_RDATA.read().range(959, 928);
}

void update_indata::thread_p_Result_7_fu_286_p4() {
    p_Result_7_fu_286_p4 = m_axi_input01_V_RDATA.read().range(63, 32);
}

void update_indata::thread_p_Result_8_1_fu_366_p4() {
    p_Result_8_1_fu_366_p4 = m_axi_input01_V_RDATA.read().range(223, 192);
}

void update_indata::thread_p_Result_8_2_fu_436_p4() {
    p_Result_8_2_fu_436_p4 = m_axi_input01_V_RDATA.read().range(351, 320);
}

void update_indata::thread_p_Result_8_3_fu_506_p4() {
    p_Result_8_3_fu_506_p4 = m_axi_input01_V_RDATA.read().range(479, 448);
}

void update_indata::thread_p_Result_8_4_fu_576_p4() {
    p_Result_8_4_fu_576_p4 = m_axi_input01_V_RDATA.read().range(607, 576);
}

void update_indata::thread_p_Result_8_5_fu_646_p4() {
    p_Result_8_5_fu_646_p4 = m_axi_input01_V_RDATA.read().range(735, 704);
}

void update_indata::thread_p_Result_8_6_fu_716_p4() {
    p_Result_8_6_fu_716_p4 = m_axi_input01_V_RDATA.read().range(863, 832);
}

void update_indata::thread_p_Result_8_7_fu_886_p4() {
    p_Result_8_7_fu_886_p4 = m_axi_input01_V_RDATA.read().range(991, 960);
}

void update_indata::thread_p_Result_8_fu_296_p4() {
    p_Result_8_fu_296_p4 = m_axi_input01_V_RDATA.read().range(95, 64);
}

void update_indata::thread_p_Result_9_1_fu_376_p4() {
    p_Result_9_1_fu_376_p4 = m_axi_input01_V_RDATA.read().range(255, 224);
}

void update_indata::thread_p_Result_9_2_fu_446_p4() {
    p_Result_9_2_fu_446_p4 = m_axi_input01_V_RDATA.read().range(383, 352);
}

void update_indata::thread_p_Result_9_3_fu_516_p4() {
    p_Result_9_3_fu_516_p4 = m_axi_input01_V_RDATA.read().range(511, 480);
}

void update_indata::thread_p_Result_9_4_fu_586_p4() {
    p_Result_9_4_fu_586_p4 = m_axi_input01_V_RDATA.read().range(639, 608);
}

void update_indata::thread_p_Result_9_5_fu_656_p4() {
    p_Result_9_5_fu_656_p4 = m_axi_input01_V_RDATA.read().range(767, 736);
}

void update_indata::thread_p_Result_9_6_fu_726_p4() {
    p_Result_9_6_fu_726_p4 = m_axi_input01_V_RDATA.read().range(895, 864);
}

void update_indata::thread_p_Result_9_7_fu_916_p4() {
    p_Result_9_7_fu_916_p4 = m_axi_input01_V_RDATA.read().range(1023, 992);
}

void update_indata::thread_p_Result_9_fu_306_p4() {
    p_Result_9_fu_306_p4 = m_axi_input01_V_RDATA.read().range(127, 96);
}

void update_indata::thread_p_Result_s_fu_526_p4() {
    p_Result_s_fu_526_p4 = m_axi_input00_V_RDATA.read().range(543, 512);
}

void update_indata::thread_r_ref_s_fu_896_p9() {
    r_ref_s_fu_896_p9 = esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(p_Result_8_7_fu_886_p4.read(), p_Result_8_6_fu_716_p4.read()), p_Result_8_5_fu_646_p4.read()), p_Result_8_4_fu_576_p4.read()), p_Result_8_3_fu_506_p4.read()), p_Result_8_2_fu_436_p4.read()), p_Result_8_1_fu_366_p4.read()), p_Result_8_fu_296_p4.read());
}

void update_indata::thread_sext2_cast_fu_228_p1() {
    sext2_cast_fu_228_p1 = esl_zext<26,25>(input01_V_offset.read());
}

void update_indata::thread_sext_cast_fu_218_p1() {
    sext_cast_fu_218_p1 = esl_zext<26,25>(input00_V_offset.read());
}

void update_indata::thread_sum3_cast_fu_248_p1() {
    sum3_cast_fu_248_p1 = esl_zext<64,26>(sum3_reg_993.read());
}

void update_indata::thread_sum3_fu_232_p2() {
    sum3_fu_232_p2 = (!sext2_cast_fu_228_p1.read().is_01() || !tmp_cast_fu_214_p1.read().is_01())? sc_lv<26>(): (sc_biguint<26>(sext2_cast_fu_228_p1.read()) + sc_biguint<26>(tmp_cast_fu_214_p1.read()));
}

void update_indata::thread_sum_cast_fu_238_p1() {
    sum_cast_fu_238_p1 = esl_zext<64,26>(sum_reg_988.read());
}

void update_indata::thread_sum_fu_222_p2() {
    sum_fu_222_p2 = (!sext_cast_fu_218_p1.read().is_01() || !tmp_cast_fu_214_p1.read().is_01())? sc_lv<26>(): (sc_biguint<26>(sext_cast_fu_218_p1.read()) + sc_biguint<26>(tmp_cast_fu_214_p1.read()));
}

void update_indata::thread_tmp_68_fu_258_p1() {
    tmp_68_fu_258_p1 = m_axi_input00_V_RDATA.read().range(32-1, 0);
}

void update_indata::thread_tmp_69_fu_282_p1() {
    tmp_69_fu_282_p1 = m_axi_input01_V_RDATA.read().range(32-1, 0);
}

void update_indata::thread_tmp_cast_fu_214_p1() {
    tmp_cast_fu_214_p1 = esl_zext<26,18>(tmp_fu_210_p1.read());
}

void update_indata::thread_tmp_fu_210_p1() {
    tmp_fu_210_p1 = i.read().range(18-1, 0);
}

void update_indata::thread_weighted_spikes_ex_s_fu_746_p9() {
    weighted_spikes_ex_s_fu_746_p9 = esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(p_Result_11_fu_736_p4.read(), p_Result_10_fu_666_p4.read()), p_Result_6_fu_596_p4.read()), p_Result_s_fu_526_p4.read()), p_Result_3_fu_456_p4.read()), p_Result_2_fu_386_p4.read()), p_Result_1_fu_316_p4.read()), tmp_68_fu_258_p1.read());
}

void update_indata::thread_weighted_spikes_in_s_fu_776_p9() {
    weighted_spikes_in_s_fu_776_p9 = esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(p_Result_4_7_fu_766_p4.read(), p_Result_4_6_fu_676_p4.read()), p_Result_4_5_fu_606_p4.read()), p_Result_4_4_fu_536_p4.read()), p_Result_4_3_fu_466_p4.read()), p_Result_4_2_fu_396_p4.read()), p_Result_4_1_fu_326_p4.read()), p_Result_4_fu_262_p4.read());
}

void update_indata::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

