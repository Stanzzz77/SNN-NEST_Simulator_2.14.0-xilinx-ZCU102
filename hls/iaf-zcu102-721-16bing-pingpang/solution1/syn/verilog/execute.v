// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module execute (
        ap_clk,
        ap_rst,
        i,
        P20_s,
        P22_s,
        P11ex_s,
        P11in_s,
        P21ex_s,
        P21in_s,
        Theta_s,
        RefractoryCounts_s,
        V_reset_s,
        weighted_spikes_ex_s,
        weighted_spikes_in_s,
        I_e_read,
        i_syn_ex_read,
        i_syn_in_read,
        r_ref_read,
        V_m_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [29:0] i;
input  [31:0] P20_s;
input  [31:0] P22_s;
input  [31:0] P11ex_s;
input  [31:0] P11in_s;
input  [31:0] P21ex_s;
input  [31:0] P21in_s;
input  [31:0] Theta_s;
input  [31:0] RefractoryCounts_s;
input  [31:0] V_reset_s;
input  [255:0] weighted_spikes_ex_s;
input  [255:0] weighted_spikes_in_s;
input  [255:0] I_e_read;
input  [255:0] i_syn_ex_read;
input  [255:0] i_syn_in_read;
input  [255:0] r_ref_read;
input  [255:0] V_m_read;
output  [255:0] ap_return_0;
output  [255:0] ap_return_1;
output  [255:0] ap_return_2;
output  [255:0] ap_return_3;
output  [255:0] ap_return_4;
output  [255:0] ap_return_5;
input   ap_ce;

reg[255:0] ap_return_0;
reg[255:0] ap_return_1;
reg[255:0] ap_return_2;
reg[255:0] ap_return_3;
reg[255:0] ap_return_4;
reg[255:0] ap_return_5;

reg   [31:0] V_reset_read_reg_2886;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] V_reset_read_reg_2886_pp0_iter1_reg;
reg   [31:0] V_reset_read_reg_2886_pp0_iter2_reg;
reg   [31:0] V_reset_read_reg_2886_pp0_iter3_reg;
reg   [31:0] V_reset_read_reg_2886_pp0_iter4_reg;
reg   [31:0] V_reset_read_reg_2886_pp0_iter5_reg;
reg   [31:0] V_reset_read_reg_2886_pp0_iter6_reg;
reg   [31:0] V_reset_read_reg_2886_pp0_iter7_reg;
reg   [31:0] V_reset_read_reg_2886_pp0_iter8_reg;
reg   [31:0] V_reset_read_reg_2886_pp0_iter9_reg;
reg   [31:0] RefractoryCounts_re_reg_2891;
reg   [31:0] RefractoryCounts_re_reg_2891_pp0_iter1_reg;
reg   [31:0] RefractoryCounts_re_reg_2891_pp0_iter2_reg;
reg   [31:0] RefractoryCounts_re_reg_2891_pp0_iter3_reg;
reg   [31:0] RefractoryCounts_re_reg_2891_pp0_iter4_reg;
reg   [31:0] RefractoryCounts_re_reg_2891_pp0_iter5_reg;
reg   [31:0] RefractoryCounts_re_reg_2891_pp0_iter6_reg;
reg   [31:0] RefractoryCounts_re_reg_2891_pp0_iter7_reg;
reg   [31:0] RefractoryCounts_re_reg_2891_pp0_iter8_reg;
reg   [31:0] RefractoryCounts_re_reg_2891_pp0_iter9_reg;
reg   [31:0] Theta_read_reg_2896;
reg   [31:0] Theta_read_reg_2896_pp0_iter1_reg;
reg   [31:0] Theta_read_reg_2896_pp0_iter2_reg;
reg   [31:0] Theta_read_reg_2896_pp0_iter3_reg;
reg   [31:0] Theta_read_reg_2896_pp0_iter4_reg;
reg   [31:0] Theta_read_reg_2896_pp0_iter5_reg;
reg   [31:0] Theta_read_reg_2896_pp0_iter6_reg;
reg   [31:0] Theta_read_reg_2896_pp0_iter7_reg;
reg   [31:0] Theta_read_reg_2896_pp0_iter8_reg;
reg   [31:0] Theta_read_reg_2896_pp0_iter9_reg;
wire   [28:0] tmp_71_fu_768_p1;
reg   [28:0] tmp_71_reg_2981;
reg   [28:0] tmp_71_reg_2981_pp0_iter1_reg;
reg   [28:0] tmp_71_reg_2981_pp0_iter2_reg;
reg   [28:0] tmp_71_reg_2981_pp0_iter3_reg;
reg   [28:0] tmp_71_reg_2981_pp0_iter4_reg;
reg   [28:0] tmp_71_reg_2981_pp0_iter5_reg;
reg   [28:0] tmp_71_reg_2981_pp0_iter6_reg;
reg   [28:0] tmp_71_reg_2981_pp0_iter7_reg;
reg   [28:0] tmp_71_reg_2981_pp0_iter8_reg;
reg   [28:0] tmp_71_reg_2981_pp0_iter9_reg;
wire   [31:0] tmp_s_fu_776_p1;
reg   [31:0] tmp_s_reg_2986;
reg   [31:0] tmp_s_reg_2986_pp0_iter1_reg;
reg   [31:0] tmp_s_reg_2986_pp0_iter2_reg;
reg   [31:0] tmp_s_reg_2986_pp0_iter3_reg;
reg   [31:0] tmp_s_reg_2986_pp0_iter4_reg;
reg   [31:0] tmp_s_reg_2986_pp0_iter5_reg;
reg   [31:0] tmp_s_reg_2986_pp0_iter6_reg;
reg   [31:0] tmp_s_reg_2986_pp0_iter7_reg;
reg   [31:0] tmp_s_reg_2986_pp0_iter8_reg;
reg   [31:0] tmp_s_reg_2986_pp0_iter9_reg;
wire   [0:0] tmp_5_fu_813_p2;
reg   [0:0] tmp_5_reg_2992;
reg   [0:0] tmp_5_reg_2992_pp0_iter1_reg;
reg   [0:0] tmp_5_reg_2992_pp0_iter2_reg;
reg   [0:0] tmp_5_reg_2992_pp0_iter3_reg;
reg   [0:0] tmp_5_reg_2992_pp0_iter4_reg;
reg   [0:0] tmp_5_reg_2992_pp0_iter5_reg;
reg   [0:0] tmp_5_reg_2992_pp0_iter6_reg;
reg   [0:0] tmp_5_reg_2992_pp0_iter7_reg;
reg   [0:0] tmp_5_reg_2992_pp0_iter8_reg;
reg   [0:0] tmp_5_reg_2992_pp0_iter9_reg;
wire   [31:0] tmp_68_fu_823_p1;
reg   [31:0] tmp_68_reg_2998;
reg   [31:0] tmp_68_reg_2998_pp0_iter1_reg;
reg   [31:0] tmp_68_reg_2998_pp0_iter2_reg;
reg   [31:0] tmp_68_reg_2998_pp0_iter3_reg;
reg   [31:0] tmp_68_reg_2998_pp0_iter4_reg;
reg   [31:0] tmp_68_reg_2998_pp0_iter5_reg;
reg   [31:0] tmp_68_reg_2998_pp0_iter6_reg;
reg   [31:0] tmp_68_reg_2998_pp0_iter7_reg;
reg   [31:0] tmp_68_reg_2998_pp0_iter8_reg;
wire   [31:0] tmp_69_fu_832_p1;
wire   [31:0] tmp_70_fu_842_p1;
wire   [31:0] tmp_174_fu_857_p1;
reg   [31:0] tmp_174_reg_3021;
reg   [31:0] tmp_174_reg_3021_pp0_iter1_reg;
wire   [31:0] tmp_205_fu_861_p1;
reg   [31:0] tmp_205_reg_3026;
reg   [31:0] tmp_205_reg_3026_pp0_iter1_reg;
wire   [31:0] tmp_86_fu_875_p1;
reg   [31:0] tmp_86_reg_3031;
reg   [31:0] tmp_86_reg_3031_pp0_iter1_reg;
reg   [31:0] tmp_86_reg_3031_pp0_iter2_reg;
reg   [31:0] tmp_86_reg_3031_pp0_iter3_reg;
reg   [31:0] tmp_86_reg_3031_pp0_iter4_reg;
reg   [31:0] tmp_86_reg_3031_pp0_iter5_reg;
reg   [31:0] tmp_86_reg_3031_pp0_iter6_reg;
reg   [31:0] tmp_86_reg_3031_pp0_iter7_reg;
reg   [31:0] tmp_86_reg_3031_pp0_iter8_reg;
reg   [31:0] tmp_86_reg_3031_pp0_iter9_reg;
wire   [0:0] tmp_23_fu_918_p2;
reg   [0:0] tmp_23_reg_3037;
reg   [0:0] tmp_23_reg_3037_pp0_iter1_reg;
reg   [0:0] tmp_23_reg_3037_pp0_iter2_reg;
reg   [0:0] tmp_23_reg_3037_pp0_iter3_reg;
reg   [0:0] tmp_23_reg_3037_pp0_iter4_reg;
reg   [0:0] tmp_23_reg_3037_pp0_iter5_reg;
reg   [0:0] tmp_23_reg_3037_pp0_iter6_reg;
reg   [0:0] tmp_23_reg_3037_pp0_iter7_reg;
reg   [0:0] tmp_23_reg_3037_pp0_iter8_reg;
reg   [0:0] tmp_23_reg_3037_pp0_iter9_reg;
wire   [31:0] tmp_88_fu_934_p1;
reg   [31:0] tmp_88_reg_3043;
reg   [31:0] tmp_88_reg_3043_pp0_iter1_reg;
reg   [31:0] tmp_88_reg_3043_pp0_iter2_reg;
reg   [31:0] tmp_88_reg_3043_pp0_iter3_reg;
reg   [31:0] tmp_88_reg_3043_pp0_iter4_reg;
reg   [31:0] tmp_88_reg_3043_pp0_iter5_reg;
reg   [31:0] tmp_88_reg_3043_pp0_iter6_reg;
reg   [31:0] tmp_88_reg_3043_pp0_iter7_reg;
reg   [31:0] tmp_88_reg_3043_pp0_iter8_reg;
wire   [31:0] tmp_90_fu_949_p1;
wire   [31:0] tmp_92_fu_965_p1;
reg   [31:0] tmp_95_reg_3066;
reg   [31:0] tmp_95_reg_3066_pp0_iter1_reg;
reg   [31:0] tmp_98_reg_3071;
reg   [31:0] tmp_98_reg_3071_pp0_iter1_reg;
wire   [31:0] tmp_103_fu_1016_p1;
reg   [31:0] tmp_103_reg_3076;
reg   [31:0] tmp_103_reg_3076_pp0_iter1_reg;
reg   [31:0] tmp_103_reg_3076_pp0_iter2_reg;
reg   [31:0] tmp_103_reg_3076_pp0_iter3_reg;
reg   [31:0] tmp_103_reg_3076_pp0_iter4_reg;
reg   [31:0] tmp_103_reg_3076_pp0_iter5_reg;
reg   [31:0] tmp_103_reg_3076_pp0_iter6_reg;
reg   [31:0] tmp_103_reg_3076_pp0_iter7_reg;
reg   [31:0] tmp_103_reg_3076_pp0_iter8_reg;
reg   [31:0] tmp_103_reg_3076_pp0_iter9_reg;
wire   [0:0] tmp_55_fu_1059_p2;
reg   [0:0] tmp_55_reg_3082;
reg   [0:0] tmp_55_reg_3082_pp0_iter1_reg;
reg   [0:0] tmp_55_reg_3082_pp0_iter2_reg;
reg   [0:0] tmp_55_reg_3082_pp0_iter3_reg;
reg   [0:0] tmp_55_reg_3082_pp0_iter4_reg;
reg   [0:0] tmp_55_reg_3082_pp0_iter5_reg;
reg   [0:0] tmp_55_reg_3082_pp0_iter6_reg;
reg   [0:0] tmp_55_reg_3082_pp0_iter7_reg;
reg   [0:0] tmp_55_reg_3082_pp0_iter8_reg;
reg   [0:0] tmp_55_reg_3082_pp0_iter9_reg;
wire   [31:0] tmp_105_fu_1075_p1;
reg   [31:0] tmp_105_reg_3088;
reg   [31:0] tmp_105_reg_3088_pp0_iter1_reg;
reg   [31:0] tmp_105_reg_3088_pp0_iter2_reg;
reg   [31:0] tmp_105_reg_3088_pp0_iter3_reg;
reg   [31:0] tmp_105_reg_3088_pp0_iter4_reg;
reg   [31:0] tmp_105_reg_3088_pp0_iter5_reg;
reg   [31:0] tmp_105_reg_3088_pp0_iter6_reg;
reg   [31:0] tmp_105_reg_3088_pp0_iter7_reg;
reg   [31:0] tmp_105_reg_3088_pp0_iter8_reg;
wire   [31:0] tmp_107_fu_1090_p1;
wire   [31:0] tmp_109_fu_1106_p1;
reg   [31:0] tmp_112_reg_3111;
reg   [31:0] tmp_112_reg_3111_pp0_iter1_reg;
reg   [31:0] tmp_115_reg_3116;
reg   [31:0] tmp_115_reg_3116_pp0_iter1_reg;
wire   [31:0] tmp_120_fu_1157_p1;
reg   [31:0] tmp_120_reg_3121;
reg   [31:0] tmp_120_reg_3121_pp0_iter1_reg;
reg   [31:0] tmp_120_reg_3121_pp0_iter2_reg;
reg   [31:0] tmp_120_reg_3121_pp0_iter3_reg;
reg   [31:0] tmp_120_reg_3121_pp0_iter4_reg;
reg   [31:0] tmp_120_reg_3121_pp0_iter5_reg;
reg   [31:0] tmp_120_reg_3121_pp0_iter6_reg;
reg   [31:0] tmp_120_reg_3121_pp0_iter7_reg;
reg   [31:0] tmp_120_reg_3121_pp0_iter8_reg;
reg   [31:0] tmp_120_reg_3121_pp0_iter9_reg;
wire   [0:0] tmp_125_fu_1200_p2;
reg   [0:0] tmp_125_reg_3127;
reg   [0:0] tmp_125_reg_3127_pp0_iter1_reg;
reg   [0:0] tmp_125_reg_3127_pp0_iter2_reg;
reg   [0:0] tmp_125_reg_3127_pp0_iter3_reg;
reg   [0:0] tmp_125_reg_3127_pp0_iter4_reg;
reg   [0:0] tmp_125_reg_3127_pp0_iter5_reg;
reg   [0:0] tmp_125_reg_3127_pp0_iter6_reg;
reg   [0:0] tmp_125_reg_3127_pp0_iter7_reg;
reg   [0:0] tmp_125_reg_3127_pp0_iter8_reg;
reg   [0:0] tmp_125_reg_3127_pp0_iter9_reg;
wire   [31:0] tmp_127_fu_1216_p1;
reg   [31:0] tmp_127_reg_3133;
reg   [31:0] tmp_127_reg_3133_pp0_iter1_reg;
reg   [31:0] tmp_127_reg_3133_pp0_iter2_reg;
reg   [31:0] tmp_127_reg_3133_pp0_iter3_reg;
reg   [31:0] tmp_127_reg_3133_pp0_iter4_reg;
reg   [31:0] tmp_127_reg_3133_pp0_iter5_reg;
reg   [31:0] tmp_127_reg_3133_pp0_iter6_reg;
reg   [31:0] tmp_127_reg_3133_pp0_iter7_reg;
reg   [31:0] tmp_127_reg_3133_pp0_iter8_reg;
wire   [31:0] tmp_129_fu_1231_p1;
wire   [31:0] tmp_131_fu_1247_p1;
reg   [31:0] tmp_134_reg_3156;
reg   [31:0] tmp_134_reg_3156_pp0_iter1_reg;
reg   [31:0] tmp_137_reg_3161;
reg   [31:0] tmp_137_reg_3161_pp0_iter1_reg;
wire   [31:0] tmp_151_fu_1298_p1;
reg   [31:0] tmp_151_reg_3166;
reg   [31:0] tmp_151_reg_3166_pp0_iter1_reg;
reg   [31:0] tmp_151_reg_3166_pp0_iter2_reg;
reg   [31:0] tmp_151_reg_3166_pp0_iter3_reg;
reg   [31:0] tmp_151_reg_3166_pp0_iter4_reg;
reg   [31:0] tmp_151_reg_3166_pp0_iter5_reg;
reg   [31:0] tmp_151_reg_3166_pp0_iter6_reg;
reg   [31:0] tmp_151_reg_3166_pp0_iter7_reg;
reg   [31:0] tmp_151_reg_3166_pp0_iter8_reg;
reg   [31:0] tmp_151_reg_3166_pp0_iter9_reg;
wire   [0:0] tmp_156_fu_1341_p2;
reg   [0:0] tmp_156_reg_3172;
reg   [0:0] tmp_156_reg_3172_pp0_iter1_reg;
reg   [0:0] tmp_156_reg_3172_pp0_iter2_reg;
reg   [0:0] tmp_156_reg_3172_pp0_iter3_reg;
reg   [0:0] tmp_156_reg_3172_pp0_iter4_reg;
reg   [0:0] tmp_156_reg_3172_pp0_iter5_reg;
reg   [0:0] tmp_156_reg_3172_pp0_iter6_reg;
reg   [0:0] tmp_156_reg_3172_pp0_iter7_reg;
reg   [0:0] tmp_156_reg_3172_pp0_iter8_reg;
reg   [0:0] tmp_156_reg_3172_pp0_iter9_reg;
wire   [31:0] tmp_158_fu_1357_p1;
reg   [31:0] tmp_158_reg_3178;
reg   [31:0] tmp_158_reg_3178_pp0_iter1_reg;
reg   [31:0] tmp_158_reg_3178_pp0_iter2_reg;
reg   [31:0] tmp_158_reg_3178_pp0_iter3_reg;
reg   [31:0] tmp_158_reg_3178_pp0_iter4_reg;
reg   [31:0] tmp_158_reg_3178_pp0_iter5_reg;
reg   [31:0] tmp_158_reg_3178_pp0_iter6_reg;
reg   [31:0] tmp_158_reg_3178_pp0_iter7_reg;
reg   [31:0] tmp_158_reg_3178_pp0_iter8_reg;
wire   [31:0] tmp_160_fu_1372_p1;
wire   [31:0] tmp_162_fu_1388_p1;
reg   [31:0] tmp_165_reg_3201;
reg   [31:0] tmp_165_reg_3201_pp0_iter1_reg;
reg   [31:0] tmp_168_reg_3206;
reg   [31:0] tmp_168_reg_3206_pp0_iter1_reg;
wire   [31:0] tmp_182_fu_1439_p1;
reg   [31:0] tmp_182_reg_3211;
reg   [31:0] tmp_182_reg_3211_pp0_iter1_reg;
reg   [31:0] tmp_182_reg_3211_pp0_iter2_reg;
reg   [31:0] tmp_182_reg_3211_pp0_iter3_reg;
reg   [31:0] tmp_182_reg_3211_pp0_iter4_reg;
reg   [31:0] tmp_182_reg_3211_pp0_iter5_reg;
reg   [31:0] tmp_182_reg_3211_pp0_iter6_reg;
reg   [31:0] tmp_182_reg_3211_pp0_iter7_reg;
reg   [31:0] tmp_182_reg_3211_pp0_iter8_reg;
reg   [31:0] tmp_182_reg_3211_pp0_iter9_reg;
wire   [0:0] tmp_187_fu_1482_p2;
reg   [0:0] tmp_187_reg_3217;
reg   [0:0] tmp_187_reg_3217_pp0_iter1_reg;
reg   [0:0] tmp_187_reg_3217_pp0_iter2_reg;
reg   [0:0] tmp_187_reg_3217_pp0_iter3_reg;
reg   [0:0] tmp_187_reg_3217_pp0_iter4_reg;
reg   [0:0] tmp_187_reg_3217_pp0_iter5_reg;
reg   [0:0] tmp_187_reg_3217_pp0_iter6_reg;
reg   [0:0] tmp_187_reg_3217_pp0_iter7_reg;
reg   [0:0] tmp_187_reg_3217_pp0_iter8_reg;
reg   [0:0] tmp_187_reg_3217_pp0_iter9_reg;
wire   [31:0] tmp_189_fu_1498_p1;
reg   [31:0] tmp_189_reg_3223;
reg   [31:0] tmp_189_reg_3223_pp0_iter1_reg;
reg   [31:0] tmp_189_reg_3223_pp0_iter2_reg;
reg   [31:0] tmp_189_reg_3223_pp0_iter3_reg;
reg   [31:0] tmp_189_reg_3223_pp0_iter4_reg;
reg   [31:0] tmp_189_reg_3223_pp0_iter5_reg;
reg   [31:0] tmp_189_reg_3223_pp0_iter6_reg;
reg   [31:0] tmp_189_reg_3223_pp0_iter7_reg;
reg   [31:0] tmp_189_reg_3223_pp0_iter8_reg;
wire   [31:0] tmp_191_fu_1513_p1;
wire   [31:0] tmp_193_fu_1529_p1;
reg   [31:0] tmp_196_reg_3246;
reg   [31:0] tmp_196_reg_3246_pp0_iter1_reg;
reg   [31:0] tmp_199_reg_3251;
reg   [31:0] tmp_199_reg_3251_pp0_iter1_reg;
wire   [31:0] tmp_213_fu_1580_p1;
reg   [31:0] tmp_213_reg_3256;
reg   [31:0] tmp_213_reg_3256_pp0_iter1_reg;
reg   [31:0] tmp_213_reg_3256_pp0_iter2_reg;
reg   [31:0] tmp_213_reg_3256_pp0_iter3_reg;
reg   [31:0] tmp_213_reg_3256_pp0_iter4_reg;
reg   [31:0] tmp_213_reg_3256_pp0_iter5_reg;
reg   [31:0] tmp_213_reg_3256_pp0_iter6_reg;
reg   [31:0] tmp_213_reg_3256_pp0_iter7_reg;
reg   [31:0] tmp_213_reg_3256_pp0_iter8_reg;
reg   [31:0] tmp_213_reg_3256_pp0_iter9_reg;
wire   [0:0] tmp_218_fu_1623_p2;
reg   [0:0] tmp_218_reg_3262;
reg   [0:0] tmp_218_reg_3262_pp0_iter1_reg;
reg   [0:0] tmp_218_reg_3262_pp0_iter2_reg;
reg   [0:0] tmp_218_reg_3262_pp0_iter3_reg;
reg   [0:0] tmp_218_reg_3262_pp0_iter4_reg;
reg   [0:0] tmp_218_reg_3262_pp0_iter5_reg;
reg   [0:0] tmp_218_reg_3262_pp0_iter6_reg;
reg   [0:0] tmp_218_reg_3262_pp0_iter7_reg;
reg   [0:0] tmp_218_reg_3262_pp0_iter8_reg;
reg   [0:0] tmp_218_reg_3262_pp0_iter9_reg;
wire   [31:0] tmp_220_fu_1639_p1;
reg   [31:0] tmp_220_reg_3268;
reg   [31:0] tmp_220_reg_3268_pp0_iter1_reg;
reg   [31:0] tmp_220_reg_3268_pp0_iter2_reg;
reg   [31:0] tmp_220_reg_3268_pp0_iter3_reg;
reg   [31:0] tmp_220_reg_3268_pp0_iter4_reg;
reg   [31:0] tmp_220_reg_3268_pp0_iter5_reg;
reg   [31:0] tmp_220_reg_3268_pp0_iter6_reg;
reg   [31:0] tmp_220_reg_3268_pp0_iter7_reg;
reg   [31:0] tmp_220_reg_3268_pp0_iter8_reg;
wire   [31:0] tmp_222_fu_1654_p1;
wire   [31:0] tmp_224_fu_1670_p1;
reg   [31:0] tmp_227_reg_3291;
reg   [31:0] tmp_227_reg_3291_pp0_iter1_reg;
reg   [31:0] tmp_230_reg_3296;
reg   [31:0] tmp_230_reg_3296_pp0_iter1_reg;
wire   [31:0] tmp_244_fu_1721_p1;
reg   [31:0] tmp_244_reg_3301;
reg   [31:0] tmp_244_reg_3301_pp0_iter1_reg;
reg   [31:0] tmp_244_reg_3301_pp0_iter2_reg;
reg   [31:0] tmp_244_reg_3301_pp0_iter3_reg;
reg   [31:0] tmp_244_reg_3301_pp0_iter4_reg;
reg   [31:0] tmp_244_reg_3301_pp0_iter5_reg;
reg   [31:0] tmp_244_reg_3301_pp0_iter6_reg;
reg   [31:0] tmp_244_reg_3301_pp0_iter7_reg;
reg   [31:0] tmp_244_reg_3301_pp0_iter8_reg;
reg   [31:0] tmp_244_reg_3301_pp0_iter9_reg;
wire   [0:0] tmp_249_fu_1764_p2;
reg   [0:0] tmp_249_reg_3307;
reg   [0:0] tmp_249_reg_3307_pp0_iter1_reg;
reg   [0:0] tmp_249_reg_3307_pp0_iter2_reg;
reg   [0:0] tmp_249_reg_3307_pp0_iter3_reg;
reg   [0:0] tmp_249_reg_3307_pp0_iter4_reg;
reg   [0:0] tmp_249_reg_3307_pp0_iter5_reg;
reg   [0:0] tmp_249_reg_3307_pp0_iter6_reg;
reg   [0:0] tmp_249_reg_3307_pp0_iter7_reg;
reg   [0:0] tmp_249_reg_3307_pp0_iter8_reg;
reg   [0:0] tmp_249_reg_3307_pp0_iter9_reg;
wire   [31:0] tmp_251_fu_1780_p1;
reg   [31:0] tmp_251_reg_3313;
reg   [31:0] tmp_251_reg_3313_pp0_iter1_reg;
reg   [31:0] tmp_251_reg_3313_pp0_iter2_reg;
reg   [31:0] tmp_251_reg_3313_pp0_iter3_reg;
reg   [31:0] tmp_251_reg_3313_pp0_iter4_reg;
reg   [31:0] tmp_251_reg_3313_pp0_iter5_reg;
reg   [31:0] tmp_251_reg_3313_pp0_iter6_reg;
reg   [31:0] tmp_251_reg_3313_pp0_iter7_reg;
reg   [31:0] tmp_251_reg_3313_pp0_iter8_reg;
wire   [31:0] tmp_253_fu_1795_p1;
wire   [31:0] tmp_255_fu_1811_p1;
reg   [31:0] tmp_258_reg_3336;
reg   [31:0] tmp_258_reg_3336_pp0_iter1_reg;
reg   [31:0] tmp_262_reg_3341;
reg   [31:0] tmp_262_reg_3341_pp0_iter1_reg;
wire   [31:0] grp_fu_456_p2;
reg   [31:0] tmp_35_reg_3346;
wire   [31:0] grp_fu_461_p2;
reg   [31:0] tmp_36_reg_3351;
wire   [31:0] grp_fu_466_p2;
reg   [31:0] tmp_37_reg_3356;
wire   [31:0] grp_fu_471_p2;
reg   [31:0] tmp_38_reg_3361;
wire   [31:0] grp_fu_476_p2;
reg   [31:0] tmp_45_reg_3366;
wire   [31:0] grp_fu_481_p2;
reg   [31:0] tmp_46_reg_3371;
wire   [31:0] grp_fu_486_p2;
reg   [31:0] tmp_35_1_reg_3376;
wire   [31:0] grp_fu_491_p2;
reg   [31:0] tmp_36_1_reg_3381;
wire   [31:0] grp_fu_496_p2;
reg   [31:0] tmp_37_1_reg_3386;
wire   [31:0] grp_fu_501_p2;
reg   [31:0] tmp_38_1_reg_3391;
wire   [31:0] grp_fu_506_p2;
reg   [31:0] tmp_45_1_reg_3396;
wire   [31:0] grp_fu_511_p2;
reg   [31:0] tmp_46_1_reg_3401;
wire   [31:0] grp_fu_516_p2;
reg   [31:0] tmp_35_2_reg_3406;
wire   [31:0] grp_fu_521_p2;
reg   [31:0] tmp_36_2_reg_3411;
wire   [31:0] grp_fu_526_p2;
reg   [31:0] tmp_37_2_reg_3416;
wire   [31:0] grp_fu_531_p2;
reg   [31:0] tmp_38_2_reg_3421;
wire   [31:0] grp_fu_536_p2;
reg   [31:0] tmp_45_2_reg_3426;
wire   [31:0] grp_fu_541_p2;
reg   [31:0] tmp_46_2_reg_3431;
wire   [31:0] grp_fu_546_p2;
reg   [31:0] tmp_35_3_reg_3436;
wire   [31:0] grp_fu_551_p2;
reg   [31:0] tmp_36_3_reg_3441;
wire   [31:0] grp_fu_556_p2;
reg   [31:0] tmp_37_3_reg_3446;
wire   [31:0] grp_fu_561_p2;
reg   [31:0] tmp_38_3_reg_3451;
wire   [31:0] grp_fu_566_p2;
reg   [31:0] tmp_45_3_reg_3456;
wire   [31:0] grp_fu_571_p2;
reg   [31:0] tmp_46_3_reg_3461;
wire   [31:0] grp_fu_576_p2;
reg   [31:0] tmp_35_4_reg_3466;
wire   [31:0] grp_fu_581_p2;
reg   [31:0] tmp_36_4_reg_3471;
wire   [31:0] grp_fu_586_p2;
reg   [31:0] tmp_37_4_reg_3476;
wire   [31:0] grp_fu_591_p2;
reg   [31:0] tmp_38_4_reg_3481;
wire   [31:0] grp_fu_596_p2;
reg   [31:0] tmp_45_4_reg_3486;
wire   [31:0] grp_fu_601_p2;
reg   [31:0] tmp_46_4_reg_3491;
wire   [31:0] grp_fu_606_p2;
reg   [31:0] tmp_35_5_reg_3496;
wire   [31:0] grp_fu_611_p2;
reg   [31:0] tmp_36_5_reg_3501;
wire   [31:0] grp_fu_616_p2;
reg   [31:0] tmp_37_5_reg_3506;
wire   [31:0] grp_fu_621_p2;
reg   [31:0] tmp_38_5_reg_3511;
wire   [31:0] grp_fu_626_p2;
reg   [31:0] tmp_45_5_reg_3516;
wire   [31:0] grp_fu_631_p2;
reg   [31:0] tmp_46_5_reg_3521;
wire   [31:0] grp_fu_636_p2;
reg   [31:0] tmp_35_6_reg_3526;
wire   [31:0] grp_fu_641_p2;
reg   [31:0] tmp_36_6_reg_3531;
wire   [31:0] grp_fu_646_p2;
reg   [31:0] tmp_37_6_reg_3536;
wire   [31:0] grp_fu_651_p2;
reg   [31:0] tmp_38_6_reg_3541;
wire   [31:0] grp_fu_656_p2;
reg   [31:0] tmp_45_6_reg_3546;
wire   [31:0] grp_fu_661_p2;
reg   [31:0] tmp_46_6_reg_3551;
wire   [31:0] grp_fu_666_p2;
reg   [31:0] tmp_35_7_reg_3556;
wire   [31:0] grp_fu_671_p2;
reg   [31:0] tmp_36_7_reg_3561;
wire   [31:0] grp_fu_676_p2;
reg   [31:0] tmp_37_7_reg_3566;
wire   [31:0] grp_fu_681_p2;
reg   [31:0] tmp_38_7_reg_3571;
wire   [31:0] grp_fu_686_p2;
reg   [31:0] tmp_45_7_reg_3576;
wire   [31:0] grp_fu_691_p2;
reg   [31:0] tmp_46_7_reg_3581;
wire   [31:0] grp_fu_256_p2;
reg   [31:0] tmp_39_reg_3666;
wire   [31:0] grp_fu_260_p2;
reg   [31:0] tmp_40_reg_3671;
wire   [31:0] grp_fu_264_p2;
reg   [31:0] tmp_47_reg_3676;
reg   [31:0] tmp_47_reg_3676_pp0_iter6_reg;
reg   [31:0] tmp_47_reg_3676_pp0_iter7_reg;
reg   [31:0] tmp_47_reg_3676_pp0_iter8_reg;
reg   [31:0] tmp_47_reg_3676_pp0_iter9_reg;
wire   [31:0] grp_fu_268_p2;
reg   [31:0] tmp_48_reg_3681;
reg   [31:0] tmp_48_reg_3681_pp0_iter6_reg;
reg   [31:0] tmp_48_reg_3681_pp0_iter7_reg;
reg   [31:0] tmp_48_reg_3681_pp0_iter8_reg;
reg   [31:0] tmp_48_reg_3681_pp0_iter9_reg;
wire   [31:0] grp_fu_272_p2;
reg   [31:0] tmp_39_1_reg_3686;
wire   [31:0] grp_fu_276_p2;
reg   [31:0] tmp_40_1_reg_3691;
wire   [31:0] grp_fu_280_p2;
reg   [31:0] tmp_47_1_reg_3696;
reg   [31:0] tmp_47_1_reg_3696_pp0_iter6_reg;
reg   [31:0] tmp_47_1_reg_3696_pp0_iter7_reg;
reg   [31:0] tmp_47_1_reg_3696_pp0_iter8_reg;
reg   [31:0] tmp_47_1_reg_3696_pp0_iter9_reg;
wire   [31:0] grp_fu_284_p2;
reg   [31:0] tmp_48_1_reg_3701;
reg   [31:0] tmp_48_1_reg_3701_pp0_iter6_reg;
reg   [31:0] tmp_48_1_reg_3701_pp0_iter7_reg;
reg   [31:0] tmp_48_1_reg_3701_pp0_iter8_reg;
reg   [31:0] tmp_48_1_reg_3701_pp0_iter9_reg;
wire   [31:0] grp_fu_288_p2;
reg   [31:0] tmp_39_2_reg_3706;
wire   [31:0] grp_fu_292_p2;
reg   [31:0] tmp_40_2_reg_3711;
wire   [31:0] grp_fu_296_p2;
reg   [31:0] tmp_47_2_reg_3716;
reg   [31:0] tmp_47_2_reg_3716_pp0_iter6_reg;
reg   [31:0] tmp_47_2_reg_3716_pp0_iter7_reg;
reg   [31:0] tmp_47_2_reg_3716_pp0_iter8_reg;
reg   [31:0] tmp_47_2_reg_3716_pp0_iter9_reg;
wire   [31:0] grp_fu_300_p2;
reg   [31:0] tmp_48_2_reg_3721;
reg   [31:0] tmp_48_2_reg_3721_pp0_iter6_reg;
reg   [31:0] tmp_48_2_reg_3721_pp0_iter7_reg;
reg   [31:0] tmp_48_2_reg_3721_pp0_iter8_reg;
reg   [31:0] tmp_48_2_reg_3721_pp0_iter9_reg;
wire   [31:0] grp_fu_304_p2;
reg   [31:0] tmp_39_3_reg_3726;
wire   [31:0] grp_fu_308_p2;
reg   [31:0] tmp_40_3_reg_3731;
wire   [31:0] grp_fu_312_p2;
reg   [31:0] tmp_47_3_reg_3736;
reg   [31:0] tmp_47_3_reg_3736_pp0_iter6_reg;
reg   [31:0] tmp_47_3_reg_3736_pp0_iter7_reg;
reg   [31:0] tmp_47_3_reg_3736_pp0_iter8_reg;
reg   [31:0] tmp_47_3_reg_3736_pp0_iter9_reg;
wire   [31:0] grp_fu_316_p2;
reg   [31:0] tmp_48_3_reg_3741;
reg   [31:0] tmp_48_3_reg_3741_pp0_iter6_reg;
reg   [31:0] tmp_48_3_reg_3741_pp0_iter7_reg;
reg   [31:0] tmp_48_3_reg_3741_pp0_iter8_reg;
reg   [31:0] tmp_48_3_reg_3741_pp0_iter9_reg;
wire   [31:0] grp_fu_320_p2;
reg   [31:0] tmp_39_4_reg_3746;
wire   [31:0] grp_fu_324_p2;
reg   [31:0] tmp_40_4_reg_3751;
wire   [31:0] grp_fu_328_p2;
reg   [31:0] tmp_47_4_reg_3756;
reg   [31:0] tmp_47_4_reg_3756_pp0_iter6_reg;
reg   [31:0] tmp_47_4_reg_3756_pp0_iter7_reg;
reg   [31:0] tmp_47_4_reg_3756_pp0_iter8_reg;
reg   [31:0] tmp_47_4_reg_3756_pp0_iter9_reg;
wire   [31:0] grp_fu_332_p2;
reg   [31:0] tmp_48_4_reg_3761;
reg   [31:0] tmp_48_4_reg_3761_pp0_iter6_reg;
reg   [31:0] tmp_48_4_reg_3761_pp0_iter7_reg;
reg   [31:0] tmp_48_4_reg_3761_pp0_iter8_reg;
reg   [31:0] tmp_48_4_reg_3761_pp0_iter9_reg;
wire   [31:0] grp_fu_336_p2;
reg   [31:0] tmp_39_5_reg_3766;
wire   [31:0] grp_fu_340_p2;
reg   [31:0] tmp_40_5_reg_3771;
wire   [31:0] grp_fu_344_p2;
reg   [31:0] tmp_47_5_reg_3776;
reg   [31:0] tmp_47_5_reg_3776_pp0_iter6_reg;
reg   [31:0] tmp_47_5_reg_3776_pp0_iter7_reg;
reg   [31:0] tmp_47_5_reg_3776_pp0_iter8_reg;
reg   [31:0] tmp_47_5_reg_3776_pp0_iter9_reg;
wire   [31:0] grp_fu_348_p2;
reg   [31:0] tmp_48_5_reg_3781;
reg   [31:0] tmp_48_5_reg_3781_pp0_iter6_reg;
reg   [31:0] tmp_48_5_reg_3781_pp0_iter7_reg;
reg   [31:0] tmp_48_5_reg_3781_pp0_iter8_reg;
reg   [31:0] tmp_48_5_reg_3781_pp0_iter9_reg;
wire   [31:0] grp_fu_352_p2;
reg   [31:0] tmp_39_6_reg_3786;
wire   [31:0] grp_fu_356_p2;
reg   [31:0] tmp_40_6_reg_3791;
wire   [31:0] grp_fu_360_p2;
reg   [31:0] tmp_47_6_reg_3796;
reg   [31:0] tmp_47_6_reg_3796_pp0_iter6_reg;
reg   [31:0] tmp_47_6_reg_3796_pp0_iter7_reg;
reg   [31:0] tmp_47_6_reg_3796_pp0_iter8_reg;
reg   [31:0] tmp_47_6_reg_3796_pp0_iter9_reg;
wire   [31:0] grp_fu_364_p2;
reg   [31:0] tmp_48_6_reg_3801;
reg   [31:0] tmp_48_6_reg_3801_pp0_iter6_reg;
reg   [31:0] tmp_48_6_reg_3801_pp0_iter7_reg;
reg   [31:0] tmp_48_6_reg_3801_pp0_iter8_reg;
reg   [31:0] tmp_48_6_reg_3801_pp0_iter9_reg;
wire   [31:0] grp_fu_368_p2;
reg   [31:0] tmp_39_7_reg_3806;
wire   [31:0] grp_fu_372_p2;
reg   [31:0] tmp_40_7_reg_3811;
wire   [31:0] grp_fu_376_p2;
reg   [31:0] tmp_47_7_reg_3816;
reg   [31:0] tmp_47_7_reg_3816_pp0_iter6_reg;
reg   [31:0] tmp_47_7_reg_3816_pp0_iter7_reg;
reg   [31:0] tmp_47_7_reg_3816_pp0_iter8_reg;
reg   [31:0] tmp_47_7_reg_3816_pp0_iter9_reg;
wire   [31:0] grp_fu_380_p2;
reg   [31:0] tmp_48_7_reg_3821;
reg   [31:0] tmp_48_7_reg_3821_pp0_iter6_reg;
reg   [31:0] tmp_48_7_reg_3821_pp0_iter7_reg;
reg   [31:0] tmp_48_7_reg_3821_pp0_iter8_reg;
reg   [31:0] tmp_48_7_reg_3821_pp0_iter9_reg;
wire   [31:0] tmp_43_fu_1916_p3;
reg   [31:0] tmp_43_reg_3826;
wire   [31:0] tmp_43_1_fu_1922_p3;
reg   [31:0] tmp_43_1_reg_3832;
wire   [31:0] tmp_43_2_fu_1928_p3;
reg   [31:0] tmp_43_2_reg_3838;
wire   [31:0] tmp_43_3_fu_1934_p3;
reg   [31:0] tmp_43_3_reg_3844;
wire   [31:0] tmp_43_4_fu_1940_p3;
reg   [31:0] tmp_43_4_reg_3850;
wire   [31:0] tmp_43_5_fu_1946_p3;
reg   [31:0] tmp_43_5_reg_3856;
wire   [31:0] tmp_43_6_fu_1952_p3;
reg   [31:0] tmp_43_6_reg_3862;
wire   [31:0] tmp_43_7_fu_1958_p3;
reg   [31:0] tmp_43_7_reg_3868;
wire    ap_block_pp0_stage0;
wire   [31:0] grp_fu_264_p1;
wire   [31:0] grp_fu_268_p1;
wire   [31:0] grp_fu_280_p1;
wire   [31:0] grp_fu_284_p1;
wire   [31:0] grp_fu_296_p1;
wire   [31:0] grp_fu_300_p1;
wire   [31:0] grp_fu_312_p1;
wire   [31:0] grp_fu_316_p1;
wire   [31:0] grp_fu_328_p1;
wire   [31:0] grp_fu_332_p1;
wire   [31:0] grp_fu_344_p1;
wire   [31:0] grp_fu_348_p1;
wire   [31:0] grp_fu_360_p1;
wire   [31:0] grp_fu_364_p1;
wire   [31:0] grp_fu_376_p1;
wire   [31:0] grp_fu_380_p1;
wire   [31:0] grp_fu_456_p0;
wire   [31:0] grp_fu_471_p0;
wire   [31:0] grp_fu_486_p0;
wire   [31:0] grp_fu_501_p0;
wire   [31:0] grp_fu_516_p0;
wire   [31:0] grp_fu_531_p0;
wire   [31:0] grp_fu_546_p0;
wire   [31:0] grp_fu_561_p0;
wire   [31:0] grp_fu_576_p0;
wire   [31:0] grp_fu_591_p0;
wire   [31:0] grp_fu_606_p0;
wire   [31:0] grp_fu_621_p0;
wire   [31:0] grp_fu_636_p0;
wire   [31:0] grp_fu_651_p0;
wire   [31:0] grp_fu_666_p0;
wire   [31:0] grp_fu_681_p0;
wire   [31:0] tmp_4_fu_696_p0;
wire   [31:0] tmp_22_fu_701_p0;
wire   [31:0] tmp_54_fu_706_p0;
wire   [31:0] tmp_124_fu_711_p0;
wire   [31:0] tmp_155_fu_716_p0;
wire   [31:0] tmp_186_fu_721_p0;
wire   [31:0] tmp_217_fu_726_p0;
wire   [31:0] tmp_248_fu_731_p0;
wire   [31:0] tmp_73_fu_772_p1;
wire   [7:0] tmp_1_fu_781_p4;
wire   [22:0] tmp_75_fu_791_p1;
wire   [0:0] notrhs_fu_801_p2;
wire   [0:0] notlhs_fu_795_p2;
wire   [0:0] tmp_3_fu_807_p2;
wire   [0:0] tmp_4_fu_696_p2;
wire   [31:0] tmp_77_fu_819_p1;
wire   [31:0] tmp_80_fu_828_p1;
wire   [31:0] tmp_85_fu_838_p1;
wire   [31:0] tmp_143_fu_848_p1;
wire   [31:0] tmp_84_fu_865_p4;
wire   [7:0] tmp_19_fu_880_p4;
wire   [22:0] tmp_20_fu_890_p4;
wire   [0:0] notrhs3_fu_906_p2;
wire   [0:0] notlhs3_fu_900_p2;
wire   [0:0] tmp_21_fu_912_p2;
wire   [0:0] tmp_22_fu_701_p2;
wire   [31:0] tmp_87_fu_924_p4;
wire   [31:0] tmp_89_fu_939_p4;
wire   [31:0] tmp_91_fu_955_p4;
wire   [31:0] tmp_93_fu_971_p4;
wire   [31:0] tmp_102_fu_1006_p4;
wire   [7:0] tmp_51_fu_1021_p4;
wire   [22:0] tmp_52_fu_1031_p4;
wire   [0:0] notrhs6_fu_1047_p2;
wire   [0:0] notlhs6_fu_1041_p2;
wire   [0:0] tmp_53_fu_1053_p2;
wire   [0:0] tmp_54_fu_706_p2;
wire   [31:0] tmp_104_fu_1065_p4;
wire   [31:0] tmp_106_fu_1080_p4;
wire   [31:0] tmp_108_fu_1096_p4;
wire   [31:0] tmp_110_fu_1112_p4;
wire   [31:0] tmp_119_fu_1147_p4;
wire   [7:0] tmp_121_fu_1162_p4;
wire   [22:0] tmp_122_fu_1172_p4;
wire   [0:0] notrhs9_fu_1188_p2;
wire   [0:0] notlhs9_fu_1182_p2;
wire   [0:0] tmp_123_fu_1194_p2;
wire   [0:0] tmp_124_fu_711_p2;
wire   [31:0] tmp_126_fu_1206_p4;
wire   [31:0] tmp_128_fu_1221_p4;
wire   [31:0] tmp_130_fu_1237_p4;
wire   [31:0] tmp_132_fu_1253_p4;
wire   [31:0] tmp_150_fu_1288_p4;
wire   [7:0] tmp_152_fu_1303_p4;
wire   [22:0] tmp_153_fu_1313_p4;
wire   [0:0] notrhs8_fu_1329_p2;
wire   [0:0] notlhs8_fu_1323_p2;
wire   [0:0] tmp_154_fu_1335_p2;
wire   [0:0] tmp_155_fu_716_p2;
wire   [31:0] tmp_157_fu_1347_p4;
wire   [31:0] tmp_159_fu_1362_p4;
wire   [31:0] tmp_161_fu_1378_p4;
wire   [31:0] tmp_163_fu_1394_p4;
wire   [31:0] tmp_181_fu_1429_p4;
wire   [7:0] tmp_183_fu_1444_p4;
wire   [22:0] tmp_184_fu_1454_p4;
wire   [0:0] notrhs11_fu_1470_p2;
wire   [0:0] notlhs11_fu_1464_p2;
wire   [0:0] tmp_185_fu_1476_p2;
wire   [0:0] tmp_186_fu_721_p2;
wire   [31:0] tmp_188_fu_1488_p4;
wire   [31:0] tmp_190_fu_1503_p4;
wire   [31:0] tmp_192_fu_1519_p4;
wire   [31:0] tmp_194_fu_1535_p4;
wire   [31:0] tmp_212_fu_1570_p4;
wire   [7:0] tmp_214_fu_1585_p4;
wire   [22:0] tmp_215_fu_1595_p4;
wire   [0:0] notrhs13_fu_1611_p2;
wire   [0:0] notlhs13_fu_1605_p2;
wire   [0:0] tmp_216_fu_1617_p2;
wire   [0:0] tmp_217_fu_726_p2;
wire   [31:0] tmp_219_fu_1629_p4;
wire   [31:0] tmp_221_fu_1644_p4;
wire   [31:0] tmp_223_fu_1660_p4;
wire   [31:0] tmp_225_fu_1676_p4;
wire   [31:0] tmp_243_fu_1711_p4;
wire   [7:0] tmp_245_fu_1726_p4;
wire   [22:0] tmp_246_fu_1736_p4;
wire   [0:0] notrhs15_fu_1752_p2;
wire   [0:0] notlhs15_fu_1746_p2;
wire   [0:0] tmp_247_fu_1758_p2;
wire   [0:0] tmp_248_fu_731_p2;
wire   [31:0] tmp_250_fu_1770_p4;
wire   [31:0] tmp_252_fu_1785_p4;
wire   [31:0] tmp_254_fu_1801_p4;
wire   [31:0] tmp_256_fu_1817_p4;
wire   [31:0] grp_fu_384_p2;
wire   [31:0] grp_fu_388_p2;
wire   [31:0] grp_fu_392_p2;
wire   [31:0] grp_fu_396_p2;
wire   [31:0] grp_fu_400_p2;
wire   [31:0] grp_fu_404_p2;
wire   [31:0] grp_fu_408_p2;
wire   [31:0] grp_fu_412_p2;
wire   [31:0] grp_fu_416_p2;
wire   [31:0] tmp_43_to_int_fu_1983_p1;
wire   [31:0] Theta_to_int_fu_2000_p1;
wire   [7:0] tmp_6_fu_1986_p4;
wire   [22:0] tmp_236_fu_1996_p1;
wire   [0:0] notrhs1_fu_2023_p2;
wire   [0:0] notlhs1_fu_2017_p2;
wire   [7:0] tmp_8_fu_2003_p4;
wire   [22:0] tmp_269_fu_2013_p1;
wire   [0:0] notrhs2_fu_2041_p2;
wire   [0:0] notlhs2_fu_2035_p2;
wire   [0:0] tmp_10_fu_2029_p2;
wire   [0:0] tmp_11_fu_2047_p2;
wire   [0:0] tmp_12_fu_2053_p2;
wire   [0:0] tmp_13_fu_736_p2;
wire   [31:0] tmp_44_fu_1971_p3;
wire   [0:0] tmp_14_fu_2059_p2;
wire   [31:0] tmp_83_fu_2072_p1;
wire   [31:0] tmp_82_fu_2069_p1;
wire   [31:0] tmp_81_fu_2065_p1;
wire   [31:0] tmp_fu_1964_p3;
wire   [31:0] grp_fu_421_p2;
wire   [31:0] tmp_43_1_to_int_fu_2111_p1;
wire   [7:0] tmp_24_fu_2114_p4;
wire   [22:0] tmp_278_fu_2124_p1;
wire   [0:0] notrhs4_fu_2134_p2;
wire   [0:0] notlhs4_fu_2128_p2;
wire   [0:0] tmp_28_fu_2140_p2;
wire   [0:0] tmp_30_fu_2146_p2;
wire   [0:0] tmp_31_fu_740_p2;
wire   [31:0] tmp_44_1_fu_2099_p3;
wire   [0:0] tmp_32_fu_2152_p2;
wire   [31:0] tmp_101_fu_2158_p1;
wire   [31:0] tmp_50_s_fu_2162_p2;
wire   [31:0] grp_fu_426_p2;
wire   [31:0] tmp_43_2_to_int_fu_2204_p1;
wire   [7:0] tmp_56_fu_2207_p4;
wire   [22:0] tmp_279_fu_2217_p1;
wire   [0:0] notrhs7_fu_2227_p2;
wire   [0:0] notlhs7_fu_2221_p2;
wire   [0:0] tmp_60_fu_2233_p2;
wire   [0:0] tmp_62_fu_2239_p2;
wire   [0:0] tmp_63_fu_744_p2;
wire   [31:0] tmp_44_2_fu_2192_p3;
wire   [0:0] tmp_64_fu_2245_p2;
wire   [31:0] tmp_118_fu_2251_p1;
wire   [31:0] tmp_50_1_fu_2255_p2;
wire   [31:0] grp_fu_431_p2;
wire   [31:0] tmp_43_3_to_int_fu_2297_p1;
wire   [7:0] tmp_140_fu_2300_p4;
wire   [22:0] tmp_280_fu_2310_p1;
wire   [0:0] notrhs5_fu_2320_p2;
wire   [0:0] notlhs5_fu_2314_p2;
wire   [0:0] tmp_141_fu_2326_p2;
wire   [0:0] tmp_142_fu_2332_p2;
wire   [0:0] tmp_144_fu_748_p2;
wire   [31:0] tmp_44_3_fu_2285_p3;
wire   [0:0] tmp_145_fu_2338_p2;
wire   [31:0] tmp_146_fu_2344_p1;
wire   [31:0] tmp_50_2_fu_2348_p2;
wire   [31:0] grp_fu_436_p2;
wire   [31:0] tmp_43_4_to_int_fu_2390_p1;
wire   [7:0] tmp_171_fu_2393_p4;
wire   [22:0] tmp_281_fu_2403_p1;
wire   [0:0] notrhs10_fu_2413_p2;
wire   [0:0] notlhs10_fu_2407_p2;
wire   [0:0] tmp_172_fu_2419_p2;
wire   [0:0] tmp_173_fu_2425_p2;
wire   [0:0] tmp_175_fu_752_p2;
wire   [31:0] tmp_44_4_fu_2378_p3;
wire   [0:0] tmp_176_fu_2431_p2;
wire   [31:0] tmp_177_fu_2437_p1;
wire   [31:0] tmp_50_3_fu_2441_p2;
wire   [31:0] grp_fu_441_p2;
wire   [31:0] tmp_43_5_to_int_fu_2483_p1;
wire   [7:0] tmp_202_fu_2486_p4;
wire   [22:0] tmp_282_fu_2496_p1;
wire   [0:0] notrhs12_fu_2506_p2;
wire   [0:0] notlhs12_fu_2500_p2;
wire   [0:0] tmp_203_fu_2512_p2;
wire   [0:0] tmp_204_fu_2518_p2;
wire   [0:0] tmp_206_fu_756_p2;
wire   [31:0] tmp_44_5_fu_2471_p3;
wire   [0:0] tmp_207_fu_2524_p2;
wire   [31:0] tmp_208_fu_2530_p1;
wire   [31:0] tmp_50_4_fu_2534_p2;
wire   [31:0] grp_fu_446_p2;
wire   [31:0] tmp_43_6_to_int_fu_2576_p1;
wire   [7:0] tmp_233_fu_2579_p4;
wire   [22:0] tmp_283_fu_2589_p1;
wire   [0:0] notrhs14_fu_2599_p2;
wire   [0:0] notlhs14_fu_2593_p2;
wire   [0:0] tmp_234_fu_2605_p2;
wire   [0:0] tmp_235_fu_2611_p2;
wire   [0:0] tmp_237_fu_760_p2;
wire   [31:0] tmp_44_6_fu_2564_p3;
wire   [0:0] tmp_238_fu_2617_p2;
wire   [31:0] tmp_239_fu_2623_p1;
wire   [31:0] tmp_50_5_fu_2627_p2;
wire   [31:0] grp_fu_451_p2;
wire   [31:0] tmp_260_fu_2663_p1;
wire   [31:0] tmp_229_fu_2570_p1;
wire   [31:0] tmp_198_fu_2477_p1;
wire   [31:0] tmp_167_fu_2384_p1;
wire   [31:0] tmp_136_fu_2291_p1;
wire   [31:0] tmp_114_fu_2198_p1;
wire   [31:0] tmp_97_fu_2105_p1;
wire   [31:0] tmp_76_fu_1977_p1;
wire   [31:0] tmp_264_fu_2686_p1;
wire   [31:0] tmp_232_fu_2573_p1;
wire   [31:0] tmp_201_fu_2480_p1;
wire   [31:0] tmp_170_fu_2387_p1;
wire   [31:0] tmp_139_fu_2294_p1;
wire   [31:0] tmp_117_fu_2201_p1;
wire   [31:0] tmp_100_fu_2108_p1;
wire   [31:0] tmp_79_fu_1980_p1;
wire   [31:0] tmp_43_7_to_int_fu_2709_p1;
wire   [7:0] tmp_266_fu_2712_p4;
wire   [22:0] tmp_284_fu_2722_p1;
wire   [0:0] notrhs16_fu_2732_p2;
wire   [0:0] notlhs16_fu_2726_p2;
wire   [0:0] tmp_267_fu_2738_p2;
wire   [0:0] tmp_268_fu_2744_p2;
wire   [0:0] tmp_270_fu_764_p2;
wire   [31:0] tmp_44_7_fu_2657_p3;
wire   [0:0] tmp_271_fu_2750_p2;
wire   [31:0] tmp_273_fu_2766_p3;
wire   [31:0] tmp_240_fu_2633_p3;
wire   [31:0] tmp_209_fu_2540_p3;
wire   [31:0] tmp_178_fu_2447_p3;
wire   [31:0] tmp_147_fu_2354_p3;
wire   [31:0] tmp_65_fu_2261_p3;
wire   [31:0] tmp_33_fu_2168_p3;
wire   [31:0] tmp_15_fu_2075_p3;
wire   [31:0] tmp_272_fu_2756_p1;
wire   [31:0] tmp_274_fu_2794_p3;
wire   [31:0] tmp_241_fu_2641_p3;
wire   [31:0] tmp_210_fu_2548_p3;
wire   [31:0] tmp_179_fu_2455_p3;
wire   [31:0] tmp_148_fu_2362_p3;
wire   [31:0] tmp_66_fu_2269_p3;
wire   [31:0] tmp_34_fu_2176_p3;
wire   [31:0] tmp_16_fu_2083_p3;
wire   [31:0] tmp_50_6_fu_2760_p2;
wire   [31:0] tmp_275_fu_2822_p3;
wire   [31:0] tmp_242_fu_2649_p3;
wire   [31:0] tmp_211_fu_2556_p3;
wire   [31:0] tmp_180_fu_2463_p3;
wire   [31:0] tmp_149_fu_2370_p3;
wire   [31:0] tmp_67_fu_2277_p3;
wire   [31:0] tmp_49_fu_2184_p3;
wire   [31:0] tmp_17_fu_2091_p3;
wire   [255:0] V_m_rr_7_fu_2774_p9;
wire   [255:0] tmp_261_fu_2666_p9;
wire   [255:0] tmp_265_fu_2689_p9;
wire   [255:0] r_ref_rr_7_fu_2802_p9;
wire   [255:0] signal_7_fu_2830_p9;
reg    grp_fu_256_ce;
reg    grp_fu_260_ce;
reg    grp_fu_264_ce;
reg    grp_fu_268_ce;
reg    grp_fu_272_ce;
reg    grp_fu_276_ce;
reg    grp_fu_280_ce;
reg    grp_fu_284_ce;
reg    grp_fu_288_ce;
reg    grp_fu_292_ce;
reg    grp_fu_296_ce;
reg    grp_fu_300_ce;
reg    grp_fu_304_ce;
reg    grp_fu_308_ce;
reg    grp_fu_312_ce;
reg    grp_fu_316_ce;
reg    grp_fu_320_ce;
reg    grp_fu_324_ce;
reg    grp_fu_328_ce;
reg    grp_fu_332_ce;
reg    grp_fu_336_ce;
reg    grp_fu_340_ce;
reg    grp_fu_344_ce;
reg    grp_fu_348_ce;
reg    grp_fu_352_ce;
reg    grp_fu_356_ce;
reg    grp_fu_360_ce;
reg    grp_fu_364_ce;
reg    grp_fu_368_ce;
reg    grp_fu_372_ce;
reg    grp_fu_376_ce;
reg    grp_fu_380_ce;
reg    grp_fu_384_ce;
reg    grp_fu_388_ce;
reg    grp_fu_392_ce;
reg    grp_fu_396_ce;
reg    grp_fu_400_ce;
reg    grp_fu_404_ce;
reg    grp_fu_408_ce;
reg    grp_fu_412_ce;
reg    grp_fu_416_ce;
reg    grp_fu_421_ce;
reg    grp_fu_426_ce;
reg    grp_fu_431_ce;
reg    grp_fu_436_ce;
reg    grp_fu_441_ce;
reg    grp_fu_446_ce;
reg    grp_fu_451_ce;
reg    grp_fu_456_ce;
reg    grp_fu_461_ce;
reg    grp_fu_466_ce;
reg    grp_fu_471_ce;
reg    grp_fu_476_ce;
reg    grp_fu_481_ce;
reg    grp_fu_486_ce;
reg    grp_fu_491_ce;
reg    grp_fu_496_ce;
reg    grp_fu_501_ce;
reg    grp_fu_506_ce;
reg    grp_fu_511_ce;
reg    grp_fu_516_ce;
reg    grp_fu_521_ce;
reg    grp_fu_526_ce;
reg    grp_fu_531_ce;
reg    grp_fu_536_ce;
reg    grp_fu_541_ce;
reg    grp_fu_546_ce;
reg    grp_fu_551_ce;
reg    grp_fu_556_ce;
reg    grp_fu_561_ce;
reg    grp_fu_566_ce;
reg    grp_fu_571_ce;
reg    grp_fu_576_ce;
reg    grp_fu_581_ce;
reg    grp_fu_586_ce;
reg    grp_fu_591_ce;
reg    grp_fu_596_ce;
reg    grp_fu_601_ce;
reg    grp_fu_606_ce;
reg    grp_fu_611_ce;
reg    grp_fu_616_ce;
reg    grp_fu_621_ce;
reg    grp_fu_626_ce;
reg    grp_fu_631_ce;
reg    grp_fu_636_ce;
reg    grp_fu_641_ce;
reg    grp_fu_646_ce;
reg    grp_fu_651_ce;
reg    grp_fu_656_ce;
reg    grp_fu_661_ce;
reg    grp_fu_666_ce;
reg    grp_fu_671_ce;
reg    grp_fu_676_ce;
reg    grp_fu_681_ce;
reg    grp_fu_686_ce;
reg    grp_fu_691_ce;
wire    ap_block_pp0_stage0_00001;
reg    ap_ce_reg;
reg   [29:0] i_int_reg;
reg   [31:0] P20_s_int_reg;
reg   [31:0] P22_s_int_reg;
reg   [31:0] P11ex_s_int_reg;
reg   [31:0] P11in_s_int_reg;
reg   [31:0] P21ex_s_int_reg;
reg   [31:0] P21in_s_int_reg;
reg   [31:0] Theta_s_int_reg;
reg   [31:0] RefractoryCounts_s_int_reg;
reg   [31:0] V_reset_s_int_reg;
reg   [255:0] weighted_spikes_ex_s_int_reg;
reg   [255:0] weighted_spikes_in_s_int_reg;
reg   [255:0] I_e_read_int_reg;
reg   [255:0] i_syn_ex_read_int_reg;
reg   [255:0] i_syn_in_read_int_reg;
reg   [255:0] r_ref_read_int_reg;
reg   [255:0] V_m_read_int_reg;
reg   [255:0] ap_return_0_int_reg;
reg   [255:0] ap_return_1_int_reg;
reg   [255:0] ap_return_2_int_reg;
reg   [255:0] ap_return_3_int_reg;
reg   [255:0] ap_return_4_int_reg;
reg   [255:0] ap_return_5_int_reg;

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_35_reg_3346),
    .din1(tmp_36_reg_3351),
    .ce(grp_fu_256_ce),
    .dout(grp_fu_256_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_37_reg_3356),
    .din1(tmp_38_reg_3361),
    .ce(grp_fu_260_ce),
    .dout(grp_fu_260_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_45_reg_3366),
    .din1(grp_fu_264_p1),
    .ce(grp_fu_264_ce),
    .dout(grp_fu_264_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_46_reg_3371),
    .din1(grp_fu_268_p1),
    .ce(grp_fu_268_ce),
    .dout(grp_fu_268_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_35_1_reg_3376),
    .din1(tmp_36_1_reg_3381),
    .ce(grp_fu_272_ce),
    .dout(grp_fu_272_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_37_1_reg_3386),
    .din1(tmp_38_1_reg_3391),
    .ce(grp_fu_276_ce),
    .dout(grp_fu_276_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_45_1_reg_3396),
    .din1(grp_fu_280_p1),
    .ce(grp_fu_280_ce),
    .dout(grp_fu_280_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_46_1_reg_3401),
    .din1(grp_fu_284_p1),
    .ce(grp_fu_284_ce),
    .dout(grp_fu_284_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_35_2_reg_3406),
    .din1(tmp_36_2_reg_3411),
    .ce(grp_fu_288_ce),
    .dout(grp_fu_288_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_37_2_reg_3416),
    .din1(tmp_38_2_reg_3421),
    .ce(grp_fu_292_ce),
    .dout(grp_fu_292_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_45_2_reg_3426),
    .din1(grp_fu_296_p1),
    .ce(grp_fu_296_ce),
    .dout(grp_fu_296_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_46_2_reg_3431),
    .din1(grp_fu_300_p1),
    .ce(grp_fu_300_ce),
    .dout(grp_fu_300_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_35_3_reg_3436),
    .din1(tmp_36_3_reg_3441),
    .ce(grp_fu_304_ce),
    .dout(grp_fu_304_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_37_3_reg_3446),
    .din1(tmp_38_3_reg_3451),
    .ce(grp_fu_308_ce),
    .dout(grp_fu_308_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_45_3_reg_3456),
    .din1(grp_fu_312_p1),
    .ce(grp_fu_312_ce),
    .dout(grp_fu_312_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_46_3_reg_3461),
    .din1(grp_fu_316_p1),
    .ce(grp_fu_316_ce),
    .dout(grp_fu_316_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_35_4_reg_3466),
    .din1(tmp_36_4_reg_3471),
    .ce(grp_fu_320_ce),
    .dout(grp_fu_320_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_37_4_reg_3476),
    .din1(tmp_38_4_reg_3481),
    .ce(grp_fu_324_ce),
    .dout(grp_fu_324_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_45_4_reg_3486),
    .din1(grp_fu_328_p1),
    .ce(grp_fu_328_ce),
    .dout(grp_fu_328_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_46_4_reg_3491),
    .din1(grp_fu_332_p1),
    .ce(grp_fu_332_ce),
    .dout(grp_fu_332_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_35_5_reg_3496),
    .din1(tmp_36_5_reg_3501),
    .ce(grp_fu_336_ce),
    .dout(grp_fu_336_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_37_5_reg_3506),
    .din1(tmp_38_5_reg_3511),
    .ce(grp_fu_340_ce),
    .dout(grp_fu_340_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_45_5_reg_3516),
    .din1(grp_fu_344_p1),
    .ce(grp_fu_344_ce),
    .dout(grp_fu_344_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_46_5_reg_3521),
    .din1(grp_fu_348_p1),
    .ce(grp_fu_348_ce),
    .dout(grp_fu_348_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_35_6_reg_3526),
    .din1(tmp_36_6_reg_3531),
    .ce(grp_fu_352_ce),
    .dout(grp_fu_352_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_37_6_reg_3536),
    .din1(tmp_38_6_reg_3541),
    .ce(grp_fu_356_ce),
    .dout(grp_fu_356_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_45_6_reg_3546),
    .din1(grp_fu_360_p1),
    .ce(grp_fu_360_ce),
    .dout(grp_fu_360_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_46_6_reg_3551),
    .din1(grp_fu_364_p1),
    .ce(grp_fu_364_ce),
    .dout(grp_fu_364_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_35_7_reg_3556),
    .din1(tmp_36_7_reg_3561),
    .ce(grp_fu_368_ce),
    .dout(grp_fu_368_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_37_7_reg_3566),
    .din1(tmp_38_7_reg_3571),
    .ce(grp_fu_372_ce),
    .dout(grp_fu_372_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_45_7_reg_3576),
    .din1(grp_fu_376_p1),
    .ce(grp_fu_376_ce),
    .dout(grp_fu_376_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_46_7_reg_3581),
    .din1(grp_fu_380_p1),
    .ce(grp_fu_380_ce),
    .dout(grp_fu_380_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_reg_3666),
    .din1(tmp_40_reg_3671),
    .ce(grp_fu_384_ce),
    .dout(grp_fu_384_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_1_reg_3686),
    .din1(tmp_40_1_reg_3691),
    .ce(grp_fu_388_ce),
    .dout(grp_fu_388_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_2_reg_3706),
    .din1(tmp_40_2_reg_3711),
    .ce(grp_fu_392_ce),
    .dout(grp_fu_392_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_3_reg_3726),
    .din1(tmp_40_3_reg_3731),
    .ce(grp_fu_396_ce),
    .dout(grp_fu_396_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_4_reg_3746),
    .din1(tmp_40_4_reg_3751),
    .ce(grp_fu_400_ce),
    .dout(grp_fu_400_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_5_reg_3766),
    .din1(tmp_40_5_reg_3771),
    .ce(grp_fu_404_ce),
    .dout(grp_fu_404_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_6_reg_3786),
    .din1(tmp_40_6_reg_3791),
    .ce(grp_fu_408_ce),
    .dout(grp_fu_408_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_7_reg_3806),
    .din1(tmp_40_7_reg_3811),
    .ce(grp_fu_412_ce),
    .dout(grp_fu_412_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_2986_pp0_iter6_reg),
    .din1(32'd3212836864),
    .ce(grp_fu_416_ce),
    .dout(grp_fu_416_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_86_reg_3031_pp0_iter6_reg),
    .din1(32'd3212836864),
    .ce(grp_fu_421_ce),
    .dout(grp_fu_421_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_103_reg_3076_pp0_iter6_reg),
    .din1(32'd3212836864),
    .ce(grp_fu_426_ce),
    .dout(grp_fu_426_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_120_reg_3121_pp0_iter6_reg),
    .din1(32'd3212836864),
    .ce(grp_fu_431_ce),
    .dout(grp_fu_431_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_151_reg_3166_pp0_iter6_reg),
    .din1(32'd3212836864),
    .ce(grp_fu_436_ce),
    .dout(grp_fu_436_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_182_reg_3211_pp0_iter6_reg),
    .din1(32'd3212836864),
    .ce(grp_fu_441_ce),
    .dout(grp_fu_441_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_213_reg_3256_pp0_iter6_reg),
    .din1(32'd3212836864),
    .ce(grp_fu_446_ce),
    .dout(grp_fu_446_p2)
);

update_n_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fadd_32nbkb_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_244_reg_3301_pp0_iter6_reg),
    .din1(32'd3212836864),
    .ce(grp_fu_451_ce),
    .dout(grp_fu_451_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_456_p0),
    .din1(P22_s_int_reg),
    .ce(grp_fu_456_ce),
    .dout(grp_fu_456_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_69_fu_832_p1),
    .din1(P21ex_s_int_reg),
    .ce(grp_fu_461_ce),
    .dout(grp_fu_461_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_70_fu_842_p1),
    .din1(P21in_s_int_reg),
    .ce(grp_fu_466_ce),
    .dout(grp_fu_466_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_471_p0),
    .din1(P20_s_int_reg),
    .ce(grp_fu_471_ce),
    .dout(grp_fu_471_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_69_fu_832_p1),
    .din1(P11ex_s_int_reg),
    .ce(grp_fu_476_ce),
    .dout(grp_fu_476_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_70_fu_842_p1),
    .din1(P11in_s_int_reg),
    .ce(grp_fu_481_ce),
    .dout(grp_fu_481_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_486_p0),
    .din1(P22_s_int_reg),
    .ce(grp_fu_486_ce),
    .dout(grp_fu_486_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_90_fu_949_p1),
    .din1(P21ex_s_int_reg),
    .ce(grp_fu_491_ce),
    .dout(grp_fu_491_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_92_fu_965_p1),
    .din1(P21in_s_int_reg),
    .ce(grp_fu_496_ce),
    .dout(grp_fu_496_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_501_p0),
    .din1(P20_s_int_reg),
    .ce(grp_fu_501_ce),
    .dout(grp_fu_501_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_90_fu_949_p1),
    .din1(P11ex_s_int_reg),
    .ce(grp_fu_506_ce),
    .dout(grp_fu_506_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_92_fu_965_p1),
    .din1(P11in_s_int_reg),
    .ce(grp_fu_511_ce),
    .dout(grp_fu_511_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_516_p0),
    .din1(P22_s_int_reg),
    .ce(grp_fu_516_ce),
    .dout(grp_fu_516_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_107_fu_1090_p1),
    .din1(P21ex_s_int_reg),
    .ce(grp_fu_521_ce),
    .dout(grp_fu_521_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_109_fu_1106_p1),
    .din1(P21in_s_int_reg),
    .ce(grp_fu_526_ce),
    .dout(grp_fu_526_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_531_p0),
    .din1(P20_s_int_reg),
    .ce(grp_fu_531_ce),
    .dout(grp_fu_531_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_107_fu_1090_p1),
    .din1(P11ex_s_int_reg),
    .ce(grp_fu_536_ce),
    .dout(grp_fu_536_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_109_fu_1106_p1),
    .din1(P11in_s_int_reg),
    .ce(grp_fu_541_ce),
    .dout(grp_fu_541_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_546_p0),
    .din1(P22_s_int_reg),
    .ce(grp_fu_546_ce),
    .dout(grp_fu_546_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_129_fu_1231_p1),
    .din1(P21ex_s_int_reg),
    .ce(grp_fu_551_ce),
    .dout(grp_fu_551_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_131_fu_1247_p1),
    .din1(P21in_s_int_reg),
    .ce(grp_fu_556_ce),
    .dout(grp_fu_556_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_561_p0),
    .din1(P20_s_int_reg),
    .ce(grp_fu_561_ce),
    .dout(grp_fu_561_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_129_fu_1231_p1),
    .din1(P11ex_s_int_reg),
    .ce(grp_fu_566_ce),
    .dout(grp_fu_566_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_131_fu_1247_p1),
    .din1(P11in_s_int_reg),
    .ce(grp_fu_571_ce),
    .dout(grp_fu_571_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_576_p0),
    .din1(P22_s_int_reg),
    .ce(grp_fu_576_ce),
    .dout(grp_fu_576_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_160_fu_1372_p1),
    .din1(P21ex_s_int_reg),
    .ce(grp_fu_581_ce),
    .dout(grp_fu_581_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_162_fu_1388_p1),
    .din1(P21in_s_int_reg),
    .ce(grp_fu_586_ce),
    .dout(grp_fu_586_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_591_p0),
    .din1(P20_s_int_reg),
    .ce(grp_fu_591_ce),
    .dout(grp_fu_591_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_160_fu_1372_p1),
    .din1(P11ex_s_int_reg),
    .ce(grp_fu_596_ce),
    .dout(grp_fu_596_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_162_fu_1388_p1),
    .din1(P11in_s_int_reg),
    .ce(grp_fu_601_ce),
    .dout(grp_fu_601_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_606_p0),
    .din1(P22_s_int_reg),
    .ce(grp_fu_606_ce),
    .dout(grp_fu_606_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_191_fu_1513_p1),
    .din1(P21ex_s_int_reg),
    .ce(grp_fu_611_ce),
    .dout(grp_fu_611_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_193_fu_1529_p1),
    .din1(P21in_s_int_reg),
    .ce(grp_fu_616_ce),
    .dout(grp_fu_616_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_621_p0),
    .din1(P20_s_int_reg),
    .ce(grp_fu_621_ce),
    .dout(grp_fu_621_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_191_fu_1513_p1),
    .din1(P11ex_s_int_reg),
    .ce(grp_fu_626_ce),
    .dout(grp_fu_626_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_193_fu_1529_p1),
    .din1(P11in_s_int_reg),
    .ce(grp_fu_631_ce),
    .dout(grp_fu_631_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_636_p0),
    .din1(P22_s_int_reg),
    .ce(grp_fu_636_ce),
    .dout(grp_fu_636_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_222_fu_1654_p1),
    .din1(P21ex_s_int_reg),
    .ce(grp_fu_641_ce),
    .dout(grp_fu_641_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_224_fu_1670_p1),
    .din1(P21in_s_int_reg),
    .ce(grp_fu_646_ce),
    .dout(grp_fu_646_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_651_p0),
    .din1(P20_s_int_reg),
    .ce(grp_fu_651_ce),
    .dout(grp_fu_651_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_222_fu_1654_p1),
    .din1(P11ex_s_int_reg),
    .ce(grp_fu_656_ce),
    .dout(grp_fu_656_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_224_fu_1670_p1),
    .din1(P11in_s_int_reg),
    .ce(grp_fu_661_ce),
    .dout(grp_fu_661_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_666_p0),
    .din1(P22_s_int_reg),
    .ce(grp_fu_666_ce),
    .dout(grp_fu_666_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_253_fu_1795_p1),
    .din1(P21ex_s_int_reg),
    .ce(grp_fu_671_ce),
    .dout(grp_fu_671_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_255_fu_1811_p1),
    .din1(P21in_s_int_reg),
    .ce(grp_fu_676_ce),
    .dout(grp_fu_676_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_681_p0),
    .din1(P20_s_int_reg),
    .ce(grp_fu_681_ce),
    .dout(grp_fu_681_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_253_fu_1795_p1),
    .din1(P11ex_s_int_reg),
    .ce(grp_fu_686_ce),
    .dout(grp_fu_686_p2)
);

update_n_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
update_n_fmul_32ncud_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_255_fu_1811_p1),
    .din1(P11in_s_int_reg),
    .ce(grp_fu_691_ce),
    .dout(grp_fu_691_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U102(
    .din0(tmp_4_fu_696_p0),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(tmp_4_fu_696_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U103(
    .din0(tmp_22_fu_701_p0),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(tmp_22_fu_701_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U104(
    .din0(tmp_54_fu_706_p0),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(tmp_54_fu_706_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U105(
    .din0(tmp_124_fu_711_p0),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(tmp_124_fu_711_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U106(
    .din0(tmp_155_fu_716_p0),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(tmp_155_fu_716_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U107(
    .din0(tmp_186_fu_721_p0),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(tmp_186_fu_721_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U108(
    .din0(tmp_217_fu_726_p0),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(tmp_217_fu_726_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U109(
    .din0(tmp_248_fu_731_p0),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(tmp_248_fu_731_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U110(
    .din0(tmp_43_reg_3826),
    .din1(Theta_read_reg_2896_pp0_iter9_reg),
    .opcode(5'd3),
    .dout(tmp_13_fu_736_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U111(
    .din0(tmp_43_1_reg_3832),
    .din1(Theta_read_reg_2896_pp0_iter9_reg),
    .opcode(5'd3),
    .dout(tmp_31_fu_740_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U112(
    .din0(tmp_43_2_reg_3838),
    .din1(Theta_read_reg_2896_pp0_iter9_reg),
    .opcode(5'd3),
    .dout(tmp_63_fu_744_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U113(
    .din0(tmp_43_3_reg_3844),
    .din1(Theta_read_reg_2896_pp0_iter9_reg),
    .opcode(5'd3),
    .dout(tmp_144_fu_748_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U114(
    .din0(tmp_43_4_reg_3850),
    .din1(Theta_read_reg_2896_pp0_iter9_reg),
    .opcode(5'd3),
    .dout(tmp_175_fu_752_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U115(
    .din0(tmp_43_5_reg_3856),
    .din1(Theta_read_reg_2896_pp0_iter9_reg),
    .opcode(5'd3),
    .dout(tmp_206_fu_756_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U116(
    .din0(tmp_43_6_reg_3862),
    .din1(Theta_read_reg_2896_pp0_iter9_reg),
    .opcode(5'd3),
    .dout(tmp_237_fu_760_p2)
);

update_n_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
update_n_fcmp_32ndEe_U117(
    .din0(tmp_43_7_reg_3868),
    .din1(Theta_read_reg_2896_pp0_iter9_reg),
    .opcode(5'd3),
    .dout(tmp_270_fu_764_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        I_e_read_int_reg <= I_e_read;
        P11ex_s_int_reg <= P11ex_s;
        P11in_s_int_reg <= P11in_s;
        P20_s_int_reg <= P20_s;
        P21ex_s_int_reg <= P21ex_s;
        P21in_s_int_reg <= P21in_s;
        P22_s_int_reg <= P22_s;
        RefractoryCounts_s_int_reg <= RefractoryCounts_s;
        Theta_s_int_reg <= Theta_s;
        V_m_read_int_reg <= V_m_read;
        V_reset_s_int_reg <= V_reset_s;
        i_int_reg <= i;
        i_syn_ex_read_int_reg <= i_syn_ex_read;
        i_syn_in_read_int_reg <= i_syn_in_read;
        r_ref_read_int_reg <= r_ref_read;
        weighted_spikes_ex_s_int_reg <= weighted_spikes_ex_s;
        weighted_spikes_in_s_int_reg <= weighted_spikes_in_s;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        RefractoryCounts_re_reg_2891 <= RefractoryCounts_s_int_reg;
        RefractoryCounts_re_reg_2891_pp0_iter1_reg <= RefractoryCounts_re_reg_2891;
        RefractoryCounts_re_reg_2891_pp0_iter2_reg <= RefractoryCounts_re_reg_2891_pp0_iter1_reg;
        RefractoryCounts_re_reg_2891_pp0_iter3_reg <= RefractoryCounts_re_reg_2891_pp0_iter2_reg;
        RefractoryCounts_re_reg_2891_pp0_iter4_reg <= RefractoryCounts_re_reg_2891_pp0_iter3_reg;
        RefractoryCounts_re_reg_2891_pp0_iter5_reg <= RefractoryCounts_re_reg_2891_pp0_iter4_reg;
        RefractoryCounts_re_reg_2891_pp0_iter6_reg <= RefractoryCounts_re_reg_2891_pp0_iter5_reg;
        RefractoryCounts_re_reg_2891_pp0_iter7_reg <= RefractoryCounts_re_reg_2891_pp0_iter6_reg;
        RefractoryCounts_re_reg_2891_pp0_iter8_reg <= RefractoryCounts_re_reg_2891_pp0_iter7_reg;
        RefractoryCounts_re_reg_2891_pp0_iter9_reg <= RefractoryCounts_re_reg_2891_pp0_iter8_reg;
        Theta_read_reg_2896 <= Theta_s_int_reg;
        Theta_read_reg_2896_pp0_iter1_reg <= Theta_read_reg_2896;
        Theta_read_reg_2896_pp0_iter2_reg <= Theta_read_reg_2896_pp0_iter1_reg;
        Theta_read_reg_2896_pp0_iter3_reg <= Theta_read_reg_2896_pp0_iter2_reg;
        Theta_read_reg_2896_pp0_iter4_reg <= Theta_read_reg_2896_pp0_iter3_reg;
        Theta_read_reg_2896_pp0_iter5_reg <= Theta_read_reg_2896_pp0_iter4_reg;
        Theta_read_reg_2896_pp0_iter6_reg <= Theta_read_reg_2896_pp0_iter5_reg;
        Theta_read_reg_2896_pp0_iter7_reg <= Theta_read_reg_2896_pp0_iter6_reg;
        Theta_read_reg_2896_pp0_iter8_reg <= Theta_read_reg_2896_pp0_iter7_reg;
        Theta_read_reg_2896_pp0_iter9_reg <= Theta_read_reg_2896_pp0_iter8_reg;
        V_reset_read_reg_2886 <= V_reset_s_int_reg;
        V_reset_read_reg_2886_pp0_iter1_reg <= V_reset_read_reg_2886;
        V_reset_read_reg_2886_pp0_iter2_reg <= V_reset_read_reg_2886_pp0_iter1_reg;
        V_reset_read_reg_2886_pp0_iter3_reg <= V_reset_read_reg_2886_pp0_iter2_reg;
        V_reset_read_reg_2886_pp0_iter4_reg <= V_reset_read_reg_2886_pp0_iter3_reg;
        V_reset_read_reg_2886_pp0_iter5_reg <= V_reset_read_reg_2886_pp0_iter4_reg;
        V_reset_read_reg_2886_pp0_iter6_reg <= V_reset_read_reg_2886_pp0_iter5_reg;
        V_reset_read_reg_2886_pp0_iter7_reg <= V_reset_read_reg_2886_pp0_iter6_reg;
        V_reset_read_reg_2886_pp0_iter8_reg <= V_reset_read_reg_2886_pp0_iter7_reg;
        V_reset_read_reg_2886_pp0_iter9_reg <= V_reset_read_reg_2886_pp0_iter8_reg;
        tmp_103_reg_3076 <= tmp_103_fu_1016_p1;
        tmp_103_reg_3076_pp0_iter1_reg <= tmp_103_reg_3076;
        tmp_103_reg_3076_pp0_iter2_reg <= tmp_103_reg_3076_pp0_iter1_reg;
        tmp_103_reg_3076_pp0_iter3_reg <= tmp_103_reg_3076_pp0_iter2_reg;
        tmp_103_reg_3076_pp0_iter4_reg <= tmp_103_reg_3076_pp0_iter3_reg;
        tmp_103_reg_3076_pp0_iter5_reg <= tmp_103_reg_3076_pp0_iter4_reg;
        tmp_103_reg_3076_pp0_iter6_reg <= tmp_103_reg_3076_pp0_iter5_reg;
        tmp_103_reg_3076_pp0_iter7_reg <= tmp_103_reg_3076_pp0_iter6_reg;
        tmp_103_reg_3076_pp0_iter8_reg <= tmp_103_reg_3076_pp0_iter7_reg;
        tmp_103_reg_3076_pp0_iter9_reg <= tmp_103_reg_3076_pp0_iter8_reg;
        tmp_105_reg_3088 <= tmp_105_fu_1075_p1;
        tmp_105_reg_3088_pp0_iter1_reg <= tmp_105_reg_3088;
        tmp_105_reg_3088_pp0_iter2_reg <= tmp_105_reg_3088_pp0_iter1_reg;
        tmp_105_reg_3088_pp0_iter3_reg <= tmp_105_reg_3088_pp0_iter2_reg;
        tmp_105_reg_3088_pp0_iter4_reg <= tmp_105_reg_3088_pp0_iter3_reg;
        tmp_105_reg_3088_pp0_iter5_reg <= tmp_105_reg_3088_pp0_iter4_reg;
        tmp_105_reg_3088_pp0_iter6_reg <= tmp_105_reg_3088_pp0_iter5_reg;
        tmp_105_reg_3088_pp0_iter7_reg <= tmp_105_reg_3088_pp0_iter6_reg;
        tmp_105_reg_3088_pp0_iter8_reg <= tmp_105_reg_3088_pp0_iter7_reg;
        tmp_112_reg_3111 <= {{weighted_spikes_ex_s_int_reg[95:64]}};
        tmp_112_reg_3111_pp0_iter1_reg <= tmp_112_reg_3111;
        tmp_115_reg_3116 <= {{weighted_spikes_in_s_int_reg[95:64]}};
        tmp_115_reg_3116_pp0_iter1_reg <= tmp_115_reg_3116;
        tmp_120_reg_3121 <= tmp_120_fu_1157_p1;
        tmp_120_reg_3121_pp0_iter1_reg <= tmp_120_reg_3121;
        tmp_120_reg_3121_pp0_iter2_reg <= tmp_120_reg_3121_pp0_iter1_reg;
        tmp_120_reg_3121_pp0_iter3_reg <= tmp_120_reg_3121_pp0_iter2_reg;
        tmp_120_reg_3121_pp0_iter4_reg <= tmp_120_reg_3121_pp0_iter3_reg;
        tmp_120_reg_3121_pp0_iter5_reg <= tmp_120_reg_3121_pp0_iter4_reg;
        tmp_120_reg_3121_pp0_iter6_reg <= tmp_120_reg_3121_pp0_iter5_reg;
        tmp_120_reg_3121_pp0_iter7_reg <= tmp_120_reg_3121_pp0_iter6_reg;
        tmp_120_reg_3121_pp0_iter8_reg <= tmp_120_reg_3121_pp0_iter7_reg;
        tmp_120_reg_3121_pp0_iter9_reg <= tmp_120_reg_3121_pp0_iter8_reg;
        tmp_125_reg_3127 <= tmp_125_fu_1200_p2;
        tmp_125_reg_3127_pp0_iter1_reg <= tmp_125_reg_3127;
        tmp_125_reg_3127_pp0_iter2_reg <= tmp_125_reg_3127_pp0_iter1_reg;
        tmp_125_reg_3127_pp0_iter3_reg <= tmp_125_reg_3127_pp0_iter2_reg;
        tmp_125_reg_3127_pp0_iter4_reg <= tmp_125_reg_3127_pp0_iter3_reg;
        tmp_125_reg_3127_pp0_iter5_reg <= tmp_125_reg_3127_pp0_iter4_reg;
        tmp_125_reg_3127_pp0_iter6_reg <= tmp_125_reg_3127_pp0_iter5_reg;
        tmp_125_reg_3127_pp0_iter7_reg <= tmp_125_reg_3127_pp0_iter6_reg;
        tmp_125_reg_3127_pp0_iter8_reg <= tmp_125_reg_3127_pp0_iter7_reg;
        tmp_125_reg_3127_pp0_iter9_reg <= tmp_125_reg_3127_pp0_iter8_reg;
        tmp_127_reg_3133 <= tmp_127_fu_1216_p1;
        tmp_127_reg_3133_pp0_iter1_reg <= tmp_127_reg_3133;
        tmp_127_reg_3133_pp0_iter2_reg <= tmp_127_reg_3133_pp0_iter1_reg;
        tmp_127_reg_3133_pp0_iter3_reg <= tmp_127_reg_3133_pp0_iter2_reg;
        tmp_127_reg_3133_pp0_iter4_reg <= tmp_127_reg_3133_pp0_iter3_reg;
        tmp_127_reg_3133_pp0_iter5_reg <= tmp_127_reg_3133_pp0_iter4_reg;
        tmp_127_reg_3133_pp0_iter6_reg <= tmp_127_reg_3133_pp0_iter5_reg;
        tmp_127_reg_3133_pp0_iter7_reg <= tmp_127_reg_3133_pp0_iter6_reg;
        tmp_127_reg_3133_pp0_iter8_reg <= tmp_127_reg_3133_pp0_iter7_reg;
        tmp_134_reg_3156 <= {{weighted_spikes_ex_s_int_reg[127:96]}};
        tmp_134_reg_3156_pp0_iter1_reg <= tmp_134_reg_3156;
        tmp_137_reg_3161 <= {{weighted_spikes_in_s_int_reg[127:96]}};
        tmp_137_reg_3161_pp0_iter1_reg <= tmp_137_reg_3161;
        tmp_151_reg_3166 <= tmp_151_fu_1298_p1;
        tmp_151_reg_3166_pp0_iter1_reg <= tmp_151_reg_3166;
        tmp_151_reg_3166_pp0_iter2_reg <= tmp_151_reg_3166_pp0_iter1_reg;
        tmp_151_reg_3166_pp0_iter3_reg <= tmp_151_reg_3166_pp0_iter2_reg;
        tmp_151_reg_3166_pp0_iter4_reg <= tmp_151_reg_3166_pp0_iter3_reg;
        tmp_151_reg_3166_pp0_iter5_reg <= tmp_151_reg_3166_pp0_iter4_reg;
        tmp_151_reg_3166_pp0_iter6_reg <= tmp_151_reg_3166_pp0_iter5_reg;
        tmp_151_reg_3166_pp0_iter7_reg <= tmp_151_reg_3166_pp0_iter6_reg;
        tmp_151_reg_3166_pp0_iter8_reg <= tmp_151_reg_3166_pp0_iter7_reg;
        tmp_151_reg_3166_pp0_iter9_reg <= tmp_151_reg_3166_pp0_iter8_reg;
        tmp_156_reg_3172 <= tmp_156_fu_1341_p2;
        tmp_156_reg_3172_pp0_iter1_reg <= tmp_156_reg_3172;
        tmp_156_reg_3172_pp0_iter2_reg <= tmp_156_reg_3172_pp0_iter1_reg;
        tmp_156_reg_3172_pp0_iter3_reg <= tmp_156_reg_3172_pp0_iter2_reg;
        tmp_156_reg_3172_pp0_iter4_reg <= tmp_156_reg_3172_pp0_iter3_reg;
        tmp_156_reg_3172_pp0_iter5_reg <= tmp_156_reg_3172_pp0_iter4_reg;
        tmp_156_reg_3172_pp0_iter6_reg <= tmp_156_reg_3172_pp0_iter5_reg;
        tmp_156_reg_3172_pp0_iter7_reg <= tmp_156_reg_3172_pp0_iter6_reg;
        tmp_156_reg_3172_pp0_iter8_reg <= tmp_156_reg_3172_pp0_iter7_reg;
        tmp_156_reg_3172_pp0_iter9_reg <= tmp_156_reg_3172_pp0_iter8_reg;
        tmp_158_reg_3178 <= tmp_158_fu_1357_p1;
        tmp_158_reg_3178_pp0_iter1_reg <= tmp_158_reg_3178;
        tmp_158_reg_3178_pp0_iter2_reg <= tmp_158_reg_3178_pp0_iter1_reg;
        tmp_158_reg_3178_pp0_iter3_reg <= tmp_158_reg_3178_pp0_iter2_reg;
        tmp_158_reg_3178_pp0_iter4_reg <= tmp_158_reg_3178_pp0_iter3_reg;
        tmp_158_reg_3178_pp0_iter5_reg <= tmp_158_reg_3178_pp0_iter4_reg;
        tmp_158_reg_3178_pp0_iter6_reg <= tmp_158_reg_3178_pp0_iter5_reg;
        tmp_158_reg_3178_pp0_iter7_reg <= tmp_158_reg_3178_pp0_iter6_reg;
        tmp_158_reg_3178_pp0_iter8_reg <= tmp_158_reg_3178_pp0_iter7_reg;
        tmp_165_reg_3201 <= {{weighted_spikes_ex_s_int_reg[159:128]}};
        tmp_165_reg_3201_pp0_iter1_reg <= tmp_165_reg_3201;
        tmp_168_reg_3206 <= {{weighted_spikes_in_s_int_reg[159:128]}};
        tmp_168_reg_3206_pp0_iter1_reg <= tmp_168_reg_3206;
        tmp_174_reg_3021 <= tmp_174_fu_857_p1;
        tmp_174_reg_3021_pp0_iter1_reg <= tmp_174_reg_3021;
        tmp_182_reg_3211 <= tmp_182_fu_1439_p1;
        tmp_182_reg_3211_pp0_iter1_reg <= tmp_182_reg_3211;
        tmp_182_reg_3211_pp0_iter2_reg <= tmp_182_reg_3211_pp0_iter1_reg;
        tmp_182_reg_3211_pp0_iter3_reg <= tmp_182_reg_3211_pp0_iter2_reg;
        tmp_182_reg_3211_pp0_iter4_reg <= tmp_182_reg_3211_pp0_iter3_reg;
        tmp_182_reg_3211_pp0_iter5_reg <= tmp_182_reg_3211_pp0_iter4_reg;
        tmp_182_reg_3211_pp0_iter6_reg <= tmp_182_reg_3211_pp0_iter5_reg;
        tmp_182_reg_3211_pp0_iter7_reg <= tmp_182_reg_3211_pp0_iter6_reg;
        tmp_182_reg_3211_pp0_iter8_reg <= tmp_182_reg_3211_pp0_iter7_reg;
        tmp_182_reg_3211_pp0_iter9_reg <= tmp_182_reg_3211_pp0_iter8_reg;
        tmp_187_reg_3217 <= tmp_187_fu_1482_p2;
        tmp_187_reg_3217_pp0_iter1_reg <= tmp_187_reg_3217;
        tmp_187_reg_3217_pp0_iter2_reg <= tmp_187_reg_3217_pp0_iter1_reg;
        tmp_187_reg_3217_pp0_iter3_reg <= tmp_187_reg_3217_pp0_iter2_reg;
        tmp_187_reg_3217_pp0_iter4_reg <= tmp_187_reg_3217_pp0_iter3_reg;
        tmp_187_reg_3217_pp0_iter5_reg <= tmp_187_reg_3217_pp0_iter4_reg;
        tmp_187_reg_3217_pp0_iter6_reg <= tmp_187_reg_3217_pp0_iter5_reg;
        tmp_187_reg_3217_pp0_iter7_reg <= tmp_187_reg_3217_pp0_iter6_reg;
        tmp_187_reg_3217_pp0_iter8_reg <= tmp_187_reg_3217_pp0_iter7_reg;
        tmp_187_reg_3217_pp0_iter9_reg <= tmp_187_reg_3217_pp0_iter8_reg;
        tmp_189_reg_3223 <= tmp_189_fu_1498_p1;
        tmp_189_reg_3223_pp0_iter1_reg <= tmp_189_reg_3223;
        tmp_189_reg_3223_pp0_iter2_reg <= tmp_189_reg_3223_pp0_iter1_reg;
        tmp_189_reg_3223_pp0_iter3_reg <= tmp_189_reg_3223_pp0_iter2_reg;
        tmp_189_reg_3223_pp0_iter4_reg <= tmp_189_reg_3223_pp0_iter3_reg;
        tmp_189_reg_3223_pp0_iter5_reg <= tmp_189_reg_3223_pp0_iter4_reg;
        tmp_189_reg_3223_pp0_iter6_reg <= tmp_189_reg_3223_pp0_iter5_reg;
        tmp_189_reg_3223_pp0_iter7_reg <= tmp_189_reg_3223_pp0_iter6_reg;
        tmp_189_reg_3223_pp0_iter8_reg <= tmp_189_reg_3223_pp0_iter7_reg;
        tmp_196_reg_3246 <= {{weighted_spikes_ex_s_int_reg[191:160]}};
        tmp_196_reg_3246_pp0_iter1_reg <= tmp_196_reg_3246;
        tmp_199_reg_3251 <= {{weighted_spikes_in_s_int_reg[191:160]}};
        tmp_199_reg_3251_pp0_iter1_reg <= tmp_199_reg_3251;
        tmp_205_reg_3026 <= tmp_205_fu_861_p1;
        tmp_205_reg_3026_pp0_iter1_reg <= tmp_205_reg_3026;
        tmp_213_reg_3256 <= tmp_213_fu_1580_p1;
        tmp_213_reg_3256_pp0_iter1_reg <= tmp_213_reg_3256;
        tmp_213_reg_3256_pp0_iter2_reg <= tmp_213_reg_3256_pp0_iter1_reg;
        tmp_213_reg_3256_pp0_iter3_reg <= tmp_213_reg_3256_pp0_iter2_reg;
        tmp_213_reg_3256_pp0_iter4_reg <= tmp_213_reg_3256_pp0_iter3_reg;
        tmp_213_reg_3256_pp0_iter5_reg <= tmp_213_reg_3256_pp0_iter4_reg;
        tmp_213_reg_3256_pp0_iter6_reg <= tmp_213_reg_3256_pp0_iter5_reg;
        tmp_213_reg_3256_pp0_iter7_reg <= tmp_213_reg_3256_pp0_iter6_reg;
        tmp_213_reg_3256_pp0_iter8_reg <= tmp_213_reg_3256_pp0_iter7_reg;
        tmp_213_reg_3256_pp0_iter9_reg <= tmp_213_reg_3256_pp0_iter8_reg;
        tmp_218_reg_3262 <= tmp_218_fu_1623_p2;
        tmp_218_reg_3262_pp0_iter1_reg <= tmp_218_reg_3262;
        tmp_218_reg_3262_pp0_iter2_reg <= tmp_218_reg_3262_pp0_iter1_reg;
        tmp_218_reg_3262_pp0_iter3_reg <= tmp_218_reg_3262_pp0_iter2_reg;
        tmp_218_reg_3262_pp0_iter4_reg <= tmp_218_reg_3262_pp0_iter3_reg;
        tmp_218_reg_3262_pp0_iter5_reg <= tmp_218_reg_3262_pp0_iter4_reg;
        tmp_218_reg_3262_pp0_iter6_reg <= tmp_218_reg_3262_pp0_iter5_reg;
        tmp_218_reg_3262_pp0_iter7_reg <= tmp_218_reg_3262_pp0_iter6_reg;
        tmp_218_reg_3262_pp0_iter8_reg <= tmp_218_reg_3262_pp0_iter7_reg;
        tmp_218_reg_3262_pp0_iter9_reg <= tmp_218_reg_3262_pp0_iter8_reg;
        tmp_220_reg_3268 <= tmp_220_fu_1639_p1;
        tmp_220_reg_3268_pp0_iter1_reg <= tmp_220_reg_3268;
        tmp_220_reg_3268_pp0_iter2_reg <= tmp_220_reg_3268_pp0_iter1_reg;
        tmp_220_reg_3268_pp0_iter3_reg <= tmp_220_reg_3268_pp0_iter2_reg;
        tmp_220_reg_3268_pp0_iter4_reg <= tmp_220_reg_3268_pp0_iter3_reg;
        tmp_220_reg_3268_pp0_iter5_reg <= tmp_220_reg_3268_pp0_iter4_reg;
        tmp_220_reg_3268_pp0_iter6_reg <= tmp_220_reg_3268_pp0_iter5_reg;
        tmp_220_reg_3268_pp0_iter7_reg <= tmp_220_reg_3268_pp0_iter6_reg;
        tmp_220_reg_3268_pp0_iter8_reg <= tmp_220_reg_3268_pp0_iter7_reg;
        tmp_227_reg_3291 <= {{weighted_spikes_ex_s_int_reg[223:192]}};
        tmp_227_reg_3291_pp0_iter1_reg <= tmp_227_reg_3291;
        tmp_230_reg_3296 <= {{weighted_spikes_in_s_int_reg[223:192]}};
        tmp_230_reg_3296_pp0_iter1_reg <= tmp_230_reg_3296;
        tmp_23_reg_3037 <= tmp_23_fu_918_p2;
        tmp_23_reg_3037_pp0_iter1_reg <= tmp_23_reg_3037;
        tmp_23_reg_3037_pp0_iter2_reg <= tmp_23_reg_3037_pp0_iter1_reg;
        tmp_23_reg_3037_pp0_iter3_reg <= tmp_23_reg_3037_pp0_iter2_reg;
        tmp_23_reg_3037_pp0_iter4_reg <= tmp_23_reg_3037_pp0_iter3_reg;
        tmp_23_reg_3037_pp0_iter5_reg <= tmp_23_reg_3037_pp0_iter4_reg;
        tmp_23_reg_3037_pp0_iter6_reg <= tmp_23_reg_3037_pp0_iter5_reg;
        tmp_23_reg_3037_pp0_iter7_reg <= tmp_23_reg_3037_pp0_iter6_reg;
        tmp_23_reg_3037_pp0_iter8_reg <= tmp_23_reg_3037_pp0_iter7_reg;
        tmp_23_reg_3037_pp0_iter9_reg <= tmp_23_reg_3037_pp0_iter8_reg;
        tmp_244_reg_3301 <= tmp_244_fu_1721_p1;
        tmp_244_reg_3301_pp0_iter1_reg <= tmp_244_reg_3301;
        tmp_244_reg_3301_pp0_iter2_reg <= tmp_244_reg_3301_pp0_iter1_reg;
        tmp_244_reg_3301_pp0_iter3_reg <= tmp_244_reg_3301_pp0_iter2_reg;
        tmp_244_reg_3301_pp0_iter4_reg <= tmp_244_reg_3301_pp0_iter3_reg;
        tmp_244_reg_3301_pp0_iter5_reg <= tmp_244_reg_3301_pp0_iter4_reg;
        tmp_244_reg_3301_pp0_iter6_reg <= tmp_244_reg_3301_pp0_iter5_reg;
        tmp_244_reg_3301_pp0_iter7_reg <= tmp_244_reg_3301_pp0_iter6_reg;
        tmp_244_reg_3301_pp0_iter8_reg <= tmp_244_reg_3301_pp0_iter7_reg;
        tmp_244_reg_3301_pp0_iter9_reg <= tmp_244_reg_3301_pp0_iter8_reg;
        tmp_249_reg_3307 <= tmp_249_fu_1764_p2;
        tmp_249_reg_3307_pp0_iter1_reg <= tmp_249_reg_3307;
        tmp_249_reg_3307_pp0_iter2_reg <= tmp_249_reg_3307_pp0_iter1_reg;
        tmp_249_reg_3307_pp0_iter3_reg <= tmp_249_reg_3307_pp0_iter2_reg;
        tmp_249_reg_3307_pp0_iter4_reg <= tmp_249_reg_3307_pp0_iter3_reg;
        tmp_249_reg_3307_pp0_iter5_reg <= tmp_249_reg_3307_pp0_iter4_reg;
        tmp_249_reg_3307_pp0_iter6_reg <= tmp_249_reg_3307_pp0_iter5_reg;
        tmp_249_reg_3307_pp0_iter7_reg <= tmp_249_reg_3307_pp0_iter6_reg;
        tmp_249_reg_3307_pp0_iter8_reg <= tmp_249_reg_3307_pp0_iter7_reg;
        tmp_249_reg_3307_pp0_iter9_reg <= tmp_249_reg_3307_pp0_iter8_reg;
        tmp_251_reg_3313 <= tmp_251_fu_1780_p1;
        tmp_251_reg_3313_pp0_iter1_reg <= tmp_251_reg_3313;
        tmp_251_reg_3313_pp0_iter2_reg <= tmp_251_reg_3313_pp0_iter1_reg;
        tmp_251_reg_3313_pp0_iter3_reg <= tmp_251_reg_3313_pp0_iter2_reg;
        tmp_251_reg_3313_pp0_iter4_reg <= tmp_251_reg_3313_pp0_iter3_reg;
        tmp_251_reg_3313_pp0_iter5_reg <= tmp_251_reg_3313_pp0_iter4_reg;
        tmp_251_reg_3313_pp0_iter6_reg <= tmp_251_reg_3313_pp0_iter5_reg;
        tmp_251_reg_3313_pp0_iter7_reg <= tmp_251_reg_3313_pp0_iter6_reg;
        tmp_251_reg_3313_pp0_iter8_reg <= tmp_251_reg_3313_pp0_iter7_reg;
        tmp_258_reg_3336 <= {{weighted_spikes_ex_s_int_reg[255:224]}};
        tmp_258_reg_3336_pp0_iter1_reg <= tmp_258_reg_3336;
        tmp_262_reg_3341 <= {{weighted_spikes_in_s_int_reg[255:224]}};
        tmp_262_reg_3341_pp0_iter1_reg <= tmp_262_reg_3341;
        tmp_35_1_reg_3376 <= grp_fu_486_p2;
        tmp_35_2_reg_3406 <= grp_fu_516_p2;
        tmp_35_3_reg_3436 <= grp_fu_546_p2;
        tmp_35_4_reg_3466 <= grp_fu_576_p2;
        tmp_35_5_reg_3496 <= grp_fu_606_p2;
        tmp_35_6_reg_3526 <= grp_fu_636_p2;
        tmp_35_7_reg_3556 <= grp_fu_666_p2;
        tmp_35_reg_3346 <= grp_fu_456_p2;
        tmp_36_1_reg_3381 <= grp_fu_491_p2;
        tmp_36_2_reg_3411 <= grp_fu_521_p2;
        tmp_36_3_reg_3441 <= grp_fu_551_p2;
        tmp_36_4_reg_3471 <= grp_fu_581_p2;
        tmp_36_5_reg_3501 <= grp_fu_611_p2;
        tmp_36_6_reg_3531 <= grp_fu_641_p2;
        tmp_36_7_reg_3561 <= grp_fu_671_p2;
        tmp_36_reg_3351 <= grp_fu_461_p2;
        tmp_37_1_reg_3386 <= grp_fu_496_p2;
        tmp_37_2_reg_3416 <= grp_fu_526_p2;
        tmp_37_3_reg_3446 <= grp_fu_556_p2;
        tmp_37_4_reg_3476 <= grp_fu_586_p2;
        tmp_37_5_reg_3506 <= grp_fu_616_p2;
        tmp_37_6_reg_3536 <= grp_fu_646_p2;
        tmp_37_7_reg_3566 <= grp_fu_676_p2;
        tmp_37_reg_3356 <= grp_fu_466_p2;
        tmp_38_1_reg_3391 <= grp_fu_501_p2;
        tmp_38_2_reg_3421 <= grp_fu_531_p2;
        tmp_38_3_reg_3451 <= grp_fu_561_p2;
        tmp_38_4_reg_3481 <= grp_fu_591_p2;
        tmp_38_5_reg_3511 <= grp_fu_621_p2;
        tmp_38_6_reg_3541 <= grp_fu_651_p2;
        tmp_38_7_reg_3571 <= grp_fu_681_p2;
        tmp_38_reg_3361 <= grp_fu_471_p2;
        tmp_43_1_reg_3832 <= tmp_43_1_fu_1922_p3;
        tmp_43_2_reg_3838 <= tmp_43_2_fu_1928_p3;
        tmp_43_3_reg_3844 <= tmp_43_3_fu_1934_p3;
        tmp_43_4_reg_3850 <= tmp_43_4_fu_1940_p3;
        tmp_43_5_reg_3856 <= tmp_43_5_fu_1946_p3;
        tmp_43_6_reg_3862 <= tmp_43_6_fu_1952_p3;
        tmp_43_7_reg_3868 <= tmp_43_7_fu_1958_p3;
        tmp_43_reg_3826 <= tmp_43_fu_1916_p3;
        tmp_45_1_reg_3396 <= grp_fu_506_p2;
        tmp_45_2_reg_3426 <= grp_fu_536_p2;
        tmp_45_3_reg_3456 <= grp_fu_566_p2;
        tmp_45_4_reg_3486 <= grp_fu_596_p2;
        tmp_45_5_reg_3516 <= grp_fu_626_p2;
        tmp_45_6_reg_3546 <= grp_fu_656_p2;
        tmp_45_7_reg_3576 <= grp_fu_686_p2;
        tmp_45_reg_3366 <= grp_fu_476_p2;
        tmp_46_1_reg_3401 <= grp_fu_511_p2;
        tmp_46_2_reg_3431 <= grp_fu_541_p2;
        tmp_46_3_reg_3461 <= grp_fu_571_p2;
        tmp_46_4_reg_3491 <= grp_fu_601_p2;
        tmp_46_5_reg_3521 <= grp_fu_631_p2;
        tmp_46_6_reg_3551 <= grp_fu_661_p2;
        tmp_46_7_reg_3581 <= grp_fu_691_p2;
        tmp_46_reg_3371 <= grp_fu_481_p2;
        tmp_47_1_reg_3696 <= grp_fu_280_p2;
        tmp_47_1_reg_3696_pp0_iter6_reg <= tmp_47_1_reg_3696;
        tmp_47_1_reg_3696_pp0_iter7_reg <= tmp_47_1_reg_3696_pp0_iter6_reg;
        tmp_47_1_reg_3696_pp0_iter8_reg <= tmp_47_1_reg_3696_pp0_iter7_reg;
        tmp_47_1_reg_3696_pp0_iter9_reg <= tmp_47_1_reg_3696_pp0_iter8_reg;
        tmp_47_2_reg_3716 <= grp_fu_296_p2;
        tmp_47_2_reg_3716_pp0_iter6_reg <= tmp_47_2_reg_3716;
        tmp_47_2_reg_3716_pp0_iter7_reg <= tmp_47_2_reg_3716_pp0_iter6_reg;
        tmp_47_2_reg_3716_pp0_iter8_reg <= tmp_47_2_reg_3716_pp0_iter7_reg;
        tmp_47_2_reg_3716_pp0_iter9_reg <= tmp_47_2_reg_3716_pp0_iter8_reg;
        tmp_47_3_reg_3736 <= grp_fu_312_p2;
        tmp_47_3_reg_3736_pp0_iter6_reg <= tmp_47_3_reg_3736;
        tmp_47_3_reg_3736_pp0_iter7_reg <= tmp_47_3_reg_3736_pp0_iter6_reg;
        tmp_47_3_reg_3736_pp0_iter8_reg <= tmp_47_3_reg_3736_pp0_iter7_reg;
        tmp_47_3_reg_3736_pp0_iter9_reg <= tmp_47_3_reg_3736_pp0_iter8_reg;
        tmp_47_4_reg_3756 <= grp_fu_328_p2;
        tmp_47_4_reg_3756_pp0_iter6_reg <= tmp_47_4_reg_3756;
        tmp_47_4_reg_3756_pp0_iter7_reg <= tmp_47_4_reg_3756_pp0_iter6_reg;
        tmp_47_4_reg_3756_pp0_iter8_reg <= tmp_47_4_reg_3756_pp0_iter7_reg;
        tmp_47_4_reg_3756_pp0_iter9_reg <= tmp_47_4_reg_3756_pp0_iter8_reg;
        tmp_47_5_reg_3776 <= grp_fu_344_p2;
        tmp_47_5_reg_3776_pp0_iter6_reg <= tmp_47_5_reg_3776;
        tmp_47_5_reg_3776_pp0_iter7_reg <= tmp_47_5_reg_3776_pp0_iter6_reg;
        tmp_47_5_reg_3776_pp0_iter8_reg <= tmp_47_5_reg_3776_pp0_iter7_reg;
        tmp_47_5_reg_3776_pp0_iter9_reg <= tmp_47_5_reg_3776_pp0_iter8_reg;
        tmp_47_6_reg_3796 <= grp_fu_360_p2;
        tmp_47_6_reg_3796_pp0_iter6_reg <= tmp_47_6_reg_3796;
        tmp_47_6_reg_3796_pp0_iter7_reg <= tmp_47_6_reg_3796_pp0_iter6_reg;
        tmp_47_6_reg_3796_pp0_iter8_reg <= tmp_47_6_reg_3796_pp0_iter7_reg;
        tmp_47_6_reg_3796_pp0_iter9_reg <= tmp_47_6_reg_3796_pp0_iter8_reg;
        tmp_47_7_reg_3816 <= grp_fu_376_p2;
        tmp_47_7_reg_3816_pp0_iter6_reg <= tmp_47_7_reg_3816;
        tmp_47_7_reg_3816_pp0_iter7_reg <= tmp_47_7_reg_3816_pp0_iter6_reg;
        tmp_47_7_reg_3816_pp0_iter8_reg <= tmp_47_7_reg_3816_pp0_iter7_reg;
        tmp_47_7_reg_3816_pp0_iter9_reg <= tmp_47_7_reg_3816_pp0_iter8_reg;
        tmp_47_reg_3676 <= grp_fu_264_p2;
        tmp_47_reg_3676_pp0_iter6_reg <= tmp_47_reg_3676;
        tmp_47_reg_3676_pp0_iter7_reg <= tmp_47_reg_3676_pp0_iter6_reg;
        tmp_47_reg_3676_pp0_iter8_reg <= tmp_47_reg_3676_pp0_iter7_reg;
        tmp_47_reg_3676_pp0_iter9_reg <= tmp_47_reg_3676_pp0_iter8_reg;
        tmp_48_1_reg_3701 <= grp_fu_284_p2;
        tmp_48_1_reg_3701_pp0_iter6_reg <= tmp_48_1_reg_3701;
        tmp_48_1_reg_3701_pp0_iter7_reg <= tmp_48_1_reg_3701_pp0_iter6_reg;
        tmp_48_1_reg_3701_pp0_iter8_reg <= tmp_48_1_reg_3701_pp0_iter7_reg;
        tmp_48_1_reg_3701_pp0_iter9_reg <= tmp_48_1_reg_3701_pp0_iter8_reg;
        tmp_48_2_reg_3721 <= grp_fu_300_p2;
        tmp_48_2_reg_3721_pp0_iter6_reg <= tmp_48_2_reg_3721;
        tmp_48_2_reg_3721_pp0_iter7_reg <= tmp_48_2_reg_3721_pp0_iter6_reg;
        tmp_48_2_reg_3721_pp0_iter8_reg <= tmp_48_2_reg_3721_pp0_iter7_reg;
        tmp_48_2_reg_3721_pp0_iter9_reg <= tmp_48_2_reg_3721_pp0_iter8_reg;
        tmp_48_3_reg_3741 <= grp_fu_316_p2;
        tmp_48_3_reg_3741_pp0_iter6_reg <= tmp_48_3_reg_3741;
        tmp_48_3_reg_3741_pp0_iter7_reg <= tmp_48_3_reg_3741_pp0_iter6_reg;
        tmp_48_3_reg_3741_pp0_iter8_reg <= tmp_48_3_reg_3741_pp0_iter7_reg;
        tmp_48_3_reg_3741_pp0_iter9_reg <= tmp_48_3_reg_3741_pp0_iter8_reg;
        tmp_48_4_reg_3761 <= grp_fu_332_p2;
        tmp_48_4_reg_3761_pp0_iter6_reg <= tmp_48_4_reg_3761;
        tmp_48_4_reg_3761_pp0_iter7_reg <= tmp_48_4_reg_3761_pp0_iter6_reg;
        tmp_48_4_reg_3761_pp0_iter8_reg <= tmp_48_4_reg_3761_pp0_iter7_reg;
        tmp_48_4_reg_3761_pp0_iter9_reg <= tmp_48_4_reg_3761_pp0_iter8_reg;
        tmp_48_5_reg_3781 <= grp_fu_348_p2;
        tmp_48_5_reg_3781_pp0_iter6_reg <= tmp_48_5_reg_3781;
        tmp_48_5_reg_3781_pp0_iter7_reg <= tmp_48_5_reg_3781_pp0_iter6_reg;
        tmp_48_5_reg_3781_pp0_iter8_reg <= tmp_48_5_reg_3781_pp0_iter7_reg;
        tmp_48_5_reg_3781_pp0_iter9_reg <= tmp_48_5_reg_3781_pp0_iter8_reg;
        tmp_48_6_reg_3801 <= grp_fu_364_p2;
        tmp_48_6_reg_3801_pp0_iter6_reg <= tmp_48_6_reg_3801;
        tmp_48_6_reg_3801_pp0_iter7_reg <= tmp_48_6_reg_3801_pp0_iter6_reg;
        tmp_48_6_reg_3801_pp0_iter8_reg <= tmp_48_6_reg_3801_pp0_iter7_reg;
        tmp_48_6_reg_3801_pp0_iter9_reg <= tmp_48_6_reg_3801_pp0_iter8_reg;
        tmp_48_7_reg_3821 <= grp_fu_380_p2;
        tmp_48_7_reg_3821_pp0_iter6_reg <= tmp_48_7_reg_3821;
        tmp_48_7_reg_3821_pp0_iter7_reg <= tmp_48_7_reg_3821_pp0_iter6_reg;
        tmp_48_7_reg_3821_pp0_iter8_reg <= tmp_48_7_reg_3821_pp0_iter7_reg;
        tmp_48_7_reg_3821_pp0_iter9_reg <= tmp_48_7_reg_3821_pp0_iter8_reg;
        tmp_48_reg_3681 <= grp_fu_268_p2;
        tmp_48_reg_3681_pp0_iter6_reg <= tmp_48_reg_3681;
        tmp_48_reg_3681_pp0_iter7_reg <= tmp_48_reg_3681_pp0_iter6_reg;
        tmp_48_reg_3681_pp0_iter8_reg <= tmp_48_reg_3681_pp0_iter7_reg;
        tmp_48_reg_3681_pp0_iter9_reg <= tmp_48_reg_3681_pp0_iter8_reg;
        tmp_55_reg_3082 <= tmp_55_fu_1059_p2;
        tmp_55_reg_3082_pp0_iter1_reg <= tmp_55_reg_3082;
        tmp_55_reg_3082_pp0_iter2_reg <= tmp_55_reg_3082_pp0_iter1_reg;
        tmp_55_reg_3082_pp0_iter3_reg <= tmp_55_reg_3082_pp0_iter2_reg;
        tmp_55_reg_3082_pp0_iter4_reg <= tmp_55_reg_3082_pp0_iter3_reg;
        tmp_55_reg_3082_pp0_iter5_reg <= tmp_55_reg_3082_pp0_iter4_reg;
        tmp_55_reg_3082_pp0_iter6_reg <= tmp_55_reg_3082_pp0_iter5_reg;
        tmp_55_reg_3082_pp0_iter7_reg <= tmp_55_reg_3082_pp0_iter6_reg;
        tmp_55_reg_3082_pp0_iter8_reg <= tmp_55_reg_3082_pp0_iter7_reg;
        tmp_55_reg_3082_pp0_iter9_reg <= tmp_55_reg_3082_pp0_iter8_reg;
        tmp_5_reg_2992 <= tmp_5_fu_813_p2;
        tmp_5_reg_2992_pp0_iter1_reg <= tmp_5_reg_2992;
        tmp_5_reg_2992_pp0_iter2_reg <= tmp_5_reg_2992_pp0_iter1_reg;
        tmp_5_reg_2992_pp0_iter3_reg <= tmp_5_reg_2992_pp0_iter2_reg;
        tmp_5_reg_2992_pp0_iter4_reg <= tmp_5_reg_2992_pp0_iter3_reg;
        tmp_5_reg_2992_pp0_iter5_reg <= tmp_5_reg_2992_pp0_iter4_reg;
        tmp_5_reg_2992_pp0_iter6_reg <= tmp_5_reg_2992_pp0_iter5_reg;
        tmp_5_reg_2992_pp0_iter7_reg <= tmp_5_reg_2992_pp0_iter6_reg;
        tmp_5_reg_2992_pp0_iter8_reg <= tmp_5_reg_2992_pp0_iter7_reg;
        tmp_5_reg_2992_pp0_iter9_reg <= tmp_5_reg_2992_pp0_iter8_reg;
        tmp_68_reg_2998 <= tmp_68_fu_823_p1;
        tmp_68_reg_2998_pp0_iter1_reg <= tmp_68_reg_2998;
        tmp_68_reg_2998_pp0_iter2_reg <= tmp_68_reg_2998_pp0_iter1_reg;
        tmp_68_reg_2998_pp0_iter3_reg <= tmp_68_reg_2998_pp0_iter2_reg;
        tmp_68_reg_2998_pp0_iter4_reg <= tmp_68_reg_2998_pp0_iter3_reg;
        tmp_68_reg_2998_pp0_iter5_reg <= tmp_68_reg_2998_pp0_iter4_reg;
        tmp_68_reg_2998_pp0_iter6_reg <= tmp_68_reg_2998_pp0_iter5_reg;
        tmp_68_reg_2998_pp0_iter7_reg <= tmp_68_reg_2998_pp0_iter6_reg;
        tmp_68_reg_2998_pp0_iter8_reg <= tmp_68_reg_2998_pp0_iter7_reg;
        tmp_71_reg_2981 <= tmp_71_fu_768_p1;
        tmp_71_reg_2981_pp0_iter1_reg <= tmp_71_reg_2981;
        tmp_71_reg_2981_pp0_iter2_reg <= tmp_71_reg_2981_pp0_iter1_reg;
        tmp_71_reg_2981_pp0_iter3_reg <= tmp_71_reg_2981_pp0_iter2_reg;
        tmp_71_reg_2981_pp0_iter4_reg <= tmp_71_reg_2981_pp0_iter3_reg;
        tmp_71_reg_2981_pp0_iter5_reg <= tmp_71_reg_2981_pp0_iter4_reg;
        tmp_71_reg_2981_pp0_iter6_reg <= tmp_71_reg_2981_pp0_iter5_reg;
        tmp_71_reg_2981_pp0_iter7_reg <= tmp_71_reg_2981_pp0_iter6_reg;
        tmp_71_reg_2981_pp0_iter8_reg <= tmp_71_reg_2981_pp0_iter7_reg;
        tmp_71_reg_2981_pp0_iter9_reg <= tmp_71_reg_2981_pp0_iter8_reg;
        tmp_86_reg_3031 <= tmp_86_fu_875_p1;
        tmp_86_reg_3031_pp0_iter1_reg <= tmp_86_reg_3031;
        tmp_86_reg_3031_pp0_iter2_reg <= tmp_86_reg_3031_pp0_iter1_reg;
        tmp_86_reg_3031_pp0_iter3_reg <= tmp_86_reg_3031_pp0_iter2_reg;
        tmp_86_reg_3031_pp0_iter4_reg <= tmp_86_reg_3031_pp0_iter3_reg;
        tmp_86_reg_3031_pp0_iter5_reg <= tmp_86_reg_3031_pp0_iter4_reg;
        tmp_86_reg_3031_pp0_iter6_reg <= tmp_86_reg_3031_pp0_iter5_reg;
        tmp_86_reg_3031_pp0_iter7_reg <= tmp_86_reg_3031_pp0_iter6_reg;
        tmp_86_reg_3031_pp0_iter8_reg <= tmp_86_reg_3031_pp0_iter7_reg;
        tmp_86_reg_3031_pp0_iter9_reg <= tmp_86_reg_3031_pp0_iter8_reg;
        tmp_88_reg_3043 <= tmp_88_fu_934_p1;
        tmp_88_reg_3043_pp0_iter1_reg <= tmp_88_reg_3043;
        tmp_88_reg_3043_pp0_iter2_reg <= tmp_88_reg_3043_pp0_iter1_reg;
        tmp_88_reg_3043_pp0_iter3_reg <= tmp_88_reg_3043_pp0_iter2_reg;
        tmp_88_reg_3043_pp0_iter4_reg <= tmp_88_reg_3043_pp0_iter3_reg;
        tmp_88_reg_3043_pp0_iter5_reg <= tmp_88_reg_3043_pp0_iter4_reg;
        tmp_88_reg_3043_pp0_iter6_reg <= tmp_88_reg_3043_pp0_iter5_reg;
        tmp_88_reg_3043_pp0_iter7_reg <= tmp_88_reg_3043_pp0_iter6_reg;
        tmp_88_reg_3043_pp0_iter8_reg <= tmp_88_reg_3043_pp0_iter7_reg;
        tmp_95_reg_3066 <= {{weighted_spikes_ex_s_int_reg[63:32]}};
        tmp_95_reg_3066_pp0_iter1_reg <= tmp_95_reg_3066;
        tmp_98_reg_3071 <= {{weighted_spikes_in_s_int_reg[63:32]}};
        tmp_98_reg_3071_pp0_iter1_reg <= tmp_98_reg_3071;
        tmp_s_reg_2986 <= tmp_s_fu_776_p1;
        tmp_s_reg_2986_pp0_iter1_reg <= tmp_s_reg_2986;
        tmp_s_reg_2986_pp0_iter2_reg <= tmp_s_reg_2986_pp0_iter1_reg;
        tmp_s_reg_2986_pp0_iter3_reg <= tmp_s_reg_2986_pp0_iter2_reg;
        tmp_s_reg_2986_pp0_iter4_reg <= tmp_s_reg_2986_pp0_iter3_reg;
        tmp_s_reg_2986_pp0_iter5_reg <= tmp_s_reg_2986_pp0_iter4_reg;
        tmp_s_reg_2986_pp0_iter6_reg <= tmp_s_reg_2986_pp0_iter5_reg;
        tmp_s_reg_2986_pp0_iter7_reg <= tmp_s_reg_2986_pp0_iter6_reg;
        tmp_s_reg_2986_pp0_iter8_reg <= tmp_s_reg_2986_pp0_iter7_reg;
        tmp_s_reg_2986_pp0_iter9_reg <= tmp_s_reg_2986_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= V_m_rr_7_fu_2774_p9;
        ap_return_1_int_reg <= tmp_261_fu_2666_p9;
        ap_return_2_int_reg <= tmp_265_fu_2689_p9;
        ap_return_3_int_reg <= r_ref_rr_7_fu_2802_p9;
        ap_return_4_int_reg[31 : 0] <= signal_7_fu_2830_p9[31 : 0];
ap_return_4_int_reg[64 : 33] <= signal_7_fu_2830_p9[64 : 33];
ap_return_4_int_reg[95 : 66] <= signal_7_fu_2830_p9[95 : 66];
ap_return_4_int_reg[129 : 98] <= signal_7_fu_2830_p9[129 : 98];
ap_return_4_int_reg[159 : 131] <= signal_7_fu_2830_p9[159 : 131];
ap_return_4_int_reg[161] <= signal_7_fu_2830_p9[161];
ap_return_4_int_reg[192 : 163] <= signal_7_fu_2830_p9[192 : 163];
ap_return_4_int_reg[223 : 195] <= signal_7_fu_2830_p9[223 : 195];
ap_return_4_int_reg[255 : 227] <= signal_7_fu_2830_p9[255 : 227];
        ap_return_5_int_reg[31 : 0] <= signal_7_fu_2830_p9[31 : 0];
ap_return_5_int_reg[64 : 33] <= signal_7_fu_2830_p9[64 : 33];
ap_return_5_int_reg[95 : 66] <= signal_7_fu_2830_p9[95 : 66];
ap_return_5_int_reg[129 : 98] <= signal_7_fu_2830_p9[129 : 98];
ap_return_5_int_reg[159 : 131] <= signal_7_fu_2830_p9[159 : 131];
ap_return_5_int_reg[161] <= signal_7_fu_2830_p9[161];
ap_return_5_int_reg[192 : 163] <= signal_7_fu_2830_p9[192 : 163];
ap_return_5_int_reg[223 : 195] <= signal_7_fu_2830_p9[223 : 195];
ap_return_5_int_reg[255 : 227] <= signal_7_fu_2830_p9[255 : 227];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & (tmp_23_reg_3037_pp0_iter4_reg == 1'd1))) begin
        tmp_39_1_reg_3686 <= grp_fu_272_p2;
        tmp_40_1_reg_3691 <= grp_fu_276_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & (tmp_55_reg_3082_pp0_iter4_reg == 1'd1))) begin
        tmp_39_2_reg_3706 <= grp_fu_288_p2;
        tmp_40_2_reg_3711 <= grp_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & (tmp_125_reg_3127_pp0_iter4_reg == 1'd1))) begin
        tmp_39_3_reg_3726 <= grp_fu_304_p2;
        tmp_40_3_reg_3731 <= grp_fu_308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_156_reg_3172_pp0_iter4_reg == 1'd1) & (1'b1 == ap_ce_reg))) begin
        tmp_39_4_reg_3746 <= grp_fu_320_p2;
        tmp_40_4_reg_3751 <= grp_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_187_reg_3217_pp0_iter4_reg == 1'd1) & (1'b1 == ap_ce_reg))) begin
        tmp_39_5_reg_3766 <= grp_fu_336_p2;
        tmp_40_5_reg_3771 <= grp_fu_340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_218_reg_3262_pp0_iter4_reg == 1'd1) & (1'b1 == ap_ce_reg))) begin
        tmp_39_6_reg_3786 <= grp_fu_352_p2;
        tmp_40_6_reg_3791 <= grp_fu_356_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_249_reg_3307_pp0_iter4_reg == 1'd1) & (1'b1 == ap_ce_reg))) begin
        tmp_39_7_reg_3806 <= grp_fu_368_p2;
        tmp_40_7_reg_3811 <= grp_fu_372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & (tmp_5_reg_2992_pp0_iter4_reg == 1'd1))) begin
        tmp_39_reg_3666 <= grp_fu_256_p2;
        tmp_40_reg_3671 <= grp_fu_260_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = V_m_rr_7_fu_2774_p9;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = tmp_261_fu_2666_p9;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = tmp_265_fu_2689_p9;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_3 = ap_return_3_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_3 = r_ref_rr_7_fu_2802_p9;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_4 = ap_return_4_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_4 = signal_7_fu_2830_p9;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_5 = ap_return_5_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_5 = signal_7_fu_2830_p9;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_256_ce = 1'b1;
    end else begin
        grp_fu_256_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_260_ce = 1'b1;
    end else begin
        grp_fu_260_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_264_ce = 1'b1;
    end else begin
        grp_fu_264_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_268_ce = 1'b1;
    end else begin
        grp_fu_268_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_272_ce = 1'b1;
    end else begin
        grp_fu_272_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_276_ce = 1'b1;
    end else begin
        grp_fu_276_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_280_ce = 1'b1;
    end else begin
        grp_fu_280_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_284_ce = 1'b1;
    end else begin
        grp_fu_284_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_288_ce = 1'b1;
    end else begin
        grp_fu_288_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_292_ce = 1'b1;
    end else begin
        grp_fu_292_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_296_ce = 1'b1;
    end else begin
        grp_fu_296_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_300_ce = 1'b1;
    end else begin
        grp_fu_300_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_304_ce = 1'b1;
    end else begin
        grp_fu_304_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_308_ce = 1'b1;
    end else begin
        grp_fu_308_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_312_ce = 1'b1;
    end else begin
        grp_fu_312_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_316_ce = 1'b1;
    end else begin
        grp_fu_316_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_320_ce = 1'b1;
    end else begin
        grp_fu_320_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_324_ce = 1'b1;
    end else begin
        grp_fu_324_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_328_ce = 1'b1;
    end else begin
        grp_fu_328_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_332_ce = 1'b1;
    end else begin
        grp_fu_332_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_336_ce = 1'b1;
    end else begin
        grp_fu_336_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_340_ce = 1'b1;
    end else begin
        grp_fu_340_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_344_ce = 1'b1;
    end else begin
        grp_fu_344_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_348_ce = 1'b1;
    end else begin
        grp_fu_348_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_352_ce = 1'b1;
    end else begin
        grp_fu_352_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_356_ce = 1'b1;
    end else begin
        grp_fu_356_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_360_ce = 1'b1;
    end else begin
        grp_fu_360_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_364_ce = 1'b1;
    end else begin
        grp_fu_364_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_368_ce = 1'b1;
    end else begin
        grp_fu_368_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_372_ce = 1'b1;
    end else begin
        grp_fu_372_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_376_ce = 1'b1;
    end else begin
        grp_fu_376_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_380_ce = 1'b1;
    end else begin
        grp_fu_380_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_384_ce = 1'b1;
    end else begin
        grp_fu_384_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_388_ce = 1'b1;
    end else begin
        grp_fu_388_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_392_ce = 1'b1;
    end else begin
        grp_fu_392_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_396_ce = 1'b1;
    end else begin
        grp_fu_396_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_400_ce = 1'b1;
    end else begin
        grp_fu_400_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_404_ce = 1'b1;
    end else begin
        grp_fu_404_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_408_ce = 1'b1;
    end else begin
        grp_fu_408_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_412_ce = 1'b1;
    end else begin
        grp_fu_412_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_416_ce = 1'b1;
    end else begin
        grp_fu_416_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_421_ce = 1'b1;
    end else begin
        grp_fu_421_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_426_ce = 1'b1;
    end else begin
        grp_fu_426_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_431_ce = 1'b1;
    end else begin
        grp_fu_431_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_436_ce = 1'b1;
    end else begin
        grp_fu_436_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_441_ce = 1'b1;
    end else begin
        grp_fu_441_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_446_ce = 1'b1;
    end else begin
        grp_fu_446_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_451_ce = 1'b1;
    end else begin
        grp_fu_451_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_456_ce = 1'b1;
    end else begin
        grp_fu_456_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_461_ce = 1'b1;
    end else begin
        grp_fu_461_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_466_ce = 1'b1;
    end else begin
        grp_fu_466_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_471_ce = 1'b1;
    end else begin
        grp_fu_471_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_476_ce = 1'b1;
    end else begin
        grp_fu_476_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_481_ce = 1'b1;
    end else begin
        grp_fu_481_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_486_ce = 1'b1;
    end else begin
        grp_fu_486_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_491_ce = 1'b1;
    end else begin
        grp_fu_491_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_496_ce = 1'b1;
    end else begin
        grp_fu_496_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_501_ce = 1'b1;
    end else begin
        grp_fu_501_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_506_ce = 1'b1;
    end else begin
        grp_fu_506_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_511_ce = 1'b1;
    end else begin
        grp_fu_511_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_516_ce = 1'b1;
    end else begin
        grp_fu_516_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_521_ce = 1'b1;
    end else begin
        grp_fu_521_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_526_ce = 1'b1;
    end else begin
        grp_fu_526_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_531_ce = 1'b1;
    end else begin
        grp_fu_531_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_536_ce = 1'b1;
    end else begin
        grp_fu_536_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_541_ce = 1'b1;
    end else begin
        grp_fu_541_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_546_ce = 1'b1;
    end else begin
        grp_fu_546_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_551_ce = 1'b1;
    end else begin
        grp_fu_551_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_556_ce = 1'b1;
    end else begin
        grp_fu_556_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_561_ce = 1'b1;
    end else begin
        grp_fu_561_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_566_ce = 1'b1;
    end else begin
        grp_fu_566_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_571_ce = 1'b1;
    end else begin
        grp_fu_571_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_576_ce = 1'b1;
    end else begin
        grp_fu_576_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_581_ce = 1'b1;
    end else begin
        grp_fu_581_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_586_ce = 1'b1;
    end else begin
        grp_fu_586_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_591_ce = 1'b1;
    end else begin
        grp_fu_591_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_596_ce = 1'b1;
    end else begin
        grp_fu_596_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_601_ce = 1'b1;
    end else begin
        grp_fu_601_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_606_ce = 1'b1;
    end else begin
        grp_fu_606_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_611_ce = 1'b1;
    end else begin
        grp_fu_611_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_616_ce = 1'b1;
    end else begin
        grp_fu_616_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_621_ce = 1'b1;
    end else begin
        grp_fu_621_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_626_ce = 1'b1;
    end else begin
        grp_fu_626_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_631_ce = 1'b1;
    end else begin
        grp_fu_631_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_636_ce = 1'b1;
    end else begin
        grp_fu_636_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_641_ce = 1'b1;
    end else begin
        grp_fu_641_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_646_ce = 1'b1;
    end else begin
        grp_fu_646_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_651_ce = 1'b1;
    end else begin
        grp_fu_651_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_656_ce = 1'b1;
    end else begin
        grp_fu_656_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_661_ce = 1'b1;
    end else begin
        grp_fu_661_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_666_ce = 1'b1;
    end else begin
        grp_fu_666_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_671_ce = 1'b1;
    end else begin
        grp_fu_671_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_676_ce = 1'b1;
    end else begin
        grp_fu_676_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_681_ce = 1'b1;
    end else begin
        grp_fu_681_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_686_ce = 1'b1;
    end else begin
        grp_fu_686_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_691_ce = 1'b1;
    end else begin
        grp_fu_691_ce = 1'b0;
    end
end

assign Theta_to_int_fu_2000_p1 = Theta_read_reg_2896_pp0_iter9_reg;

assign V_m_rr_7_fu_2774_p9 = {{{{{{{{tmp_273_fu_2766_p3}, {tmp_240_fu_2633_p3}}, {tmp_209_fu_2540_p3}}, {tmp_178_fu_2447_p3}}, {tmp_147_fu_2354_p3}}, {tmp_65_fu_2261_p3}}, {tmp_33_fu_2168_p3}}, {tmp_15_fu_2075_p3}};

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign grp_fu_264_p1 = tmp_174_reg_3021_pp0_iter1_reg;

assign grp_fu_268_p1 = tmp_205_reg_3026_pp0_iter1_reg;

assign grp_fu_280_p1 = tmp_95_reg_3066_pp0_iter1_reg;

assign grp_fu_284_p1 = tmp_98_reg_3071_pp0_iter1_reg;

assign grp_fu_296_p1 = tmp_112_reg_3111_pp0_iter1_reg;

assign grp_fu_300_p1 = tmp_115_reg_3116_pp0_iter1_reg;

assign grp_fu_312_p1 = tmp_134_reg_3156_pp0_iter1_reg;

assign grp_fu_316_p1 = tmp_137_reg_3161_pp0_iter1_reg;

assign grp_fu_328_p1 = tmp_165_reg_3201_pp0_iter1_reg;

assign grp_fu_332_p1 = tmp_168_reg_3206_pp0_iter1_reg;

assign grp_fu_344_p1 = tmp_196_reg_3246_pp0_iter1_reg;

assign grp_fu_348_p1 = tmp_199_reg_3251_pp0_iter1_reg;

assign grp_fu_360_p1 = tmp_227_reg_3291_pp0_iter1_reg;

assign grp_fu_364_p1 = tmp_230_reg_3296_pp0_iter1_reg;

assign grp_fu_376_p1 = tmp_258_reg_3336_pp0_iter1_reg;

assign grp_fu_380_p1 = tmp_262_reg_3341_pp0_iter1_reg;

assign grp_fu_456_p0 = tmp_77_fu_819_p1;

assign grp_fu_471_p0 = tmp_143_fu_848_p1;

assign grp_fu_486_p0 = tmp_87_fu_924_p4;

assign grp_fu_501_p0 = tmp_93_fu_971_p4;

assign grp_fu_516_p0 = tmp_104_fu_1065_p4;

assign grp_fu_531_p0 = tmp_110_fu_1112_p4;

assign grp_fu_546_p0 = tmp_126_fu_1206_p4;

assign grp_fu_561_p0 = tmp_132_fu_1253_p4;

assign grp_fu_576_p0 = tmp_157_fu_1347_p4;

assign grp_fu_591_p0 = tmp_163_fu_1394_p4;

assign grp_fu_606_p0 = tmp_188_fu_1488_p4;

assign grp_fu_621_p0 = tmp_194_fu_1535_p4;

assign grp_fu_636_p0 = tmp_219_fu_1629_p4;

assign grp_fu_651_p0 = tmp_225_fu_1676_p4;

assign grp_fu_666_p0 = tmp_250_fu_1770_p4;

assign grp_fu_681_p0 = tmp_256_fu_1817_p4;

assign notlhs10_fu_2407_p2 = ((tmp_171_fu_2393_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs11_fu_1464_p2 = ((tmp_183_fu_1444_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs12_fu_2500_p2 = ((tmp_202_fu_2486_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs13_fu_1605_p2 = ((tmp_214_fu_1585_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs14_fu_2593_p2 = ((tmp_233_fu_2579_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs15_fu_1746_p2 = ((tmp_245_fu_1726_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs16_fu_2726_p2 = ((tmp_266_fu_2712_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs1_fu_2017_p2 = ((tmp_6_fu_1986_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs2_fu_2035_p2 = ((tmp_8_fu_2003_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs3_fu_900_p2 = ((tmp_19_fu_880_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs4_fu_2128_p2 = ((tmp_24_fu_2114_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs5_fu_2314_p2 = ((tmp_140_fu_2300_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs6_fu_1041_p2 = ((tmp_51_fu_1021_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs7_fu_2221_p2 = ((tmp_56_fu_2207_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs8_fu_1323_p2 = ((tmp_152_fu_1303_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs9_fu_1182_p2 = ((tmp_121_fu_1162_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_795_p2 = ((tmp_1_fu_781_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs10_fu_2413_p2 = ((tmp_281_fu_2403_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs11_fu_1470_p2 = ((tmp_184_fu_1454_p4 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs12_fu_2506_p2 = ((tmp_282_fu_2496_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs13_fu_1611_p2 = ((tmp_215_fu_1595_p4 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs14_fu_2599_p2 = ((tmp_283_fu_2589_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs15_fu_1752_p2 = ((tmp_246_fu_1736_p4 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs16_fu_2732_p2 = ((tmp_284_fu_2722_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs1_fu_2023_p2 = ((tmp_236_fu_1996_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_2041_p2 = ((tmp_269_fu_2013_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_906_p2 = ((tmp_20_fu_890_p4 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs4_fu_2134_p2 = ((tmp_278_fu_2124_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs5_fu_2320_p2 = ((tmp_280_fu_2310_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs6_fu_1047_p2 = ((tmp_52_fu_1031_p4 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs7_fu_2227_p2 = ((tmp_279_fu_2217_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs8_fu_1329_p2 = ((tmp_153_fu_1313_p4 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs9_fu_1188_p2 = ((tmp_122_fu_1172_p4 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_801_p2 = ((tmp_75_fu_791_p1 == 23'd0) ? 1'b1 : 1'b0);

assign r_ref_rr_7_fu_2802_p9 = {{{{{{{{tmp_274_fu_2794_p3}, {tmp_241_fu_2641_p3}}, {tmp_210_fu_2548_p3}}, {tmp_179_fu_2455_p3}}, {tmp_148_fu_2362_p3}}, {tmp_66_fu_2269_p3}}, {tmp_34_fu_2176_p3}}, {tmp_16_fu_2083_p3}};

assign signal_7_fu_2830_p9 = {{{{{{{{tmp_275_fu_2822_p3}, {tmp_242_fu_2649_p3}}, {tmp_211_fu_2556_p3}}, {tmp_180_fu_2463_p3}}, {tmp_149_fu_2370_p3}}, {tmp_67_fu_2277_p3}}, {tmp_49_fu_2184_p3}}, {tmp_17_fu_2091_p3}};

assign tmp_100_fu_2108_p1 = tmp_48_1_reg_3701_pp0_iter9_reg;

assign tmp_101_fu_2158_p1 = tmp_44_1_fu_2099_p3;

assign tmp_102_fu_1006_p4 = {{r_ref_read_int_reg[95:64]}};

assign tmp_103_fu_1016_p1 = tmp_102_fu_1006_p4;

assign tmp_104_fu_1065_p4 = {{V_m_read_int_reg[95:64]}};

assign tmp_105_fu_1075_p1 = tmp_104_fu_1065_p4;

assign tmp_106_fu_1080_p4 = {{i_syn_ex_read_int_reg[95:64]}};

assign tmp_107_fu_1090_p1 = tmp_106_fu_1080_p4;

assign tmp_108_fu_1096_p4 = {{i_syn_in_read_int_reg[95:64]}};

assign tmp_109_fu_1106_p1 = tmp_108_fu_1096_p4;

assign tmp_10_fu_2029_p2 = (notrhs1_fu_2023_p2 | notlhs1_fu_2017_p2);

assign tmp_110_fu_1112_p4 = {{I_e_read_int_reg[95:64]}};

assign tmp_114_fu_2198_p1 = tmp_47_2_reg_3716_pp0_iter9_reg;

assign tmp_117_fu_2201_p1 = tmp_48_2_reg_3721_pp0_iter9_reg;

assign tmp_118_fu_2251_p1 = tmp_44_2_fu_2192_p3;

assign tmp_119_fu_1147_p4 = {{r_ref_read_int_reg[127:96]}};

assign tmp_11_fu_2047_p2 = (notrhs2_fu_2041_p2 | notlhs2_fu_2035_p2);

assign tmp_120_fu_1157_p1 = tmp_119_fu_1147_p4;

assign tmp_121_fu_1162_p4 = {{r_ref_read_int_reg[126:119]}};

assign tmp_122_fu_1172_p4 = {{r_ref_read_int_reg[118:96]}};

assign tmp_123_fu_1194_p2 = (notrhs9_fu_1188_p2 | notlhs9_fu_1182_p2);

assign tmp_124_fu_711_p0 = tmp_119_fu_1147_p4;

assign tmp_125_fu_1200_p2 = (tmp_124_fu_711_p2 & tmp_123_fu_1194_p2);

assign tmp_126_fu_1206_p4 = {{V_m_read_int_reg[127:96]}};

assign tmp_127_fu_1216_p1 = tmp_126_fu_1206_p4;

assign tmp_128_fu_1221_p4 = {{i_syn_ex_read_int_reg[127:96]}};

assign tmp_129_fu_1231_p1 = tmp_128_fu_1221_p4;

assign tmp_12_fu_2053_p2 = (tmp_11_fu_2047_p2 & tmp_10_fu_2029_p2);

assign tmp_130_fu_1237_p4 = {{i_syn_in_read_int_reg[127:96]}};

assign tmp_131_fu_1247_p1 = tmp_130_fu_1237_p4;

assign tmp_132_fu_1253_p4 = {{I_e_read_int_reg[127:96]}};

assign tmp_136_fu_2291_p1 = tmp_47_3_reg_3736_pp0_iter9_reg;

assign tmp_139_fu_2294_p1 = tmp_48_3_reg_3741_pp0_iter9_reg;

assign tmp_140_fu_2300_p4 = {{tmp_43_3_to_int_fu_2297_p1[30:23]}};

assign tmp_141_fu_2326_p2 = (notrhs5_fu_2320_p2 | notlhs5_fu_2314_p2);

assign tmp_142_fu_2332_p2 = (tmp_141_fu_2326_p2 & tmp_11_fu_2047_p2);

assign tmp_143_fu_848_p1 = I_e_read_int_reg[31:0];

assign tmp_145_fu_2338_p2 = (tmp_144_fu_748_p2 & tmp_142_fu_2332_p2);

assign tmp_146_fu_2344_p1 = tmp_44_3_fu_2285_p3;

assign tmp_147_fu_2354_p3 = ((tmp_145_fu_2338_p2[0:0] === 1'b1) ? tmp_83_fu_2072_p1 : tmp_43_3_to_int_fu_2297_p1);

assign tmp_148_fu_2362_p3 = ((tmp_145_fu_2338_p2[0:0] === 1'b1) ? tmp_82_fu_2069_p1 : tmp_146_fu_2344_p1);

assign tmp_149_fu_2370_p3 = ((tmp_145_fu_2338_p2[0:0] === 1'b1) ? tmp_50_2_fu_2348_p2 : 32'd4294967295);

assign tmp_14_fu_2059_p2 = (tmp_13_fu_736_p2 & tmp_12_fu_2053_p2);

assign tmp_150_fu_1288_p4 = {{r_ref_read_int_reg[159:128]}};

assign tmp_151_fu_1298_p1 = tmp_150_fu_1288_p4;

assign tmp_152_fu_1303_p4 = {{r_ref_read_int_reg[158:151]}};

assign tmp_153_fu_1313_p4 = {{r_ref_read_int_reg[150:128]}};

assign tmp_154_fu_1335_p2 = (notrhs8_fu_1329_p2 | notlhs8_fu_1323_p2);

assign tmp_155_fu_716_p0 = tmp_150_fu_1288_p4;

assign tmp_156_fu_1341_p2 = (tmp_155_fu_716_p2 & tmp_154_fu_1335_p2);

assign tmp_157_fu_1347_p4 = {{V_m_read_int_reg[159:128]}};

assign tmp_158_fu_1357_p1 = tmp_157_fu_1347_p4;

assign tmp_159_fu_1362_p4 = {{i_syn_ex_read_int_reg[159:128]}};

assign tmp_15_fu_2075_p3 = ((tmp_14_fu_2059_p2[0:0] === 1'b1) ? tmp_83_fu_2072_p1 : tmp_43_to_int_fu_1983_p1);

assign tmp_160_fu_1372_p1 = tmp_159_fu_1362_p4;

assign tmp_161_fu_1378_p4 = {{i_syn_in_read_int_reg[159:128]}};

assign tmp_162_fu_1388_p1 = tmp_161_fu_1378_p4;

assign tmp_163_fu_1394_p4 = {{I_e_read_int_reg[159:128]}};

assign tmp_167_fu_2384_p1 = tmp_47_4_reg_3756_pp0_iter9_reg;

assign tmp_16_fu_2083_p3 = ((tmp_14_fu_2059_p2[0:0] === 1'b1) ? tmp_82_fu_2069_p1 : tmp_81_fu_2065_p1);

assign tmp_170_fu_2387_p1 = tmp_48_4_reg_3761_pp0_iter9_reg;

assign tmp_171_fu_2393_p4 = {{tmp_43_4_to_int_fu_2390_p1[30:23]}};

assign tmp_172_fu_2419_p2 = (notrhs10_fu_2413_p2 | notlhs10_fu_2407_p2);

assign tmp_173_fu_2425_p2 = (tmp_172_fu_2419_p2 & tmp_11_fu_2047_p2);

assign tmp_174_fu_857_p1 = weighted_spikes_ex_s_int_reg[31:0];

assign tmp_176_fu_2431_p2 = (tmp_175_fu_752_p2 & tmp_173_fu_2425_p2);

assign tmp_177_fu_2437_p1 = tmp_44_4_fu_2378_p3;

assign tmp_178_fu_2447_p3 = ((tmp_176_fu_2431_p2[0:0] === 1'b1) ? tmp_83_fu_2072_p1 : tmp_43_4_to_int_fu_2390_p1);

assign tmp_179_fu_2455_p3 = ((tmp_176_fu_2431_p2[0:0] === 1'b1) ? tmp_82_fu_2069_p1 : tmp_177_fu_2437_p1);

assign tmp_17_fu_2091_p3 = ((tmp_14_fu_2059_p2[0:0] === 1'b1) ? tmp_fu_1964_p3 : 32'd4294967295);

assign tmp_180_fu_2463_p3 = ((tmp_176_fu_2431_p2[0:0] === 1'b1) ? tmp_50_3_fu_2441_p2 : 32'd4294967295);

assign tmp_181_fu_1429_p4 = {{r_ref_read_int_reg[191:160]}};

assign tmp_182_fu_1439_p1 = tmp_181_fu_1429_p4;

assign tmp_183_fu_1444_p4 = {{r_ref_read_int_reg[190:183]}};

assign tmp_184_fu_1454_p4 = {{r_ref_read_int_reg[182:160]}};

assign tmp_185_fu_1476_p2 = (notrhs11_fu_1470_p2 | notlhs11_fu_1464_p2);

assign tmp_186_fu_721_p0 = tmp_181_fu_1429_p4;

assign tmp_187_fu_1482_p2 = (tmp_186_fu_721_p2 & tmp_185_fu_1476_p2);

assign tmp_188_fu_1488_p4 = {{V_m_read_int_reg[191:160]}};

assign tmp_189_fu_1498_p1 = tmp_188_fu_1488_p4;

assign tmp_190_fu_1503_p4 = {{i_syn_ex_read_int_reg[191:160]}};

assign tmp_191_fu_1513_p1 = tmp_190_fu_1503_p4;

assign tmp_192_fu_1519_p4 = {{i_syn_in_read_int_reg[191:160]}};

assign tmp_193_fu_1529_p1 = tmp_192_fu_1519_p4;

assign tmp_194_fu_1535_p4 = {{I_e_read_int_reg[191:160]}};

assign tmp_198_fu_2477_p1 = tmp_47_5_reg_3776_pp0_iter9_reg;

assign tmp_19_fu_880_p4 = {{r_ref_read_int_reg[62:55]}};

assign tmp_1_fu_781_p4 = {{r_ref_read_int_reg[30:23]}};

assign tmp_201_fu_2480_p1 = tmp_48_5_reg_3781_pp0_iter9_reg;

assign tmp_202_fu_2486_p4 = {{tmp_43_5_to_int_fu_2483_p1[30:23]}};

assign tmp_203_fu_2512_p2 = (notrhs12_fu_2506_p2 | notlhs12_fu_2500_p2);

assign tmp_204_fu_2518_p2 = (tmp_203_fu_2512_p2 & tmp_11_fu_2047_p2);

assign tmp_205_fu_861_p1 = weighted_spikes_in_s_int_reg[31:0];

assign tmp_207_fu_2524_p2 = (tmp_206_fu_756_p2 & tmp_204_fu_2518_p2);

assign tmp_208_fu_2530_p1 = tmp_44_5_fu_2471_p3;

assign tmp_209_fu_2540_p3 = ((tmp_207_fu_2524_p2[0:0] === 1'b1) ? tmp_83_fu_2072_p1 : tmp_43_5_to_int_fu_2483_p1);

assign tmp_20_fu_890_p4 = {{r_ref_read_int_reg[54:32]}};

assign tmp_210_fu_2548_p3 = ((tmp_207_fu_2524_p2[0:0] === 1'b1) ? tmp_82_fu_2069_p1 : tmp_208_fu_2530_p1);

assign tmp_211_fu_2556_p3 = ((tmp_207_fu_2524_p2[0:0] === 1'b1) ? tmp_50_4_fu_2534_p2 : 32'd4294967295);

assign tmp_212_fu_1570_p4 = {{r_ref_read_int_reg[223:192]}};

assign tmp_213_fu_1580_p1 = tmp_212_fu_1570_p4;

assign tmp_214_fu_1585_p4 = {{r_ref_read_int_reg[222:215]}};

assign tmp_215_fu_1595_p4 = {{r_ref_read_int_reg[214:192]}};

assign tmp_216_fu_1617_p2 = (notrhs13_fu_1611_p2 | notlhs13_fu_1605_p2);

assign tmp_217_fu_726_p0 = tmp_212_fu_1570_p4;

assign tmp_218_fu_1623_p2 = (tmp_217_fu_726_p2 & tmp_216_fu_1617_p2);

assign tmp_219_fu_1629_p4 = {{V_m_read_int_reg[223:192]}};

assign tmp_21_fu_912_p2 = (notrhs3_fu_906_p2 | notlhs3_fu_900_p2);

assign tmp_220_fu_1639_p1 = tmp_219_fu_1629_p4;

assign tmp_221_fu_1644_p4 = {{i_syn_ex_read_int_reg[223:192]}};

assign tmp_222_fu_1654_p1 = tmp_221_fu_1644_p4;

assign tmp_223_fu_1660_p4 = {{i_syn_in_read_int_reg[223:192]}};

assign tmp_224_fu_1670_p1 = tmp_223_fu_1660_p4;

assign tmp_225_fu_1676_p4 = {{I_e_read_int_reg[223:192]}};

assign tmp_229_fu_2570_p1 = tmp_47_6_reg_3796_pp0_iter9_reg;

assign tmp_22_fu_701_p0 = tmp_84_fu_865_p4;

assign tmp_232_fu_2573_p1 = tmp_48_6_reg_3801_pp0_iter9_reg;

assign tmp_233_fu_2579_p4 = {{tmp_43_6_to_int_fu_2576_p1[30:23]}};

assign tmp_234_fu_2605_p2 = (notrhs14_fu_2599_p2 | notlhs14_fu_2593_p2);

assign tmp_235_fu_2611_p2 = (tmp_234_fu_2605_p2 & tmp_11_fu_2047_p2);

assign tmp_236_fu_1996_p1 = tmp_43_to_int_fu_1983_p1[22:0];

assign tmp_238_fu_2617_p2 = (tmp_237_fu_760_p2 & tmp_235_fu_2611_p2);

assign tmp_239_fu_2623_p1 = tmp_44_6_fu_2564_p3;

assign tmp_23_fu_918_p2 = (tmp_22_fu_701_p2 & tmp_21_fu_912_p2);

assign tmp_240_fu_2633_p3 = ((tmp_238_fu_2617_p2[0:0] === 1'b1) ? tmp_83_fu_2072_p1 : tmp_43_6_to_int_fu_2576_p1);

assign tmp_241_fu_2641_p3 = ((tmp_238_fu_2617_p2[0:0] === 1'b1) ? tmp_82_fu_2069_p1 : tmp_239_fu_2623_p1);

assign tmp_242_fu_2649_p3 = ((tmp_238_fu_2617_p2[0:0] === 1'b1) ? tmp_50_5_fu_2627_p2 : 32'd4294967295);

assign tmp_243_fu_1711_p4 = {{r_ref_read_int_reg[255:224]}};

assign tmp_244_fu_1721_p1 = tmp_243_fu_1711_p4;

assign tmp_245_fu_1726_p4 = {{r_ref_read_int_reg[254:247]}};

assign tmp_246_fu_1736_p4 = {{r_ref_read_int_reg[246:224]}};

assign tmp_247_fu_1758_p2 = (notrhs15_fu_1752_p2 | notlhs15_fu_1746_p2);

assign tmp_248_fu_731_p0 = tmp_243_fu_1711_p4;

assign tmp_249_fu_1764_p2 = (tmp_248_fu_731_p2 & tmp_247_fu_1758_p2);

assign tmp_24_fu_2114_p4 = {{tmp_43_1_to_int_fu_2111_p1[30:23]}};

assign tmp_250_fu_1770_p4 = {{V_m_read_int_reg[255:224]}};

assign tmp_251_fu_1780_p1 = tmp_250_fu_1770_p4;

assign tmp_252_fu_1785_p4 = {{i_syn_ex_read_int_reg[255:224]}};

assign tmp_253_fu_1795_p1 = tmp_252_fu_1785_p4;

assign tmp_254_fu_1801_p4 = {{i_syn_in_read_int_reg[255:224]}};

assign tmp_255_fu_1811_p1 = tmp_254_fu_1801_p4;

assign tmp_256_fu_1817_p4 = {{I_e_read_int_reg[255:224]}};

assign tmp_260_fu_2663_p1 = tmp_47_7_reg_3816_pp0_iter9_reg;

assign tmp_261_fu_2666_p9 = {{{{{{{{tmp_260_fu_2663_p1}, {tmp_229_fu_2570_p1}}, {tmp_198_fu_2477_p1}}, {tmp_167_fu_2384_p1}}, {tmp_136_fu_2291_p1}}, {tmp_114_fu_2198_p1}}, {tmp_97_fu_2105_p1}}, {tmp_76_fu_1977_p1}};

assign tmp_264_fu_2686_p1 = tmp_48_7_reg_3821_pp0_iter9_reg;

assign tmp_265_fu_2689_p9 = {{{{{{{{tmp_264_fu_2686_p1}, {tmp_232_fu_2573_p1}}, {tmp_201_fu_2480_p1}}, {tmp_170_fu_2387_p1}}, {tmp_139_fu_2294_p1}}, {tmp_117_fu_2201_p1}}, {tmp_100_fu_2108_p1}}, {tmp_79_fu_1980_p1}};

assign tmp_266_fu_2712_p4 = {{tmp_43_7_to_int_fu_2709_p1[30:23]}};

assign tmp_267_fu_2738_p2 = (notrhs16_fu_2732_p2 | notlhs16_fu_2726_p2);

assign tmp_268_fu_2744_p2 = (tmp_267_fu_2738_p2 & tmp_11_fu_2047_p2);

assign tmp_269_fu_2013_p1 = Theta_to_int_fu_2000_p1[22:0];

assign tmp_271_fu_2750_p2 = (tmp_270_fu_764_p2 & tmp_268_fu_2744_p2);

assign tmp_272_fu_2756_p1 = tmp_44_7_fu_2657_p3;

assign tmp_273_fu_2766_p3 = ((tmp_271_fu_2750_p2[0:0] === 1'b1) ? tmp_83_fu_2072_p1 : tmp_43_7_to_int_fu_2709_p1);

assign tmp_274_fu_2794_p3 = ((tmp_271_fu_2750_p2[0:0] === 1'b1) ? tmp_82_fu_2069_p1 : tmp_272_fu_2756_p1);

assign tmp_275_fu_2822_p3 = ((tmp_271_fu_2750_p2[0:0] === 1'b1) ? tmp_50_6_fu_2760_p2 : 32'd4294967295);

assign tmp_278_fu_2124_p1 = tmp_43_1_to_int_fu_2111_p1[22:0];

assign tmp_279_fu_2217_p1 = tmp_43_2_to_int_fu_2204_p1[22:0];

assign tmp_280_fu_2310_p1 = tmp_43_3_to_int_fu_2297_p1[22:0];

assign tmp_281_fu_2403_p1 = tmp_43_4_to_int_fu_2390_p1[22:0];

assign tmp_282_fu_2496_p1 = tmp_43_5_to_int_fu_2483_p1[22:0];

assign tmp_283_fu_2589_p1 = tmp_43_6_to_int_fu_2576_p1[22:0];

assign tmp_284_fu_2722_p1 = tmp_43_7_to_int_fu_2709_p1[22:0];

assign tmp_28_fu_2140_p2 = (notrhs4_fu_2134_p2 | notlhs4_fu_2128_p2);

assign tmp_30_fu_2146_p2 = (tmp_28_fu_2140_p2 & tmp_11_fu_2047_p2);

assign tmp_32_fu_2152_p2 = (tmp_31_fu_740_p2 & tmp_30_fu_2146_p2);

assign tmp_33_fu_2168_p3 = ((tmp_32_fu_2152_p2[0:0] === 1'b1) ? tmp_83_fu_2072_p1 : tmp_43_1_to_int_fu_2111_p1);

assign tmp_34_fu_2176_p3 = ((tmp_32_fu_2152_p2[0:0] === 1'b1) ? tmp_82_fu_2069_p1 : tmp_101_fu_2158_p1);

assign tmp_3_fu_807_p2 = (notrhs_fu_801_p2 | notlhs_fu_795_p2);

assign tmp_43_1_fu_1922_p3 = ((tmp_23_reg_3037_pp0_iter8_reg[0:0] === 1'b1) ? grp_fu_388_p2 : tmp_88_reg_3043_pp0_iter8_reg);

assign tmp_43_1_to_int_fu_2111_p1 = tmp_43_1_reg_3832;

assign tmp_43_2_fu_1928_p3 = ((tmp_55_reg_3082_pp0_iter8_reg[0:0] === 1'b1) ? grp_fu_392_p2 : tmp_105_reg_3088_pp0_iter8_reg);

assign tmp_43_2_to_int_fu_2204_p1 = tmp_43_2_reg_3838;

assign tmp_43_3_fu_1934_p3 = ((tmp_125_reg_3127_pp0_iter8_reg[0:0] === 1'b1) ? grp_fu_396_p2 : tmp_127_reg_3133_pp0_iter8_reg);

assign tmp_43_3_to_int_fu_2297_p1 = tmp_43_3_reg_3844;

assign tmp_43_4_fu_1940_p3 = ((tmp_156_reg_3172_pp0_iter8_reg[0:0] === 1'b1) ? grp_fu_400_p2 : tmp_158_reg_3178_pp0_iter8_reg);

assign tmp_43_4_to_int_fu_2390_p1 = tmp_43_4_reg_3850;

assign tmp_43_5_fu_1946_p3 = ((tmp_187_reg_3217_pp0_iter8_reg[0:0] === 1'b1) ? grp_fu_404_p2 : tmp_189_reg_3223_pp0_iter8_reg);

assign tmp_43_5_to_int_fu_2483_p1 = tmp_43_5_reg_3856;

assign tmp_43_6_fu_1952_p3 = ((tmp_218_reg_3262_pp0_iter8_reg[0:0] === 1'b1) ? grp_fu_408_p2 : tmp_220_reg_3268_pp0_iter8_reg);

assign tmp_43_6_to_int_fu_2576_p1 = tmp_43_6_reg_3862;

assign tmp_43_7_fu_1958_p3 = ((tmp_249_reg_3307_pp0_iter8_reg[0:0] === 1'b1) ? grp_fu_412_p2 : tmp_251_reg_3313_pp0_iter8_reg);

assign tmp_43_7_to_int_fu_2709_p1 = tmp_43_7_reg_3868;

assign tmp_43_fu_1916_p3 = ((tmp_5_reg_2992_pp0_iter8_reg[0:0] === 1'b1) ? grp_fu_384_p2 : tmp_68_reg_2998_pp0_iter8_reg);

assign tmp_43_to_int_fu_1983_p1 = tmp_43_reg_3826;

assign tmp_44_1_fu_2099_p3 = ((tmp_23_reg_3037_pp0_iter9_reg[0:0] === 1'b1) ? tmp_86_reg_3031_pp0_iter9_reg : grp_fu_421_p2);

assign tmp_44_2_fu_2192_p3 = ((tmp_55_reg_3082_pp0_iter9_reg[0:0] === 1'b1) ? tmp_103_reg_3076_pp0_iter9_reg : grp_fu_426_p2);

assign tmp_44_3_fu_2285_p3 = ((tmp_125_reg_3127_pp0_iter9_reg[0:0] === 1'b1) ? tmp_120_reg_3121_pp0_iter9_reg : grp_fu_431_p2);

assign tmp_44_4_fu_2378_p3 = ((tmp_156_reg_3172_pp0_iter9_reg[0:0] === 1'b1) ? tmp_151_reg_3166_pp0_iter9_reg : grp_fu_436_p2);

assign tmp_44_5_fu_2471_p3 = ((tmp_187_reg_3217_pp0_iter9_reg[0:0] === 1'b1) ? tmp_182_reg_3211_pp0_iter9_reg : grp_fu_441_p2);

assign tmp_44_6_fu_2564_p3 = ((tmp_218_reg_3262_pp0_iter9_reg[0:0] === 1'b1) ? tmp_213_reg_3256_pp0_iter9_reg : grp_fu_446_p2);

assign tmp_44_7_fu_2657_p3 = ((tmp_249_reg_3307_pp0_iter9_reg[0:0] === 1'b1) ? tmp_244_reg_3301_pp0_iter9_reg : grp_fu_451_p2);

assign tmp_44_fu_1971_p3 = ((tmp_5_reg_2992_pp0_iter9_reg[0:0] === 1'b1) ? tmp_s_reg_2986_pp0_iter9_reg : grp_fu_416_p2);

assign tmp_49_fu_2184_p3 = ((tmp_32_fu_2152_p2[0:0] === 1'b1) ? tmp_50_s_fu_2162_p2 : 32'd4294967295);

assign tmp_4_fu_696_p0 = tmp_73_fu_772_p1;

assign tmp_50_1_fu_2255_p2 = (tmp_fu_1964_p3 | 32'd2);

assign tmp_50_2_fu_2348_p2 = (tmp_fu_1964_p3 | 32'd3);

assign tmp_50_3_fu_2441_p2 = (tmp_fu_1964_p3 | 32'd4);

assign tmp_50_4_fu_2534_p2 = (tmp_fu_1964_p3 | 32'd5);

assign tmp_50_5_fu_2627_p2 = (tmp_fu_1964_p3 | 32'd6);

assign tmp_50_6_fu_2760_p2 = (tmp_fu_1964_p3 | 32'd7);

assign tmp_50_s_fu_2162_p2 = (tmp_fu_1964_p3 | 32'd1);

assign tmp_51_fu_1021_p4 = {{r_ref_read_int_reg[94:87]}};

assign tmp_52_fu_1031_p4 = {{r_ref_read_int_reg[86:64]}};

assign tmp_53_fu_1053_p2 = (notrhs6_fu_1047_p2 | notlhs6_fu_1041_p2);

assign tmp_54_fu_706_p0 = tmp_102_fu_1006_p4;

assign tmp_55_fu_1059_p2 = (tmp_54_fu_706_p2 & tmp_53_fu_1053_p2);

assign tmp_56_fu_2207_p4 = {{tmp_43_2_to_int_fu_2204_p1[30:23]}};

assign tmp_5_fu_813_p2 = (tmp_4_fu_696_p2 & tmp_3_fu_807_p2);

assign tmp_60_fu_2233_p2 = (notrhs7_fu_2227_p2 | notlhs7_fu_2221_p2);

assign tmp_62_fu_2239_p2 = (tmp_60_fu_2233_p2 & tmp_11_fu_2047_p2);

assign tmp_64_fu_2245_p2 = (tmp_63_fu_744_p2 & tmp_62_fu_2239_p2);

assign tmp_65_fu_2261_p3 = ((tmp_64_fu_2245_p2[0:0] === 1'b1) ? tmp_83_fu_2072_p1 : tmp_43_2_to_int_fu_2204_p1);

assign tmp_66_fu_2269_p3 = ((tmp_64_fu_2245_p2[0:0] === 1'b1) ? tmp_82_fu_2069_p1 : tmp_118_fu_2251_p1);

assign tmp_67_fu_2277_p3 = ((tmp_64_fu_2245_p2[0:0] === 1'b1) ? tmp_50_1_fu_2255_p2 : 32'd4294967295);

assign tmp_68_fu_823_p1 = tmp_77_fu_819_p1;

assign tmp_69_fu_832_p1 = tmp_80_fu_828_p1;

assign tmp_6_fu_1986_p4 = {{tmp_43_to_int_fu_1983_p1[30:23]}};

assign tmp_70_fu_842_p1 = tmp_85_fu_838_p1;

assign tmp_71_fu_768_p1 = i_int_reg[28:0];

assign tmp_73_fu_772_p1 = r_ref_read_int_reg[31:0];

assign tmp_75_fu_791_p1 = r_ref_read_int_reg[22:0];

assign tmp_76_fu_1977_p1 = tmp_47_reg_3676_pp0_iter9_reg;

assign tmp_77_fu_819_p1 = V_m_read_int_reg[31:0];

assign tmp_79_fu_1980_p1 = tmp_48_reg_3681_pp0_iter9_reg;

assign tmp_80_fu_828_p1 = i_syn_ex_read_int_reg[31:0];

assign tmp_81_fu_2065_p1 = tmp_44_fu_1971_p3;

assign tmp_82_fu_2069_p1 = RefractoryCounts_re_reg_2891_pp0_iter9_reg;

assign tmp_83_fu_2072_p1 = V_reset_read_reg_2886_pp0_iter9_reg;

assign tmp_84_fu_865_p4 = {{r_ref_read_int_reg[63:32]}};

assign tmp_85_fu_838_p1 = i_syn_in_read_int_reg[31:0];

assign tmp_86_fu_875_p1 = tmp_84_fu_865_p4;

assign tmp_87_fu_924_p4 = {{V_m_read_int_reg[63:32]}};

assign tmp_88_fu_934_p1 = tmp_87_fu_924_p4;

assign tmp_89_fu_939_p4 = {{i_syn_ex_read_int_reg[63:32]}};

assign tmp_8_fu_2003_p4 = {{Theta_to_int_fu_2000_p1[30:23]}};

assign tmp_90_fu_949_p1 = tmp_89_fu_939_p4;

assign tmp_91_fu_955_p4 = {{i_syn_in_read_int_reg[63:32]}};

assign tmp_92_fu_965_p1 = tmp_91_fu_955_p4;

assign tmp_93_fu_971_p4 = {{I_e_read_int_reg[63:32]}};

assign tmp_97_fu_2105_p1 = tmp_47_1_reg_3696_pp0_iter9_reg;

assign tmp_fu_1964_p3 = {{tmp_71_reg_2981_pp0_iter9_reg}, {3'd0}};

assign tmp_s_fu_776_p1 = tmp_73_fu_772_p1;

always @ (posedge ap_clk) begin
    ap_return_4_int_reg[32] <= 1'b1;
    ap_return_4_int_reg[65:65] <= 1'b1;
    ap_return_4_int_reg[97:96] <= 2'b11;
    ap_return_4_int_reg[130:130] <= 1'b1;
    ap_return_4_int_reg[160:160] <= 1'b1;
    ap_return_4_int_reg[162:162] <= 1'b1;
    ap_return_4_int_reg[194:193] <= 2'b11;
    ap_return_4_int_reg[226:224] <= 3'b111;
    ap_return_5_int_reg[32] <= 1'b1;
    ap_return_5_int_reg[65:65] <= 1'b1;
    ap_return_5_int_reg[97:96] <= 2'b11;
    ap_return_5_int_reg[130:130] <= 1'b1;
    ap_return_5_int_reg[160:160] <= 1'b1;
    ap_return_5_int_reg[162:162] <= 1'b1;
    ap_return_5_int_reg[194:193] <= 2'b11;
    ap_return_5_int_reg[226:224] <= 3'b111;
end

endmodule //execute
