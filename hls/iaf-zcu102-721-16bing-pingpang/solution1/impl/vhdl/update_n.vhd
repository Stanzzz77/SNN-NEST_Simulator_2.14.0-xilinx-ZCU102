-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity update_n is
generic (
    C_M_AXI_STABLE_PARA_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_STABLE_PARA_ID_WIDTH : INTEGER := 1;
    C_M_AXI_STABLE_PARA_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_STABLE_PARA_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_STABLE_PARA_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_STABLE_PARA_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_STABLE_PARA_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_STABLE_PARA_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT01_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_INPUT01_ID_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT01_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT01_DATA_WIDTH : INTEGER := 1024;
    C_M_AXI_INPUT01_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT01_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT01_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT01_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT00_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_INPUT00_ID_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT00_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT00_DATA_WIDTH : INTEGER := 1024;
    C_M_AXI_INPUT00_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT00_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT00_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT00_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUTPUT0_S_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_OUTPUT0_S_ID_WIDTH : INTEGER := 1;
    C_M_AXI_OUTPUT0_S_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUTPUT0_S_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_OUTPUT0_S_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUTPUT0_S_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUTPUT0_S_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUTPUT0_S_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUTPUT1_S_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_OUTPUT1_S_ID_WIDTH : INTEGER := 1;
    C_M_AXI_OUTPUT1_S_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUTPUT1_S_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_OUTPUT1_S_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUTPUT1_S_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUTPUT1_S_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUTPUT1_S_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CTRL_BUS_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CTRL_BUS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_STABLE_PARA_USER_VALUE : INTEGER := 0;
    C_M_AXI_STABLE_PARA_PROT_VALUE : INTEGER := 0;
    C_M_AXI_STABLE_PARA_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_INPUT01_USER_VALUE : INTEGER := 0;
    C_M_AXI_INPUT01_PROT_VALUE : INTEGER := 0;
    C_M_AXI_INPUT01_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_INPUT00_USER_VALUE : INTEGER := 0;
    C_M_AXI_INPUT00_PROT_VALUE : INTEGER := 0;
    C_M_AXI_INPUT00_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_OUTPUT0_S_USER_VALUE : INTEGER := 0;
    C_M_AXI_OUTPUT0_S_PROT_VALUE : INTEGER := 0;
    C_M_AXI_OUTPUT0_S_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_OUTPUT1_S_USER_VALUE : INTEGER := 0;
    C_M_AXI_OUTPUT1_S_PROT_VALUE : INTEGER := 0;
    C_M_AXI_OUTPUT1_S_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_stable_para_AWVALID : OUT STD_LOGIC;
    m_axi_stable_para_AWREADY : IN STD_LOGIC;
    m_axi_stable_para_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_ADDR_WIDTH-1 downto 0);
    m_axi_stable_para_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_ID_WIDTH-1 downto 0);
    m_axi_stable_para_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_stable_para_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_stable_para_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_stable_para_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_stable_para_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_stable_para_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_stable_para_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_stable_para_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_stable_para_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_AWUSER_WIDTH-1 downto 0);
    m_axi_stable_para_WVALID : OUT STD_LOGIC;
    m_axi_stable_para_WREADY : IN STD_LOGIC;
    m_axi_stable_para_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_DATA_WIDTH-1 downto 0);
    m_axi_stable_para_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_DATA_WIDTH/8-1 downto 0);
    m_axi_stable_para_WLAST : OUT STD_LOGIC;
    m_axi_stable_para_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_ID_WIDTH-1 downto 0);
    m_axi_stable_para_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_WUSER_WIDTH-1 downto 0);
    m_axi_stable_para_ARVALID : OUT STD_LOGIC;
    m_axi_stable_para_ARREADY : IN STD_LOGIC;
    m_axi_stable_para_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_ADDR_WIDTH-1 downto 0);
    m_axi_stable_para_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_ID_WIDTH-1 downto 0);
    m_axi_stable_para_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_stable_para_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_stable_para_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_stable_para_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_stable_para_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_stable_para_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_stable_para_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_stable_para_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_stable_para_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_ARUSER_WIDTH-1 downto 0);
    m_axi_stable_para_RVALID : IN STD_LOGIC;
    m_axi_stable_para_RREADY : OUT STD_LOGIC;
    m_axi_stable_para_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_DATA_WIDTH-1 downto 0);
    m_axi_stable_para_RLAST : IN STD_LOGIC;
    m_axi_stable_para_RID : IN STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_ID_WIDTH-1 downto 0);
    m_axi_stable_para_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_RUSER_WIDTH-1 downto 0);
    m_axi_stable_para_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_stable_para_BVALID : IN STD_LOGIC;
    m_axi_stable_para_BREADY : OUT STD_LOGIC;
    m_axi_stable_para_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_stable_para_BID : IN STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_ID_WIDTH-1 downto 0);
    m_axi_stable_para_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_STABLE_PARA_BUSER_WIDTH-1 downto 0);
    m_axi_input01_AWVALID : OUT STD_LOGIC;
    m_axi_input01_AWREADY : IN STD_LOGIC;
    m_axi_input01_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT01_ADDR_WIDTH-1 downto 0);
    m_axi_input01_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT01_ID_WIDTH-1 downto 0);
    m_axi_input01_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_input01_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input01_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input01_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input01_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input01_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input01_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input01_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input01_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT01_AWUSER_WIDTH-1 downto 0);
    m_axi_input01_WVALID : OUT STD_LOGIC;
    m_axi_input01_WREADY : IN STD_LOGIC;
    m_axi_input01_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT01_DATA_WIDTH-1 downto 0);
    m_axi_input01_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT01_DATA_WIDTH/8-1 downto 0);
    m_axi_input01_WLAST : OUT STD_LOGIC;
    m_axi_input01_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT01_ID_WIDTH-1 downto 0);
    m_axi_input01_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT01_WUSER_WIDTH-1 downto 0);
    m_axi_input01_ARVALID : OUT STD_LOGIC;
    m_axi_input01_ARREADY : IN STD_LOGIC;
    m_axi_input01_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT01_ADDR_WIDTH-1 downto 0);
    m_axi_input01_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT01_ID_WIDTH-1 downto 0);
    m_axi_input01_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_input01_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input01_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input01_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input01_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input01_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input01_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input01_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input01_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT01_ARUSER_WIDTH-1 downto 0);
    m_axi_input01_RVALID : IN STD_LOGIC;
    m_axi_input01_RREADY : OUT STD_LOGIC;
    m_axi_input01_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT01_DATA_WIDTH-1 downto 0);
    m_axi_input01_RLAST : IN STD_LOGIC;
    m_axi_input01_RID : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT01_ID_WIDTH-1 downto 0);
    m_axi_input01_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT01_RUSER_WIDTH-1 downto 0);
    m_axi_input01_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input01_BVALID : IN STD_LOGIC;
    m_axi_input01_BREADY : OUT STD_LOGIC;
    m_axi_input01_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input01_BID : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT01_ID_WIDTH-1 downto 0);
    m_axi_input01_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT01_BUSER_WIDTH-1 downto 0);
    m_axi_input00_AWVALID : OUT STD_LOGIC;
    m_axi_input00_AWREADY : IN STD_LOGIC;
    m_axi_input00_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT00_ADDR_WIDTH-1 downto 0);
    m_axi_input00_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT00_ID_WIDTH-1 downto 0);
    m_axi_input00_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_input00_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input00_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input00_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input00_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input00_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input00_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input00_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input00_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT00_AWUSER_WIDTH-1 downto 0);
    m_axi_input00_WVALID : OUT STD_LOGIC;
    m_axi_input00_WREADY : IN STD_LOGIC;
    m_axi_input00_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT00_DATA_WIDTH-1 downto 0);
    m_axi_input00_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT00_DATA_WIDTH/8-1 downto 0);
    m_axi_input00_WLAST : OUT STD_LOGIC;
    m_axi_input00_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT00_ID_WIDTH-1 downto 0);
    m_axi_input00_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT00_WUSER_WIDTH-1 downto 0);
    m_axi_input00_ARVALID : OUT STD_LOGIC;
    m_axi_input00_ARREADY : IN STD_LOGIC;
    m_axi_input00_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT00_ADDR_WIDTH-1 downto 0);
    m_axi_input00_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT00_ID_WIDTH-1 downto 0);
    m_axi_input00_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_input00_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input00_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input00_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input00_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input00_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input00_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input00_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input00_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT00_ARUSER_WIDTH-1 downto 0);
    m_axi_input00_RVALID : IN STD_LOGIC;
    m_axi_input00_RREADY : OUT STD_LOGIC;
    m_axi_input00_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT00_DATA_WIDTH-1 downto 0);
    m_axi_input00_RLAST : IN STD_LOGIC;
    m_axi_input00_RID : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT00_ID_WIDTH-1 downto 0);
    m_axi_input00_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT00_RUSER_WIDTH-1 downto 0);
    m_axi_input00_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input00_BVALID : IN STD_LOGIC;
    m_axi_input00_BREADY : OUT STD_LOGIC;
    m_axi_input00_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input00_BID : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT00_ID_WIDTH-1 downto 0);
    m_axi_input00_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT00_BUSER_WIDTH-1 downto 0);
    m_axi_output0_s_AWVALID : OUT STD_LOGIC;
    m_axi_output0_s_AWREADY : IN STD_LOGIC;
    m_axi_output0_s_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_ADDR_WIDTH-1 downto 0);
    m_axi_output0_s_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_ID_WIDTH-1 downto 0);
    m_axi_output0_s_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_output0_s_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output0_s_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output0_s_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output0_s_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output0_s_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output0_s_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output0_s_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output0_s_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_AWUSER_WIDTH-1 downto 0);
    m_axi_output0_s_WVALID : OUT STD_LOGIC;
    m_axi_output0_s_WREADY : IN STD_LOGIC;
    m_axi_output0_s_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_DATA_WIDTH-1 downto 0);
    m_axi_output0_s_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_DATA_WIDTH/8-1 downto 0);
    m_axi_output0_s_WLAST : OUT STD_LOGIC;
    m_axi_output0_s_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_ID_WIDTH-1 downto 0);
    m_axi_output0_s_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_WUSER_WIDTH-1 downto 0);
    m_axi_output0_s_ARVALID : OUT STD_LOGIC;
    m_axi_output0_s_ARREADY : IN STD_LOGIC;
    m_axi_output0_s_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_ADDR_WIDTH-1 downto 0);
    m_axi_output0_s_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_ID_WIDTH-1 downto 0);
    m_axi_output0_s_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_output0_s_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output0_s_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output0_s_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output0_s_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output0_s_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output0_s_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output0_s_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output0_s_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_ARUSER_WIDTH-1 downto 0);
    m_axi_output0_s_RVALID : IN STD_LOGIC;
    m_axi_output0_s_RREADY : OUT STD_LOGIC;
    m_axi_output0_s_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_DATA_WIDTH-1 downto 0);
    m_axi_output0_s_RLAST : IN STD_LOGIC;
    m_axi_output0_s_RID : IN STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_ID_WIDTH-1 downto 0);
    m_axi_output0_s_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_RUSER_WIDTH-1 downto 0);
    m_axi_output0_s_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output0_s_BVALID : IN STD_LOGIC;
    m_axi_output0_s_BREADY : OUT STD_LOGIC;
    m_axi_output0_s_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output0_s_BID : IN STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_ID_WIDTH-1 downto 0);
    m_axi_output0_s_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_OUTPUT0_S_BUSER_WIDTH-1 downto 0);
    m_axi_output1_s_AWVALID : OUT STD_LOGIC;
    m_axi_output1_s_AWREADY : IN STD_LOGIC;
    m_axi_output1_s_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_ADDR_WIDTH-1 downto 0);
    m_axi_output1_s_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_ID_WIDTH-1 downto 0);
    m_axi_output1_s_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_output1_s_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output1_s_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output1_s_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output1_s_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output1_s_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output1_s_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output1_s_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output1_s_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_AWUSER_WIDTH-1 downto 0);
    m_axi_output1_s_WVALID : OUT STD_LOGIC;
    m_axi_output1_s_WREADY : IN STD_LOGIC;
    m_axi_output1_s_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_DATA_WIDTH-1 downto 0);
    m_axi_output1_s_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_DATA_WIDTH/8-1 downto 0);
    m_axi_output1_s_WLAST : OUT STD_LOGIC;
    m_axi_output1_s_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_ID_WIDTH-1 downto 0);
    m_axi_output1_s_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_WUSER_WIDTH-1 downto 0);
    m_axi_output1_s_ARVALID : OUT STD_LOGIC;
    m_axi_output1_s_ARREADY : IN STD_LOGIC;
    m_axi_output1_s_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_ADDR_WIDTH-1 downto 0);
    m_axi_output1_s_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_ID_WIDTH-1 downto 0);
    m_axi_output1_s_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_output1_s_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output1_s_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output1_s_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output1_s_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output1_s_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output1_s_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output1_s_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output1_s_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_ARUSER_WIDTH-1 downto 0);
    m_axi_output1_s_RVALID : IN STD_LOGIC;
    m_axi_output1_s_RREADY : OUT STD_LOGIC;
    m_axi_output1_s_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_DATA_WIDTH-1 downto 0);
    m_axi_output1_s_RLAST : IN STD_LOGIC;
    m_axi_output1_s_RID : IN STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_ID_WIDTH-1 downto 0);
    m_axi_output1_s_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_RUSER_WIDTH-1 downto 0);
    m_axi_output1_s_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output1_s_BVALID : IN STD_LOGIC;
    m_axi_output1_s_BREADY : OUT STD_LOGIC;
    m_axi_output1_s_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output1_s_BID : IN STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_ID_WIDTH-1 downto 0);
    m_axi_output1_s_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_OUTPUT1_S_BUSER_WIDTH-1 downto 0);
    s_axi_ctrl_bus_AWVALID : IN STD_LOGIC;
    s_axi_ctrl_bus_AWREADY : OUT STD_LOGIC;
    s_axi_ctrl_bus_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_bus_WVALID : IN STD_LOGIC;
    s_axi_ctrl_bus_WREADY : OUT STD_LOGIC;
    s_axi_ctrl_bus_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_bus_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_ctrl_bus_ARVALID : IN STD_LOGIC;
    s_axi_ctrl_bus_ARREADY : OUT STD_LOGIC;
    s_axi_ctrl_bus_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_bus_RVALID : OUT STD_LOGIC;
    s_axi_ctrl_bus_RREADY : IN STD_LOGIC;
    s_axi_ctrl_bus_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_bus_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_ctrl_bus_BVALID : OUT STD_LOGIC;
    s_axi_ctrl_bus_BREADY : IN STD_LOGIC;
    s_axi_ctrl_bus_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of update_n is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "update_n,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=240,HLS_SYN_FF=60632,HLS_SYN_LUT=27435,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv256_lc_3 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1024_lc_1 : STD_LOGIC_VECTOR (1023 downto
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal num : STD_LOGIC_VECTOR (31 downto 0);
    signal num_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal num_0_vld_reg : STD_LOGIC := '0';
    signal num_0_ack_out : STD_LOGIC;
    signal stable_para_offset : STD_LOGIC_VECTOR (31 downto 0);
    signal stable_para_offset_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal stable_para_offset_0_vld_reg : STD_LOGIC := '0';
    signal stable_para_offset_0_ack_out : STD_LOGIC;
    signal input00_V : STD_LOGIC_VECTOR (31 downto 0);
    signal input00_V_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal input00_V_0_vld_reg : STD_LOGIC := '0';
    signal input00_V_0_ack_out : STD_LOGIC;
    signal input01_V : STD_LOGIC_VECTOR (31 downto 0);
    signal input01_V_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal input01_V_0_vld_reg : STD_LOGIC := '0';
    signal input01_V_0_ack_out : STD_LOGIC;
    signal output0_offset : STD_LOGIC_VECTOR (31 downto 0);
    signal output0_offset_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal output0_offset_0_vld_reg : STD_LOGIC := '0';
    signal output0_offset_0_ack_out : STD_LOGIC;
    signal output1_offset : STD_LOGIC_VECTOR (31 downto 0);
    signal output1_offset_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal output1_offset_0_vld_reg : STD_LOGIC := '0';
    signal output1_offset_0_ack_out : STD_LOGIC;
    signal output2_s : STD_LOGIC_VECTOR (31 downto 0);
    signal output2_s_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal output2_s_0_vld_reg : STD_LOGIC := '0';
    signal output2_s_0_ack_out : STD_LOGIC;
    signal output3_s : STD_LOGIC_VECTOR (31 downto 0);
    signal output3_s_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal output3_s_0_vld_reg : STD_LOGIC := '0';
    signal output3_s_0_ack_out : STD_LOGIC;
    signal stable_para_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal stable_para_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_update_indata_fu_616_input00_V_blk_n_AR : STD_LOGIC;
    signal grp_update_indata_fu_616_input00_V_blk_n_R : STD_LOGIC;
    signal input01_blk_n_AR : STD_LOGIC;
    signal input01_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_8_reg_1992 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_8_reg_1992_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_indata_fu_616_input01_V_blk_n_AR : STD_LOGIC;
    signal grp_update_indata_fu_616_input01_V_blk_n_R : STD_LOGIC;
    signal input00_blk_n_AR : STD_LOGIC;
    signal input00_blk_n_R : STD_LOGIC;
    signal grp_update_outdata_fu_629_input01_V_blk_n_AW : STD_LOGIC;
    signal grp_update_outdata_fu_629_input01_V_blk_n_W : STD_LOGIC;
    signal grp_update_outdata_fu_629_input01_V_blk_n_B : STD_LOGIC;
    signal input00_blk_n_AW : STD_LOGIC;
    signal input00_blk_n_W : STD_LOGIC;
    signal input00_blk_n_B : STD_LOGIC;
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal tmp_8_reg_1992_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1992_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal tmp_8_reg_1992_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal output0_s_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal output0_s_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal output0_s_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal tmp_1_reg_2143 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_2143_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_2158 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal tmp_4_reg_2158_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1992_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_2158_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2168 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2168_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2168_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal output1_s_blk_n_AW : STD_LOGIC;
    signal tmp_14_reg_2000 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2000_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_2208 : STD_LOGIC_VECTOR (0 downto 0);
    signal output1_s_blk_n_W : STD_LOGIC;
    signal or_cond2_reg_2208_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal output1_s_blk_n_B : STD_LOGIC;
    signal tmp_14_reg_2000_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_2208_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2000_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_2178 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2000_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_2178_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_2182 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_2182_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2212 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2212_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2212_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal stable_para_AWREADY : STD_LOGIC;
    signal stable_para_WREADY : STD_LOGIC;
    signal stable_para_ARVALID : STD_LOGIC;
    signal stable_para_ARREADY : STD_LOGIC;
    signal stable_para_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal stable_para_RVALID : STD_LOGIC;
    signal stable_para_RREADY : STD_LOGIC;
    signal stable_para_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal stable_para_RLAST : STD_LOGIC;
    signal stable_para_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal stable_para_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal stable_para_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal stable_para_BVALID : STD_LOGIC;
    signal stable_para_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal stable_para_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal stable_para_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal input01_AWREADY : STD_LOGIC;
    signal input01_WREADY : STD_LOGIC;
    signal input01_ARVALID : STD_LOGIC;
    signal input01_ARREADY : STD_LOGIC;
    signal input01_RVALID : STD_LOGIC;
    signal input01_RREADY : STD_LOGIC;
    signal input01_RDATA : STD_LOGIC_VECTOR (1023 downto 0);
    signal input01_RLAST : STD_LOGIC;
    signal input01_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal input01_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal input01_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal input01_BVALID : STD_LOGIC;
    signal input01_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal input01_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal input01_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal input00_AWVALID : STD_LOGIC;
    signal input00_AWREADY : STD_LOGIC;
    signal input00_WVALID : STD_LOGIC;
    signal input00_WREADY : STD_LOGIC;
    signal input00_ARVALID : STD_LOGIC;
    signal input00_ARREADY : STD_LOGIC;
    signal input00_RVALID : STD_LOGIC;
    signal input00_RREADY : STD_LOGIC;
    signal input00_RDATA : STD_LOGIC_VECTOR (1023 downto 0);
    signal input00_RLAST : STD_LOGIC;
    signal input00_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal input00_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal input00_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal input00_BVALID : STD_LOGIC;
    signal input00_BREADY : STD_LOGIC;
    signal input00_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal input00_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal input00_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal output0_s_AWVALID : STD_LOGIC;
    signal output0_s_AWREADY : STD_LOGIC;
    signal output0_s_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal output0_s_WVALID : STD_LOGIC;
    signal output0_s_WREADY : STD_LOGIC;
    signal output0_s_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal output0_s_ARREADY : STD_LOGIC;
    signal output0_s_RVALID : STD_LOGIC;
    signal output0_s_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal output0_s_RLAST : STD_LOGIC;
    signal output0_s_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal output0_s_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal output0_s_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal output0_s_BVALID : STD_LOGIC;
    signal output0_s_BREADY : STD_LOGIC;
    signal output0_s_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal output0_s_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal output0_s_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal output1_s_AWVALID : STD_LOGIC;
    signal output1_s_AWREADY : STD_LOGIC;
    signal output1_s_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal output1_s_WVALID : STD_LOGIC;
    signal output1_s_WREADY : STD_LOGIC;
    signal output1_s_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal output1_s_ARREADY : STD_LOGIC;
    signal output1_s_RVALID : STD_LOGIC;
    signal output1_s_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal output1_s_RLAST : STD_LOGIC;
    signal output1_s_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal output1_s_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal output1_s_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal output1_s_BVALID : STD_LOGIC;
    signal output1_s_BREADY : STD_LOGIC;
    signal output1_s_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal output1_s_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal output1_s_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_462 : STD_LOGIC_VECTOR (29 downto 0);
    signal i_reg_462_pp0_iter1_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_block_state12_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter11 : BOOLEAN;
    signal ap_sig_ioackin_output0_s_AWREADY : STD_LOGIC;
    signal ap_predicate_op374_writereq_state34 : BOOLEAN;
    signal ap_sig_ioackin_output1_s_AWREADY : STD_LOGIC;
    signal ap_predicate_op375_writereq_state34 : BOOLEAN;
    signal ap_predicate_op376_writereq_state34 : BOOLEAN;
    signal ap_block_state34_io : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter12 : BOOLEAN;
    signal ap_sig_ioackin_output0_s_WREADY : STD_LOGIC;
    signal ap_predicate_op402_write_state36 : BOOLEAN;
    signal ap_predicate_op403_write_state36 : BOOLEAN;
    signal ap_sig_ioackin_output1_s_WREADY : STD_LOGIC;
    signal ap_predicate_op406_write_state36 : BOOLEAN;
    signal ap_predicate_op407_write_state36 : BOOLEAN;
    signal ap_block_state36_io : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter13 : BOOLEAN;
    signal ap_predicate_op433_writeresp_state40 : BOOLEAN;
    signal ap_predicate_op436_writeresp_state40 : BOOLEAN;
    signal ap_predicate_op437_writeresp_state40 : BOOLEAN;
    signal ap_block_state40_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_reg_462_pp0_iter2_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal i_reg_462_pp0_iter3_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal i_reg_462_pp0_iter4_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal i_reg_462_pp0_iter5_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal i_reg_462_pp0_iter6_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal i_reg_462_pp0_iter7_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal i_reg_462_pp0_iter8_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal i_reg_462_pp0_iter9_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal i_reg_462_pp0_iter10_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal num_o_reg_474 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_block_state13_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state21_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state25_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state29_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state31_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state33_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state35_pp0_stage1_iter11 : BOOLEAN;
    signal ap_predicate_op393_write_state35 : BOOLEAN;
    signal ap_predicate_op394_writereq_state35 : BOOLEAN;
    signal ap_predicate_op395_writereq_state35 : BOOLEAN;
    signal ap_predicate_op396_write_state35 : BOOLEAN;
    signal ap_predicate_op397_write_state35 : BOOLEAN;
    signal ap_predicate_op398_writereq_state35 : BOOLEAN;
    signal ap_predicate_op399_writereq_state35 : BOOLEAN;
    signal ap_block_state35_io : BOOLEAN;
    signal ap_block_state37_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state39_pp0_stage1_iter13 : BOOLEAN;
    signal ap_predicate_op440_writeresp_state41 : BOOLEAN;
    signal ap_predicate_op441_writeresp_state41 : BOOLEAN;
    signal ap_predicate_op442_writeresp_state41 : BOOLEAN;
    signal ap_predicate_op443_writeresp_state41 : BOOLEAN;
    signal ap_block_state41_pp0_stage1_iter14 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal num_o_7_reg_579 : STD_LOGIC_VECTOR (255 downto 0);
    signal reg_760 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_block_state10 : BOOLEAN;
    signal reg_764 : STD_LOGIC_VECTOR (255 downto 0);
    signal reg_768 : STD_LOGIC_VECTOR (255 downto 0);
    signal reg_772 : STD_LOGIC_VECTOR (255 downto 0);
    signal reg_776 : STD_LOGIC_VECTOR (255 downto 0);
    signal reg_780 : STD_LOGIC_VECTOR (255 downto 0);
    signal reg_784 : STD_LOGIC_VECTOR (255 downto 0);
    signal reg_788 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal brmerge_reg_1996_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_1434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_788_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_794 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_1536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output3_1_reg_1822 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal output2_1_reg_1828 : STD_LOGIC_VECTOR (29 downto 0);
    signal output1_offset9_reg_1834 : STD_LOGIC_VECTOR (29 downto 0);
    signal output0_offset7_reg_1840 : STD_LOGIC_VECTOR (29 downto 0);
    signal input01_V5_reg_1846 : STD_LOGIC_VECTOR (24 downto 0);
    signal input00_V3_reg_1852 : STD_LOGIC_VECTOR (24 downto 0);
    signal stable_para_offset1_reg_1857 : STD_LOGIC_VECTOR (25 downto 0);
    signal time_s_fu_955_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal time_s_reg_1862 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1867 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1873 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1878 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_stable_para_ARREADY : STD_LOGIC;
    signal tmp_9_cast_fu_1056_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_9_cast_reg_1889 : STD_LOGIC_VECTOR (32 downto 0);
    signal output1_addr_reg_1894 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_cast_fu_1068_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_25_cast_reg_1901 : STD_LOGIC_VECTOR (32 downto 0);
    signal output1_addr_1_reg_1907 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_cast_fu_1080_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_26_cast_reg_1913 : STD_LOGIC_VECTOR (32 downto 0);
    signal output0_addr_reg_1919 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_cast_fu_1092_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_27_cast_reg_1925 : STD_LOGIC_VECTOR (32 downto 0);
    signal output0_addr_1_reg_1930 : STD_LOGIC_VECTOR (31 downto 0);
    signal P20_s_fu_1105_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal P20_s_reg_1936 : STD_LOGIC_VECTOR (31 downto 0);
    signal P22_s_fu_1119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal P22_s_reg_1941 : STD_LOGIC_VECTOR (31 downto 0);
    signal P21ex_s_fu_1133_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal P21ex_s_reg_1946 : STD_LOGIC_VECTOR (31 downto 0);
    signal P21in_s_fu_1147_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal P21in_s_reg_1951 : STD_LOGIC_VECTOR (31 downto 0);
    signal P11ex_s_fu_1161_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal P11ex_s_reg_1956 : STD_LOGIC_VECTOR (31 downto 0);
    signal P11in_s_fu_1175_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal P11in_s_reg_1961 : STD_LOGIC_VECTOR (31 downto 0);
    signal Theta_s_fu_1189_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Theta_s_reg_1966 : STD_LOGIC_VECTOR (31 downto 0);
    signal RefractoryCounts_s_fu_1203_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal RefractoryCounts_s_reg_1971 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_reset_s_fu_1217_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_reset_s_reg_1976 : STD_LOGIC_VECTOR (31 downto 0);
    signal time_2_fu_1230_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal time_2_reg_1981 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_fu_1237_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_reg_1986 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_8_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1992_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1992_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1992_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1992_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1992_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1992_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1992_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1992_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1992_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1996_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2000_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2000_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2000_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2000_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2000_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2000_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2000_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2000_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2000_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2000_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_1267_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal i_1_reg_2004 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_41_fu_1273_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_2009 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_2009_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_2009_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_2009_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_2009_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_2009_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal tmp_1_fu_1372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_2143_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_2143_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_1378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_reg_2147 : STD_LOGIC_VECTOR (31 downto 0);
    signal output0_addr_2_reg_2152 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_2158_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal output0_addr_3_reg_2162 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_2168_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal output0_addr_4_reg_2172 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond1_reg_2178_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_2178_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_2182_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_2182_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal output1_addr_3_reg_2186 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_o_9_fu_1576_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal output1_addr_2_reg_2197 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_o_8_fu_1607_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal or_cond2_fu_1635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_2208_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2212_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_reg_2216 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_2216_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_750_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_reg_2221 : STD_LOGIC_VECTOR (31 downto 0);
    signal output1_addr_4_reg_2226 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_1704_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_reg_2232 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state42_io : BOOLEAN;
    signal tmp_44_reg_2237 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_reg_2242 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_reg_2247 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter10_state33 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal grp_execute_fu_594_i : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_execute_fu_594_weighted_spikes_ex_s : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_execute_fu_594_weighted_spikes_in_s : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_execute_fu_594_I_e_read : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_execute_fu_594_i_syn_ex_read : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_execute_fu_594_i_syn_in_read : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_execute_fu_594_r_ref_read : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_execute_fu_594_V_m_read : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_execute_fu_594_ap_return_0 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_execute_fu_594_ap_return_1 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_execute_fu_594_ap_return_2 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_execute_fu_594_ap_return_3 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_execute_fu_594_ap_return_4 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_execute_fu_594_ap_return_5 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_execute_fu_594_ap_ce : STD_LOGIC;
    signal ap_predicate_op224_call_state20 : BOOLEAN;
    signal ap_predicate_op253_call_state22 : BOOLEAN;
    signal ap_predicate_op243_call_state21 : BOOLEAN;
    signal grp_update_indata_fu_616_ap_start : STD_LOGIC;
    signal grp_update_indata_fu_616_ap_done : STD_LOGIC;
    signal grp_update_indata_fu_616_ap_idle : STD_LOGIC;
    signal grp_update_indata_fu_616_ap_ready : STD_LOGIC;
    signal grp_update_indata_fu_616_m_axi_input00_V_AWVALID : STD_LOGIC;
    signal grp_update_indata_fu_616_m_axi_input00_V_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_WVALID : STD_LOGIC;
    signal grp_update_indata_fu_616_m_axi_input00_V_WDATA : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_WSTRB : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_WLAST : STD_LOGIC;
    signal grp_update_indata_fu_616_m_axi_input00_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_ARVALID : STD_LOGIC;
    signal grp_update_indata_fu_616_m_axi_input00_V_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_indata_fu_616_m_axi_input00_V_RREADY : STD_LOGIC;
    signal grp_update_indata_fu_616_m_axi_input00_V_BREADY : STD_LOGIC;
    signal grp_update_indata_fu_616_m_axi_input01_V_AWVALID : STD_LOGIC;
    signal grp_update_indata_fu_616_m_axi_input01_V_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_WVALID : STD_LOGIC;
    signal grp_update_indata_fu_616_m_axi_input01_V_WDATA : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_WSTRB : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_WLAST : STD_LOGIC;
    signal grp_update_indata_fu_616_m_axi_input01_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_ARVALID : STD_LOGIC;
    signal grp_update_indata_fu_616_m_axi_input01_V_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_indata_fu_616_m_axi_input01_V_RREADY : STD_LOGIC;
    signal grp_update_indata_fu_616_m_axi_input01_V_BREADY : STD_LOGIC;
    signal grp_update_indata_fu_616_ap_ce : STD_LOGIC;
    signal grp_update_indata_fu_616_i : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_update_indata_fu_616_input00_V_offset : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_update_indata_fu_616_input01_V_offset : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_update_indata_fu_616_ap_return_0 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_update_indata_fu_616_ap_return_1 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_update_indata_fu_616_ap_return_2 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_update_indata_fu_616_ap_return_3 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_update_indata_fu_616_ap_return_4 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_update_indata_fu_616_ap_return_5 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_update_indata_fu_616_ap_return_6 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_update_outdata_fu_629_ap_start : STD_LOGIC;
    signal grp_update_outdata_fu_629_ap_done : STD_LOGIC;
    signal grp_update_outdata_fu_629_ap_idle : STD_LOGIC;
    signal grp_update_outdata_fu_629_ap_ready : STD_LOGIC;
    signal grp_update_outdata_fu_629_m_axi_input01_V_AWVALID : STD_LOGIC;
    signal grp_update_outdata_fu_629_m_axi_input01_V_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_WVALID : STD_LOGIC;
    signal grp_update_outdata_fu_629_m_axi_input01_V_WDATA : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_WSTRB : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_WLAST : STD_LOGIC;
    signal grp_update_outdata_fu_629_m_axi_input01_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_ARVALID : STD_LOGIC;
    signal grp_update_outdata_fu_629_m_axi_input01_V_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_update_outdata_fu_629_m_axi_input01_V_RREADY : STD_LOGIC;
    signal grp_update_outdata_fu_629_m_axi_input01_V_BREADY : STD_LOGIC;
    signal grp_update_outdata_fu_629_ap_ce : STD_LOGIC;
    signal ap_phi_mux_i_phi_fu_466_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_mux_num_o_phi_fu_478_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter0_signal_1_1_reg_486 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter1_signal_1_1_reg_486 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter2_signal_1_1_reg_486 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter3_signal_1_1_reg_486 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter4_signal_1_1_reg_486 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter5_signal_1_1_reg_486 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter6_signal_1_1_reg_486 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter7_signal_1_1_reg_486 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter8_signal_1_1_reg_486 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter9_signal_1_1_reg_486 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter10_signal_1_1_reg_486 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter0_signal_1_18_reg_495 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter1_signal_1_18_reg_495 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter2_signal_1_18_reg_495 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter3_signal_1_18_reg_495 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter4_signal_1_18_reg_495 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter5_signal_1_18_reg_495 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter6_signal_1_18_reg_495 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter7_signal_1_18_reg_495 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter8_signal_1_18_reg_495 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter9_signal_1_18_reg_495 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter10_signal_1_18_reg_495 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter0_r_ref_r_1_reg_504 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter1_r_ref_r_1_reg_504 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter2_r_ref_r_1_reg_504 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter3_r_ref_r_1_reg_504 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter4_r_ref_r_1_reg_504 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter5_r_ref_r_1_reg_504 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter6_r_ref_r_1_reg_504 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter7_r_ref_r_1_reg_504 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter8_r_ref_r_1_reg_504 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter9_r_ref_r_1_reg_504 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter10_r_ref_r_1_reg_504 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter0_i_syn_in_rr_1_reg_514 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter1_i_syn_in_rr_1_reg_514 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter2_i_syn_in_rr_1_reg_514 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter3_i_syn_in_rr_1_reg_514 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter4_i_syn_in_rr_1_reg_514 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter5_i_syn_in_rr_1_reg_514 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter6_i_syn_in_rr_1_reg_514 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter7_i_syn_in_rr_1_reg_514 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter8_i_syn_in_rr_1_reg_514 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter9_i_syn_in_rr_1_reg_514 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter10_i_syn_in_rr_1_reg_514 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter0_i_syn_ex_rr_1_reg_524 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter1_i_syn_ex_rr_1_reg_524 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter2_i_syn_ex_rr_1_reg_524 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter3_i_syn_ex_rr_1_reg_524 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter4_i_syn_ex_rr_1_reg_524 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter5_i_syn_ex_rr_1_reg_524 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter6_i_syn_ex_rr_1_reg_524 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter7_i_syn_ex_rr_1_reg_524 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter8_i_syn_ex_rr_1_reg_524 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter9_i_syn_ex_rr_1_reg_524 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter10_i_syn_ex_rr_1_reg_524 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter0_V_m_r_1_reg_534 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter1_V_m_r_1_reg_534 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter2_V_m_r_1_reg_534 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter3_V_m_r_1_reg_534 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter4_V_m_r_1_reg_534 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter5_V_m_r_1_reg_534 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter6_V_m_r_1_reg_534 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter7_V_m_r_1_reg_534 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter8_V_m_r_1_reg_534 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter9_V_m_r_1_reg_534 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter10_V_m_r_1_reg_534 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_mux_num_o_1_phi_fu_547_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter10_num_o_1_reg_544 : STD_LOGIC_VECTOR (255 downto 0);
    signal num_o_2_fu_1411_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_mux_num_o_3_phi_fu_557_p6 : STD_LOGIC_VECTOR (255 downto 0);
    signal num_o_4_fu_1459_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter10_num_o_3_reg_554 : STD_LOGIC_VECTOR (255 downto 0);
    signal num_o_6_fu_1507_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter0_num_o_5_reg_567 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter1_num_o_5_reg_567 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter2_num_o_5_reg_567 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter3_num_o_5_reg_567 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter4_num_o_5_reg_567 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter5_num_o_5_reg_567 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter6_num_o_5_reg_567 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter7_num_o_5_reg_567 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter8_num_o_5_reg_567 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter9_num_o_5_reg_567 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter10_num_o_5_reg_567 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter11_num_o_5_reg_567 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter11_num_o_7_reg_579 : STD_LOGIC_VECTOR (255 downto 0);
    signal num_o_10_fu_1691_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_update_indata_fu_616_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_NS_fsm_state2 : STD_LOGIC;
    signal grp_update_outdata_fu_629_ap_start_reg : STD_LOGIC := '0';
    signal tmp_30_fu_1043_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_1053_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_1065_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_1077_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_1089_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal output0_8_sum_cast_fu_1395_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal output1_10_sum_cast_fu_1449_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal output1_10_sum1_cast_fu_1497_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal output2_12_sum_cast_fu_1566_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal output2_12_sum1_cast_fu_1597_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal output3_14_sum_cast_fu_1675_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_stable_para_ARREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_output0_s_AWREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_reg_ioackin_output1_s_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_output0_s_WREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_reg_ioackin_output1_s_WREADY : STD_LOGIC := '0';
    signal ap_block_state43_io : BOOLEAN;
    signal ap_block_state49 : BOOLEAN;
    signal ap_block_state48 : BOOLEAN;
    signal ap_block_state44_io : BOOLEAN;
    signal weighted_spikes_ex_1_fu_178 : STD_LOGIC_VECTOR (255 downto 0);
    signal weighted_spikes_in_1_fu_182 : STD_LOGIC_VECTOR (255 downto 0);
    signal I_e_1_fu_186 : STD_LOGIC_VECTOR (255 downto 0);
    signal i_syn_ex_1_fu_190 : STD_LOGIC_VECTOR (255 downto 0);
    signal i_syn_in_1_fu_194 : STD_LOGIC_VECTOR (255 downto 0);
    signal r_ref_1_fu_198 : STD_LOGIC_VECTOR (255 downto 0);
    signal V_m_1_fu_202 : STD_LOGIC_VECTOR (255 downto 0);
    signal weighted_spikes_ex_2_fu_206 : STD_LOGIC_VECTOR (255 downto 0);
    signal weighted_spikes_in_2_fu_210 : STD_LOGIC_VECTOR (255 downto 0);
    signal I_e_2_fu_214 : STD_LOGIC_VECTOR (255 downto 0);
    signal i_syn_ex_2_fu_218 : STD_LOGIC_VECTOR (255 downto 0);
    signal i_syn_in_2_fu_222 : STD_LOGIC_VECTOR (255 downto 0);
    signal r_ref_2_fu_226 : STD_LOGIC_VECTOR (255 downto 0);
    signal V_m_2_fu_230 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_fu_708_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_734_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_915_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_921_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_cast_fu_931_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_33_fu_941_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_12_fu_907_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_935_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_lshr_f_cast_fu_951_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_17_fu_963_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_19_fu_975_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_and_t_fu_979_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_t1_fu_987_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_and_f_fu_967_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rmd_fu_993_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_1005_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_23_fu_1001_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal rmd_0_off_fu_1015_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_29_fu_1027_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_fu_1101_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1109_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_1123_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_1137_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_1151_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_fu_1165_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_1179_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_1193_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_1207_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal time_cast_fu_1221_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal time_1_fu_1224_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_cast_fu_1243_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_not_fu_1252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_1368_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_fu_1382_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_cast_fu_1386_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal output0_8_sum_fu_1390_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_3_fu_1405_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_1424_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_cast_fu_1440_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal output1_10_sum_fu_1444_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_718_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_1472_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_cast_fu_1488_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal output1_10_sum1_fu_1492_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_56_fu_1520_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_1541_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_cast_fu_1557_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal output2_12_sum_fu_1561_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_cast_fu_1588_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal output2_12_sum1_fu_1592_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_62_fu_1619_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_1629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_1640_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_cast_fu_1666_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_cast_fu_1666_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal output3_14_sum_fu_1670_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_24_fu_1685_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_1685_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_2404 : BOOLEAN;
    signal ap_condition_1417 : BOOLEAN;
    signal ap_condition_2314 : BOOLEAN;
    signal ap_condition_1429 : BOOLEAN;
    signal ap_condition_2301 : BOOLEAN;
    signal ap_condition_1444 : BOOLEAN;
    signal ap_condition_2336 : BOOLEAN;
    signal ap_condition_1441 : BOOLEAN;
    signal ap_condition_1411 : BOOLEAN;
    signal ap_condition_3399 : BOOLEAN;
    signal ap_condition_3402 : BOOLEAN;
    signal ap_condition_2455 : BOOLEAN;
    signal ap_condition_2497 : BOOLEAN;
    signal ap_condition_2507 : BOOLEAN;

    component execute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        i : IN STD_LOGIC_VECTOR (29 downto 0);
        P20_s : IN STD_LOGIC_VECTOR (31 downto 0);
        P22_s : IN STD_LOGIC_VECTOR (31 downto 0);
        P11ex_s : IN STD_LOGIC_VECTOR (31 downto 0);
        P11in_s : IN STD_LOGIC_VECTOR (31 downto 0);
        P21ex_s : IN STD_LOGIC_VECTOR (31 downto 0);
        P21in_s : IN STD_LOGIC_VECTOR (31 downto 0);
        Theta_s : IN STD_LOGIC_VECTOR (31 downto 0);
        RefractoryCounts_s : IN STD_LOGIC_VECTOR (31 downto 0);
        V_reset_s : IN STD_LOGIC_VECTOR (31 downto 0);
        weighted_spikes_ex_s : IN STD_LOGIC_VECTOR (255 downto 0);
        weighted_spikes_in_s : IN STD_LOGIC_VECTOR (255 downto 0);
        I_e_read : IN STD_LOGIC_VECTOR (255 downto 0);
        i_syn_ex_read : IN STD_LOGIC_VECTOR (255 downto 0);
        i_syn_in_read : IN STD_LOGIC_VECTOR (255 downto 0);
        r_ref_read : IN STD_LOGIC_VECTOR (255 downto 0);
        V_m_read : IN STD_LOGIC_VECTOR (255 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (255 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (255 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (255 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (255 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (255 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (255 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component update_indata IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_input00_V_AWVALID : OUT STD_LOGIC;
        m_axi_input00_V_AWREADY : IN STD_LOGIC;
        m_axi_input00_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input00_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input00_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input00_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input00_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input00_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input00_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input00_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input00_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input00_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input00_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input00_V_WVALID : OUT STD_LOGIC;
        m_axi_input00_V_WREADY : IN STD_LOGIC;
        m_axi_input00_V_WDATA : OUT STD_LOGIC_VECTOR (1023 downto 0);
        m_axi_input00_V_WSTRB : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_input00_V_WLAST : OUT STD_LOGIC;
        m_axi_input00_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input00_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input00_V_ARVALID : OUT STD_LOGIC;
        m_axi_input00_V_ARREADY : IN STD_LOGIC;
        m_axi_input00_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input00_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input00_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input00_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input00_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input00_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input00_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input00_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input00_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input00_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input00_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input00_V_RVALID : IN STD_LOGIC;
        m_axi_input00_V_RREADY : OUT STD_LOGIC;
        m_axi_input00_V_RDATA : IN STD_LOGIC_VECTOR (1023 downto 0);
        m_axi_input00_V_RLAST : IN STD_LOGIC;
        m_axi_input00_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input00_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input00_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input00_V_BVALID : IN STD_LOGIC;
        m_axi_input00_V_BREADY : OUT STD_LOGIC;
        m_axi_input00_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input00_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input00_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_AWVALID : OUT STD_LOGIC;
        m_axi_input01_V_AWREADY : IN STD_LOGIC;
        m_axi_input01_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input01_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input01_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input01_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input01_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input01_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input01_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input01_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input01_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input01_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_WVALID : OUT STD_LOGIC;
        m_axi_input01_V_WREADY : IN STD_LOGIC;
        m_axi_input01_V_WDATA : OUT STD_LOGIC_VECTOR (1023 downto 0);
        m_axi_input01_V_WSTRB : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_input01_V_WLAST : OUT STD_LOGIC;
        m_axi_input01_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_ARVALID : OUT STD_LOGIC;
        m_axi_input01_V_ARREADY : IN STD_LOGIC;
        m_axi_input01_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input01_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input01_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input01_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input01_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input01_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input01_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input01_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input01_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input01_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_RVALID : IN STD_LOGIC;
        m_axi_input01_V_RREADY : OUT STD_LOGIC;
        m_axi_input01_V_RDATA : IN STD_LOGIC_VECTOR (1023 downto 0);
        m_axi_input01_V_RLAST : IN STD_LOGIC;
        m_axi_input01_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input01_V_BVALID : IN STD_LOGIC;
        m_axi_input01_V_BREADY : OUT STD_LOGIC;
        m_axi_input01_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input01_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_ce : IN STD_LOGIC;
        i : IN STD_LOGIC_VECTOR (29 downto 0);
        input00_V_offset : IN STD_LOGIC_VECTOR (24 downto 0);
        input01_V_offset : IN STD_LOGIC_VECTOR (24 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (255 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (255 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (255 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (255 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (255 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (255 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (255 downto 0);
        input00_V_blk_n_AR : OUT STD_LOGIC;
        input00_V_blk_n_R : OUT STD_LOGIC;
        input01_V_blk_n_AR : OUT STD_LOGIC;
        input01_V_blk_n_R : OUT STD_LOGIC );
    end component;


    component update_outdata IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_input01_V_AWVALID : OUT STD_LOGIC;
        m_axi_input01_V_AWREADY : IN STD_LOGIC;
        m_axi_input01_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input01_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input01_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input01_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input01_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input01_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input01_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input01_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input01_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input01_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_WVALID : OUT STD_LOGIC;
        m_axi_input01_V_WREADY : IN STD_LOGIC;
        m_axi_input01_V_WDATA : OUT STD_LOGIC_VECTOR (1023 downto 0);
        m_axi_input01_V_WSTRB : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_input01_V_WLAST : OUT STD_LOGIC;
        m_axi_input01_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_ARVALID : OUT STD_LOGIC;
        m_axi_input01_V_ARREADY : IN STD_LOGIC;
        m_axi_input01_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input01_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input01_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input01_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input01_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input01_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input01_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input01_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input01_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input01_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_RVALID : IN STD_LOGIC;
        m_axi_input01_V_RREADY : OUT STD_LOGIC;
        m_axi_input01_V_RDATA : IN STD_LOGIC_VECTOR (1023 downto 0);
        m_axi_input01_V_RLAST : IN STD_LOGIC;
        m_axi_input01_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input01_V_BVALID : IN STD_LOGIC;
        m_axi_input01_V_BREADY : OUT STD_LOGIC;
        m_axi_input01_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input01_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input01_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_ce : IN STD_LOGIC;
        num : IN STD_LOGIC_VECTOR (29 downto 0);
        V_m_r_read : IN STD_LOGIC_VECTOR (255 downto 0);
        i_syn_ex_rr_read : IN STD_LOGIC_VECTOR (255 downto 0);
        i_syn_in_rr_read : IN STD_LOGIC_VECTOR (255 downto 0);
        r_ref_r_read : IN STD_LOGIC_VECTOR (255 downto 0);
        input01_V_offset : IN STD_LOGIC_VECTOR (24 downto 0);
        input01_V_blk_n_AW : OUT STD_LOGIC;
        input01_V_blk_n_W : OUT STD_LOGIC;
        input01_V_blk_n_B : OUT STD_LOGIC );
    end component;


    component update_n_ctrl_bus_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        num : OUT STD_LOGIC_VECTOR (31 downto 0);
        stable_para_offset : OUT STD_LOGIC_VECTOR (31 downto 0);
        input00_V : OUT STD_LOGIC_VECTOR (31 downto 0);
        input01_V : OUT STD_LOGIC_VECTOR (31 downto 0);
        output0_offset : OUT STD_LOGIC_VECTOR (31 downto 0);
        output1_offset : OUT STD_LOGIC_VECTOR (31 downto 0);
        output2_s : OUT STD_LOGIC_VECTOR (31 downto 0);
        output3_s : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component update_n_stable_para_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component update_n_input01_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (1023 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (1023 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (127 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component update_n_input00_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (1023 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (1023 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (127 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component update_n_output0_s_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component update_n_output1_s_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    update_n_ctrl_bus_s_axi_U : component update_n_ctrl_bus_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_ctrl_bus_AWVALID,
        AWREADY => s_axi_ctrl_bus_AWREADY,
        AWADDR => s_axi_ctrl_bus_AWADDR,
        WVALID => s_axi_ctrl_bus_WVALID,
        WREADY => s_axi_ctrl_bus_WREADY,
        WDATA => s_axi_ctrl_bus_WDATA,
        WSTRB => s_axi_ctrl_bus_WSTRB,
        ARVALID => s_axi_ctrl_bus_ARVALID,
        ARREADY => s_axi_ctrl_bus_ARREADY,
        ARADDR => s_axi_ctrl_bus_ARADDR,
        RVALID => s_axi_ctrl_bus_RVALID,
        RREADY => s_axi_ctrl_bus_RREADY,
        RDATA => s_axi_ctrl_bus_RDATA,
        RRESP => s_axi_ctrl_bus_RRESP,
        BVALID => s_axi_ctrl_bus_BVALID,
        BREADY => s_axi_ctrl_bus_BREADY,
        BRESP => s_axi_ctrl_bus_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        num => num,
        stable_para_offset => stable_para_offset,
        input00_V => input00_V,
        input01_V => input01_V,
        output0_offset => output0_offset,
        output1_offset => output1_offset,
        output2_s => output2_s,
        output3_s => output3_s);

    update_n_stable_para_m_axi_U : component update_n_stable_para_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 512,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_STABLE_PARA_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_STABLE_PARA_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_STABLE_PARA_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_STABLE_PARA_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_STABLE_PARA_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_STABLE_PARA_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_STABLE_PARA_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_STABLE_PARA_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_STABLE_PARA_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_STABLE_PARA_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_STABLE_PARA_CACHE_VALUE)
    port map (
        AWVALID => m_axi_stable_para_AWVALID,
        AWREADY => m_axi_stable_para_AWREADY,
        AWADDR => m_axi_stable_para_AWADDR,
        AWID => m_axi_stable_para_AWID,
        AWLEN => m_axi_stable_para_AWLEN,
        AWSIZE => m_axi_stable_para_AWSIZE,
        AWBURST => m_axi_stable_para_AWBURST,
        AWLOCK => m_axi_stable_para_AWLOCK,
        AWCACHE => m_axi_stable_para_AWCACHE,
        AWPROT => m_axi_stable_para_AWPROT,
        AWQOS => m_axi_stable_para_AWQOS,
        AWREGION => m_axi_stable_para_AWREGION,
        AWUSER => m_axi_stable_para_AWUSER,
        WVALID => m_axi_stable_para_WVALID,
        WREADY => m_axi_stable_para_WREADY,
        WDATA => m_axi_stable_para_WDATA,
        WSTRB => m_axi_stable_para_WSTRB,
        WLAST => m_axi_stable_para_WLAST,
        WID => m_axi_stable_para_WID,
        WUSER => m_axi_stable_para_WUSER,
        ARVALID => m_axi_stable_para_ARVALID,
        ARREADY => m_axi_stable_para_ARREADY,
        ARADDR => m_axi_stable_para_ARADDR,
        ARID => m_axi_stable_para_ARID,
        ARLEN => m_axi_stable_para_ARLEN,
        ARSIZE => m_axi_stable_para_ARSIZE,
        ARBURST => m_axi_stable_para_ARBURST,
        ARLOCK => m_axi_stable_para_ARLOCK,
        ARCACHE => m_axi_stable_para_ARCACHE,
        ARPROT => m_axi_stable_para_ARPROT,
        ARQOS => m_axi_stable_para_ARQOS,
        ARREGION => m_axi_stable_para_ARREGION,
        ARUSER => m_axi_stable_para_ARUSER,
        RVALID => m_axi_stable_para_RVALID,
        RREADY => m_axi_stable_para_RREADY,
        RDATA => m_axi_stable_para_RDATA,
        RLAST => m_axi_stable_para_RLAST,
        RID => m_axi_stable_para_RID,
        RUSER => m_axi_stable_para_RUSER,
        RRESP => m_axi_stable_para_RRESP,
        BVALID => m_axi_stable_para_BVALID,
        BREADY => m_axi_stable_para_BREADY,
        BRESP => m_axi_stable_para_BRESP,
        BID => m_axi_stable_para_BID,
        BUSER => m_axi_stable_para_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => stable_para_ARVALID,
        I_ARREADY => stable_para_ARREADY,
        I_ARADDR => stable_para_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_1,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => stable_para_RVALID,
        I_RREADY => stable_para_RREADY,
        I_RDATA => stable_para_RDATA,
        I_RID => stable_para_RID,
        I_RUSER => stable_para_RUSER,
        I_RRESP => stable_para_RRESP,
        I_RLAST => stable_para_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => stable_para_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => stable_para_WREADY,
        I_WDATA => ap_const_lv512_lc_1,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv64_0,
        I_BVALID => stable_para_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => stable_para_BRESP,
        I_BID => stable_para_BID,
        I_BUSER => stable_para_BUSER);

    update_n_input01_m_axi_U : component update_n_input01_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 1024,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_INPUT01_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_INPUT01_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_INPUT01_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_INPUT01_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_INPUT01_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_INPUT01_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_INPUT01_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_INPUT01_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_INPUT01_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_INPUT01_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_INPUT01_CACHE_VALUE)
    port map (
        AWVALID => m_axi_input01_AWVALID,
        AWREADY => m_axi_input01_AWREADY,
        AWADDR => m_axi_input01_AWADDR,
        AWID => m_axi_input01_AWID,
        AWLEN => m_axi_input01_AWLEN,
        AWSIZE => m_axi_input01_AWSIZE,
        AWBURST => m_axi_input01_AWBURST,
        AWLOCK => m_axi_input01_AWLOCK,
        AWCACHE => m_axi_input01_AWCACHE,
        AWPROT => m_axi_input01_AWPROT,
        AWQOS => m_axi_input01_AWQOS,
        AWREGION => m_axi_input01_AWREGION,
        AWUSER => m_axi_input01_AWUSER,
        WVALID => m_axi_input01_WVALID,
        WREADY => m_axi_input01_WREADY,
        WDATA => m_axi_input01_WDATA,
        WSTRB => m_axi_input01_WSTRB,
        WLAST => m_axi_input01_WLAST,
        WID => m_axi_input01_WID,
        WUSER => m_axi_input01_WUSER,
        ARVALID => m_axi_input01_ARVALID,
        ARREADY => m_axi_input01_ARREADY,
        ARADDR => m_axi_input01_ARADDR,
        ARID => m_axi_input01_ARID,
        ARLEN => m_axi_input01_ARLEN,
        ARSIZE => m_axi_input01_ARSIZE,
        ARBURST => m_axi_input01_ARBURST,
        ARLOCK => m_axi_input01_ARLOCK,
        ARCACHE => m_axi_input01_ARCACHE,
        ARPROT => m_axi_input01_ARPROT,
        ARQOS => m_axi_input01_ARQOS,
        ARREGION => m_axi_input01_ARREGION,
        ARUSER => m_axi_input01_ARUSER,
        RVALID => m_axi_input01_RVALID,
        RREADY => m_axi_input01_RREADY,
        RDATA => m_axi_input01_RDATA,
        RLAST => m_axi_input01_RLAST,
        RID => m_axi_input01_RID,
        RUSER => m_axi_input01_RUSER,
        RRESP => m_axi_input01_RRESP,
        BVALID => m_axi_input01_BVALID,
        BREADY => m_axi_input01_BREADY,
        BRESP => m_axi_input01_BRESP,
        BID => m_axi_input01_BID,
        BUSER => m_axi_input01_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => input01_ARVALID,
        I_ARREADY => input01_ARREADY,
        I_ARADDR => grp_update_indata_fu_616_m_axi_input00_V_ARADDR,
        I_ARID => grp_update_indata_fu_616_m_axi_input00_V_ARID,
        I_ARLEN => grp_update_indata_fu_616_m_axi_input00_V_ARLEN,
        I_ARSIZE => grp_update_indata_fu_616_m_axi_input00_V_ARSIZE,
        I_ARLOCK => grp_update_indata_fu_616_m_axi_input00_V_ARLOCK,
        I_ARCACHE => grp_update_indata_fu_616_m_axi_input00_V_ARCACHE,
        I_ARQOS => grp_update_indata_fu_616_m_axi_input00_V_ARQOS,
        I_ARPROT => grp_update_indata_fu_616_m_axi_input00_V_ARPROT,
        I_ARUSER => grp_update_indata_fu_616_m_axi_input00_V_ARUSER,
        I_ARBURST => grp_update_indata_fu_616_m_axi_input00_V_ARBURST,
        I_ARREGION => grp_update_indata_fu_616_m_axi_input00_V_ARREGION,
        I_RVALID => input01_RVALID,
        I_RREADY => input01_RREADY,
        I_RDATA => input01_RDATA,
        I_RID => input01_RID,
        I_RUSER => input01_RUSER,
        I_RRESP => input01_RRESP,
        I_RLAST => input01_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => input01_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => input01_WREADY,
        I_WDATA => ap_const_lv1024_lc_1,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv128_lc_1,
        I_BVALID => input01_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => input01_BRESP,
        I_BID => input01_BID,
        I_BUSER => input01_BUSER);

    update_n_input00_m_axi_U : component update_n_input00_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 1024,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_INPUT00_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_INPUT00_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_INPUT00_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_INPUT00_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_INPUT00_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_INPUT00_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_INPUT00_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_INPUT00_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_INPUT00_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_INPUT00_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_INPUT00_CACHE_VALUE)
    port map (
        AWVALID => m_axi_input00_AWVALID,
        AWREADY => m_axi_input00_AWREADY,
        AWADDR => m_axi_input00_AWADDR,
        AWID => m_axi_input00_AWID,
        AWLEN => m_axi_input00_AWLEN,
        AWSIZE => m_axi_input00_AWSIZE,
        AWBURST => m_axi_input00_AWBURST,
        AWLOCK => m_axi_input00_AWLOCK,
        AWCACHE => m_axi_input00_AWCACHE,
        AWPROT => m_axi_input00_AWPROT,
        AWQOS => m_axi_input00_AWQOS,
        AWREGION => m_axi_input00_AWREGION,
        AWUSER => m_axi_input00_AWUSER,
        WVALID => m_axi_input00_WVALID,
        WREADY => m_axi_input00_WREADY,
        WDATA => m_axi_input00_WDATA,
        WSTRB => m_axi_input00_WSTRB,
        WLAST => m_axi_input00_WLAST,
        WID => m_axi_input00_WID,
        WUSER => m_axi_input00_WUSER,
        ARVALID => m_axi_input00_ARVALID,
        ARREADY => m_axi_input00_ARREADY,
        ARADDR => m_axi_input00_ARADDR,
        ARID => m_axi_input00_ARID,
        ARLEN => m_axi_input00_ARLEN,
        ARSIZE => m_axi_input00_ARSIZE,
        ARBURST => m_axi_input00_ARBURST,
        ARLOCK => m_axi_input00_ARLOCK,
        ARCACHE => m_axi_input00_ARCACHE,
        ARPROT => m_axi_input00_ARPROT,
        ARQOS => m_axi_input00_ARQOS,
        ARREGION => m_axi_input00_ARREGION,
        ARUSER => m_axi_input00_ARUSER,
        RVALID => m_axi_input00_RVALID,
        RREADY => m_axi_input00_RREADY,
        RDATA => m_axi_input00_RDATA,
        RLAST => m_axi_input00_RLAST,
        RID => m_axi_input00_RID,
        RUSER => m_axi_input00_RUSER,
        RRESP => m_axi_input00_RRESP,
        BVALID => m_axi_input00_BVALID,
        BREADY => m_axi_input00_BREADY,
        BRESP => m_axi_input00_BRESP,
        BID => m_axi_input00_BID,
        BUSER => m_axi_input00_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => input00_ARVALID,
        I_ARREADY => input00_ARREADY,
        I_ARADDR => grp_update_indata_fu_616_m_axi_input01_V_ARADDR,
        I_ARID => grp_update_indata_fu_616_m_axi_input01_V_ARID,
        I_ARLEN => grp_update_indata_fu_616_m_axi_input01_V_ARLEN,
        I_ARSIZE => grp_update_indata_fu_616_m_axi_input01_V_ARSIZE,
        I_ARLOCK => grp_update_indata_fu_616_m_axi_input01_V_ARLOCK,
        I_ARCACHE => grp_update_indata_fu_616_m_axi_input01_V_ARCACHE,
        I_ARQOS => grp_update_indata_fu_616_m_axi_input01_V_ARQOS,
        I_ARPROT => grp_update_indata_fu_616_m_axi_input01_V_ARPROT,
        I_ARUSER => grp_update_indata_fu_616_m_axi_input01_V_ARUSER,
        I_ARBURST => grp_update_indata_fu_616_m_axi_input01_V_ARBURST,
        I_ARREGION => grp_update_indata_fu_616_m_axi_input01_V_ARREGION,
        I_RVALID => input00_RVALID,
        I_RREADY => input00_RREADY,
        I_RDATA => input00_RDATA,
        I_RID => input00_RID,
        I_RUSER => input00_RUSER,
        I_RRESP => input00_RRESP,
        I_RLAST => input00_RLAST,
        I_AWVALID => input00_AWVALID,
        I_AWREADY => input00_AWREADY,
        I_AWADDR => grp_update_outdata_fu_629_m_axi_input01_V_AWADDR,
        I_AWID => grp_update_outdata_fu_629_m_axi_input01_V_AWID,
        I_AWLEN => grp_update_outdata_fu_629_m_axi_input01_V_AWLEN,
        I_AWSIZE => grp_update_outdata_fu_629_m_axi_input01_V_AWSIZE,
        I_AWLOCK => grp_update_outdata_fu_629_m_axi_input01_V_AWLOCK,
        I_AWCACHE => grp_update_outdata_fu_629_m_axi_input01_V_AWCACHE,
        I_AWQOS => grp_update_outdata_fu_629_m_axi_input01_V_AWQOS,
        I_AWPROT => grp_update_outdata_fu_629_m_axi_input01_V_AWPROT,
        I_AWUSER => grp_update_outdata_fu_629_m_axi_input01_V_AWUSER,
        I_AWBURST => grp_update_outdata_fu_629_m_axi_input01_V_AWBURST,
        I_AWREGION => grp_update_outdata_fu_629_m_axi_input01_V_AWREGION,
        I_WVALID => input00_WVALID,
        I_WREADY => input00_WREADY,
        I_WDATA => grp_update_outdata_fu_629_m_axi_input01_V_WDATA,
        I_WID => grp_update_outdata_fu_629_m_axi_input01_V_WID,
        I_WUSER => grp_update_outdata_fu_629_m_axi_input01_V_WUSER,
        I_WLAST => grp_update_outdata_fu_629_m_axi_input01_V_WLAST,
        I_WSTRB => grp_update_outdata_fu_629_m_axi_input01_V_WSTRB,
        I_BVALID => input00_BVALID,
        I_BREADY => input00_BREADY,
        I_BRESP => input00_BRESP,
        I_BID => input00_BID,
        I_BUSER => input00_BUSER);

    update_n_output0_s_m_axi_U : component update_n_output0_s_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_OUTPUT0_S_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_OUTPUT0_S_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_OUTPUT0_S_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_OUTPUT0_S_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_OUTPUT0_S_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_OUTPUT0_S_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_OUTPUT0_S_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_OUTPUT0_S_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_OUTPUT0_S_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_OUTPUT0_S_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_OUTPUT0_S_CACHE_VALUE)
    port map (
        AWVALID => m_axi_output0_s_AWVALID,
        AWREADY => m_axi_output0_s_AWREADY,
        AWADDR => m_axi_output0_s_AWADDR,
        AWID => m_axi_output0_s_AWID,
        AWLEN => m_axi_output0_s_AWLEN,
        AWSIZE => m_axi_output0_s_AWSIZE,
        AWBURST => m_axi_output0_s_AWBURST,
        AWLOCK => m_axi_output0_s_AWLOCK,
        AWCACHE => m_axi_output0_s_AWCACHE,
        AWPROT => m_axi_output0_s_AWPROT,
        AWQOS => m_axi_output0_s_AWQOS,
        AWREGION => m_axi_output0_s_AWREGION,
        AWUSER => m_axi_output0_s_AWUSER,
        WVALID => m_axi_output0_s_WVALID,
        WREADY => m_axi_output0_s_WREADY,
        WDATA => m_axi_output0_s_WDATA,
        WSTRB => m_axi_output0_s_WSTRB,
        WLAST => m_axi_output0_s_WLAST,
        WID => m_axi_output0_s_WID,
        WUSER => m_axi_output0_s_WUSER,
        ARVALID => m_axi_output0_s_ARVALID,
        ARREADY => m_axi_output0_s_ARREADY,
        ARADDR => m_axi_output0_s_ARADDR,
        ARID => m_axi_output0_s_ARID,
        ARLEN => m_axi_output0_s_ARLEN,
        ARSIZE => m_axi_output0_s_ARSIZE,
        ARBURST => m_axi_output0_s_ARBURST,
        ARLOCK => m_axi_output0_s_ARLOCK,
        ARCACHE => m_axi_output0_s_ARCACHE,
        ARPROT => m_axi_output0_s_ARPROT,
        ARQOS => m_axi_output0_s_ARQOS,
        ARREGION => m_axi_output0_s_ARREGION,
        ARUSER => m_axi_output0_s_ARUSER,
        RVALID => m_axi_output0_s_RVALID,
        RREADY => m_axi_output0_s_RREADY,
        RDATA => m_axi_output0_s_RDATA,
        RLAST => m_axi_output0_s_RLAST,
        RID => m_axi_output0_s_RID,
        RUSER => m_axi_output0_s_RUSER,
        RRESP => m_axi_output0_s_RRESP,
        BVALID => m_axi_output0_s_BVALID,
        BREADY => m_axi_output0_s_BREADY,
        BRESP => m_axi_output0_s_BRESP,
        BID => m_axi_output0_s_BID,
        BUSER => m_axi_output0_s_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => output0_s_ARREADY,
        I_ARADDR => ap_const_lv32_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => output0_s_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => output0_s_RDATA,
        I_RID => output0_s_RID,
        I_RUSER => output0_s_RUSER,
        I_RRESP => output0_s_RRESP,
        I_RLAST => output0_s_RLAST,
        I_AWVALID => output0_s_AWVALID,
        I_AWREADY => output0_s_AWREADY,
        I_AWADDR => output0_s_AWADDR,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_1,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => output0_s_WVALID,
        I_WREADY => output0_s_WREADY,
        I_WDATA => output0_s_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => output0_s_BVALID,
        I_BREADY => output0_s_BREADY,
        I_BRESP => output0_s_BRESP,
        I_BID => output0_s_BID,
        I_BUSER => output0_s_BUSER);

    update_n_output1_s_m_axi_U : component update_n_output1_s_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_OUTPUT1_S_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_OUTPUT1_S_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_OUTPUT1_S_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_OUTPUT1_S_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_OUTPUT1_S_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_OUTPUT1_S_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_OUTPUT1_S_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_OUTPUT1_S_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_OUTPUT1_S_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_OUTPUT1_S_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_OUTPUT1_S_CACHE_VALUE)
    port map (
        AWVALID => m_axi_output1_s_AWVALID,
        AWREADY => m_axi_output1_s_AWREADY,
        AWADDR => m_axi_output1_s_AWADDR,
        AWID => m_axi_output1_s_AWID,
        AWLEN => m_axi_output1_s_AWLEN,
        AWSIZE => m_axi_output1_s_AWSIZE,
        AWBURST => m_axi_output1_s_AWBURST,
        AWLOCK => m_axi_output1_s_AWLOCK,
        AWCACHE => m_axi_output1_s_AWCACHE,
        AWPROT => m_axi_output1_s_AWPROT,
        AWQOS => m_axi_output1_s_AWQOS,
        AWREGION => m_axi_output1_s_AWREGION,
        AWUSER => m_axi_output1_s_AWUSER,
        WVALID => m_axi_output1_s_WVALID,
        WREADY => m_axi_output1_s_WREADY,
        WDATA => m_axi_output1_s_WDATA,
        WSTRB => m_axi_output1_s_WSTRB,
        WLAST => m_axi_output1_s_WLAST,
        WID => m_axi_output1_s_WID,
        WUSER => m_axi_output1_s_WUSER,
        ARVALID => m_axi_output1_s_ARVALID,
        ARREADY => m_axi_output1_s_ARREADY,
        ARADDR => m_axi_output1_s_ARADDR,
        ARID => m_axi_output1_s_ARID,
        ARLEN => m_axi_output1_s_ARLEN,
        ARSIZE => m_axi_output1_s_ARSIZE,
        ARBURST => m_axi_output1_s_ARBURST,
        ARLOCK => m_axi_output1_s_ARLOCK,
        ARCACHE => m_axi_output1_s_ARCACHE,
        ARPROT => m_axi_output1_s_ARPROT,
        ARQOS => m_axi_output1_s_ARQOS,
        ARREGION => m_axi_output1_s_ARREGION,
        ARUSER => m_axi_output1_s_ARUSER,
        RVALID => m_axi_output1_s_RVALID,
        RREADY => m_axi_output1_s_RREADY,
        RDATA => m_axi_output1_s_RDATA,
        RLAST => m_axi_output1_s_RLAST,
        RID => m_axi_output1_s_RID,
        RUSER => m_axi_output1_s_RUSER,
        RRESP => m_axi_output1_s_RRESP,
        BVALID => m_axi_output1_s_BVALID,
        BREADY => m_axi_output1_s_BREADY,
        BRESP => m_axi_output1_s_BRESP,
        BID => m_axi_output1_s_BID,
        BUSER => m_axi_output1_s_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => output1_s_ARREADY,
        I_ARADDR => ap_const_lv32_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => output1_s_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => output1_s_RDATA,
        I_RID => output1_s_RID,
        I_RUSER => output1_s_RUSER,
        I_RRESP => output1_s_RRESP,
        I_RLAST => output1_s_RLAST,
        I_AWVALID => output1_s_AWVALID,
        I_AWREADY => output1_s_AWREADY,
        I_AWADDR => output1_s_AWADDR,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_1,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => output1_s_WVALID,
        I_WREADY => output1_s_WREADY,
        I_WDATA => output1_s_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => output1_s_BVALID,
        I_BREADY => output1_s_BREADY,
        I_BRESP => output1_s_BRESP,
        I_BID => output1_s_BID,
        I_BUSER => output1_s_BUSER);

    grp_execute_fu_594 : component execute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        i => grp_execute_fu_594_i,
        P20_s => P20_s_reg_1936,
        P22_s => P22_s_reg_1941,
        P11ex_s => P11ex_s_reg_1956,
        P11in_s => P11in_s_reg_1961,
        P21ex_s => P21ex_s_reg_1946,
        P21in_s => P21in_s_reg_1951,
        Theta_s => Theta_s_reg_1966,
        RefractoryCounts_s => RefractoryCounts_s_reg_1971,
        V_reset_s => V_reset_s_reg_1976,
        weighted_spikes_ex_s => grp_execute_fu_594_weighted_spikes_ex_s,
        weighted_spikes_in_s => grp_execute_fu_594_weighted_spikes_in_s,
        I_e_read => grp_execute_fu_594_I_e_read,
        i_syn_ex_read => grp_execute_fu_594_i_syn_ex_read,
        i_syn_in_read => grp_execute_fu_594_i_syn_in_read,
        r_ref_read => grp_execute_fu_594_r_ref_read,
        V_m_read => grp_execute_fu_594_V_m_read,
        ap_return_0 => grp_execute_fu_594_ap_return_0,
        ap_return_1 => grp_execute_fu_594_ap_return_1,
        ap_return_2 => grp_execute_fu_594_ap_return_2,
        ap_return_3 => grp_execute_fu_594_ap_return_3,
        ap_return_4 => grp_execute_fu_594_ap_return_4,
        ap_return_5 => grp_execute_fu_594_ap_return_5,
        ap_ce => grp_execute_fu_594_ap_ce);

    grp_update_indata_fu_616 : component update_indata
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_update_indata_fu_616_ap_start,
        ap_done => grp_update_indata_fu_616_ap_done,
        ap_idle => grp_update_indata_fu_616_ap_idle,
        ap_ready => grp_update_indata_fu_616_ap_ready,
        m_axi_input00_V_AWVALID => grp_update_indata_fu_616_m_axi_input00_V_AWVALID,
        m_axi_input00_V_AWREADY => ap_const_logic_0,
        m_axi_input00_V_AWADDR => grp_update_indata_fu_616_m_axi_input00_V_AWADDR,
        m_axi_input00_V_AWID => grp_update_indata_fu_616_m_axi_input00_V_AWID,
        m_axi_input00_V_AWLEN => grp_update_indata_fu_616_m_axi_input00_V_AWLEN,
        m_axi_input00_V_AWSIZE => grp_update_indata_fu_616_m_axi_input00_V_AWSIZE,
        m_axi_input00_V_AWBURST => grp_update_indata_fu_616_m_axi_input00_V_AWBURST,
        m_axi_input00_V_AWLOCK => grp_update_indata_fu_616_m_axi_input00_V_AWLOCK,
        m_axi_input00_V_AWCACHE => grp_update_indata_fu_616_m_axi_input00_V_AWCACHE,
        m_axi_input00_V_AWPROT => grp_update_indata_fu_616_m_axi_input00_V_AWPROT,
        m_axi_input00_V_AWQOS => grp_update_indata_fu_616_m_axi_input00_V_AWQOS,
        m_axi_input00_V_AWREGION => grp_update_indata_fu_616_m_axi_input00_V_AWREGION,
        m_axi_input00_V_AWUSER => grp_update_indata_fu_616_m_axi_input00_V_AWUSER,
        m_axi_input00_V_WVALID => grp_update_indata_fu_616_m_axi_input00_V_WVALID,
        m_axi_input00_V_WREADY => ap_const_logic_0,
        m_axi_input00_V_WDATA => grp_update_indata_fu_616_m_axi_input00_V_WDATA,
        m_axi_input00_V_WSTRB => grp_update_indata_fu_616_m_axi_input00_V_WSTRB,
        m_axi_input00_V_WLAST => grp_update_indata_fu_616_m_axi_input00_V_WLAST,
        m_axi_input00_V_WID => grp_update_indata_fu_616_m_axi_input00_V_WID,
        m_axi_input00_V_WUSER => grp_update_indata_fu_616_m_axi_input00_V_WUSER,
        m_axi_input00_V_ARVALID => grp_update_indata_fu_616_m_axi_input00_V_ARVALID,
        m_axi_input00_V_ARREADY => input01_ARREADY,
        m_axi_input00_V_ARADDR => grp_update_indata_fu_616_m_axi_input00_V_ARADDR,
        m_axi_input00_V_ARID => grp_update_indata_fu_616_m_axi_input00_V_ARID,
        m_axi_input00_V_ARLEN => grp_update_indata_fu_616_m_axi_input00_V_ARLEN,
        m_axi_input00_V_ARSIZE => grp_update_indata_fu_616_m_axi_input00_V_ARSIZE,
        m_axi_input00_V_ARBURST => grp_update_indata_fu_616_m_axi_input00_V_ARBURST,
        m_axi_input00_V_ARLOCK => grp_update_indata_fu_616_m_axi_input00_V_ARLOCK,
        m_axi_input00_V_ARCACHE => grp_update_indata_fu_616_m_axi_input00_V_ARCACHE,
        m_axi_input00_V_ARPROT => grp_update_indata_fu_616_m_axi_input00_V_ARPROT,
        m_axi_input00_V_ARQOS => grp_update_indata_fu_616_m_axi_input00_V_ARQOS,
        m_axi_input00_V_ARREGION => grp_update_indata_fu_616_m_axi_input00_V_ARREGION,
        m_axi_input00_V_ARUSER => grp_update_indata_fu_616_m_axi_input00_V_ARUSER,
        m_axi_input00_V_RVALID => input01_RVALID,
        m_axi_input00_V_RREADY => grp_update_indata_fu_616_m_axi_input00_V_RREADY,
        m_axi_input00_V_RDATA => input01_RDATA,
        m_axi_input00_V_RLAST => input01_RLAST,
        m_axi_input00_V_RID => input01_RID,
        m_axi_input00_V_RUSER => input01_RUSER,
        m_axi_input00_V_RRESP => input01_RRESP,
        m_axi_input00_V_BVALID => ap_const_logic_0,
        m_axi_input00_V_BREADY => grp_update_indata_fu_616_m_axi_input00_V_BREADY,
        m_axi_input00_V_BRESP => ap_const_lv2_0,
        m_axi_input00_V_BID => ap_const_lv1_0,
        m_axi_input00_V_BUSER => ap_const_lv1_0,
        m_axi_input01_V_AWVALID => grp_update_indata_fu_616_m_axi_input01_V_AWVALID,
        m_axi_input01_V_AWREADY => ap_const_logic_0,
        m_axi_input01_V_AWADDR => grp_update_indata_fu_616_m_axi_input01_V_AWADDR,
        m_axi_input01_V_AWID => grp_update_indata_fu_616_m_axi_input01_V_AWID,
        m_axi_input01_V_AWLEN => grp_update_indata_fu_616_m_axi_input01_V_AWLEN,
        m_axi_input01_V_AWSIZE => grp_update_indata_fu_616_m_axi_input01_V_AWSIZE,
        m_axi_input01_V_AWBURST => grp_update_indata_fu_616_m_axi_input01_V_AWBURST,
        m_axi_input01_V_AWLOCK => grp_update_indata_fu_616_m_axi_input01_V_AWLOCK,
        m_axi_input01_V_AWCACHE => grp_update_indata_fu_616_m_axi_input01_V_AWCACHE,
        m_axi_input01_V_AWPROT => grp_update_indata_fu_616_m_axi_input01_V_AWPROT,
        m_axi_input01_V_AWQOS => grp_update_indata_fu_616_m_axi_input01_V_AWQOS,
        m_axi_input01_V_AWREGION => grp_update_indata_fu_616_m_axi_input01_V_AWREGION,
        m_axi_input01_V_AWUSER => grp_update_indata_fu_616_m_axi_input01_V_AWUSER,
        m_axi_input01_V_WVALID => grp_update_indata_fu_616_m_axi_input01_V_WVALID,
        m_axi_input01_V_WREADY => ap_const_logic_0,
        m_axi_input01_V_WDATA => grp_update_indata_fu_616_m_axi_input01_V_WDATA,
        m_axi_input01_V_WSTRB => grp_update_indata_fu_616_m_axi_input01_V_WSTRB,
        m_axi_input01_V_WLAST => grp_update_indata_fu_616_m_axi_input01_V_WLAST,
        m_axi_input01_V_WID => grp_update_indata_fu_616_m_axi_input01_V_WID,
        m_axi_input01_V_WUSER => grp_update_indata_fu_616_m_axi_input01_V_WUSER,
        m_axi_input01_V_ARVALID => grp_update_indata_fu_616_m_axi_input01_V_ARVALID,
        m_axi_input01_V_ARREADY => input00_ARREADY,
        m_axi_input01_V_ARADDR => grp_update_indata_fu_616_m_axi_input01_V_ARADDR,
        m_axi_input01_V_ARID => grp_update_indata_fu_616_m_axi_input01_V_ARID,
        m_axi_input01_V_ARLEN => grp_update_indata_fu_616_m_axi_input01_V_ARLEN,
        m_axi_input01_V_ARSIZE => grp_update_indata_fu_616_m_axi_input01_V_ARSIZE,
        m_axi_input01_V_ARBURST => grp_update_indata_fu_616_m_axi_input01_V_ARBURST,
        m_axi_input01_V_ARLOCK => grp_update_indata_fu_616_m_axi_input01_V_ARLOCK,
        m_axi_input01_V_ARCACHE => grp_update_indata_fu_616_m_axi_input01_V_ARCACHE,
        m_axi_input01_V_ARPROT => grp_update_indata_fu_616_m_axi_input01_V_ARPROT,
        m_axi_input01_V_ARQOS => grp_update_indata_fu_616_m_axi_input01_V_ARQOS,
        m_axi_input01_V_ARREGION => grp_update_indata_fu_616_m_axi_input01_V_ARREGION,
        m_axi_input01_V_ARUSER => grp_update_indata_fu_616_m_axi_input01_V_ARUSER,
        m_axi_input01_V_RVALID => input00_RVALID,
        m_axi_input01_V_RREADY => grp_update_indata_fu_616_m_axi_input01_V_RREADY,
        m_axi_input01_V_RDATA => input00_RDATA,
        m_axi_input01_V_RLAST => input00_RLAST,
        m_axi_input01_V_RID => input00_RID,
        m_axi_input01_V_RUSER => input00_RUSER,
        m_axi_input01_V_RRESP => input00_RRESP,
        m_axi_input01_V_BVALID => ap_const_logic_0,
        m_axi_input01_V_BREADY => grp_update_indata_fu_616_m_axi_input01_V_BREADY,
        m_axi_input01_V_BRESP => ap_const_lv2_0,
        m_axi_input01_V_BID => ap_const_lv1_0,
        m_axi_input01_V_BUSER => ap_const_lv1_0,
        ap_ce => grp_update_indata_fu_616_ap_ce,
        i => grp_update_indata_fu_616_i,
        input00_V_offset => grp_update_indata_fu_616_input00_V_offset,
        input01_V_offset => grp_update_indata_fu_616_input01_V_offset,
        ap_return_0 => grp_update_indata_fu_616_ap_return_0,
        ap_return_1 => grp_update_indata_fu_616_ap_return_1,
        ap_return_2 => grp_update_indata_fu_616_ap_return_2,
        ap_return_3 => grp_update_indata_fu_616_ap_return_3,
        ap_return_4 => grp_update_indata_fu_616_ap_return_4,
        ap_return_5 => grp_update_indata_fu_616_ap_return_5,
        ap_return_6 => grp_update_indata_fu_616_ap_return_6,
        input00_V_blk_n_AR => grp_update_indata_fu_616_input00_V_blk_n_AR,
        input00_V_blk_n_R => grp_update_indata_fu_616_input00_V_blk_n_R,
        input01_V_blk_n_AR => grp_update_indata_fu_616_input01_V_blk_n_AR,
        input01_V_blk_n_R => grp_update_indata_fu_616_input01_V_blk_n_R);

    grp_update_outdata_fu_629 : component update_outdata
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_update_outdata_fu_629_ap_start,
        ap_done => grp_update_outdata_fu_629_ap_done,
        ap_idle => grp_update_outdata_fu_629_ap_idle,
        ap_ready => grp_update_outdata_fu_629_ap_ready,
        m_axi_input01_V_AWVALID => grp_update_outdata_fu_629_m_axi_input01_V_AWVALID,
        m_axi_input01_V_AWREADY => input00_AWREADY,
        m_axi_input01_V_AWADDR => grp_update_outdata_fu_629_m_axi_input01_V_AWADDR,
        m_axi_input01_V_AWID => grp_update_outdata_fu_629_m_axi_input01_V_AWID,
        m_axi_input01_V_AWLEN => grp_update_outdata_fu_629_m_axi_input01_V_AWLEN,
        m_axi_input01_V_AWSIZE => grp_update_outdata_fu_629_m_axi_input01_V_AWSIZE,
        m_axi_input01_V_AWBURST => grp_update_outdata_fu_629_m_axi_input01_V_AWBURST,
        m_axi_input01_V_AWLOCK => grp_update_outdata_fu_629_m_axi_input01_V_AWLOCK,
        m_axi_input01_V_AWCACHE => grp_update_outdata_fu_629_m_axi_input01_V_AWCACHE,
        m_axi_input01_V_AWPROT => grp_update_outdata_fu_629_m_axi_input01_V_AWPROT,
        m_axi_input01_V_AWQOS => grp_update_outdata_fu_629_m_axi_input01_V_AWQOS,
        m_axi_input01_V_AWREGION => grp_update_outdata_fu_629_m_axi_input01_V_AWREGION,
        m_axi_input01_V_AWUSER => grp_update_outdata_fu_629_m_axi_input01_V_AWUSER,
        m_axi_input01_V_WVALID => grp_update_outdata_fu_629_m_axi_input01_V_WVALID,
        m_axi_input01_V_WREADY => input00_WREADY,
        m_axi_input01_V_WDATA => grp_update_outdata_fu_629_m_axi_input01_V_WDATA,
        m_axi_input01_V_WSTRB => grp_update_outdata_fu_629_m_axi_input01_V_WSTRB,
        m_axi_input01_V_WLAST => grp_update_outdata_fu_629_m_axi_input01_V_WLAST,
        m_axi_input01_V_WID => grp_update_outdata_fu_629_m_axi_input01_V_WID,
        m_axi_input01_V_WUSER => grp_update_outdata_fu_629_m_axi_input01_V_WUSER,
        m_axi_input01_V_ARVALID => grp_update_outdata_fu_629_m_axi_input01_V_ARVALID,
        m_axi_input01_V_ARREADY => ap_const_logic_0,
        m_axi_input01_V_ARADDR => grp_update_outdata_fu_629_m_axi_input01_V_ARADDR,
        m_axi_input01_V_ARID => grp_update_outdata_fu_629_m_axi_input01_V_ARID,
        m_axi_input01_V_ARLEN => grp_update_outdata_fu_629_m_axi_input01_V_ARLEN,
        m_axi_input01_V_ARSIZE => grp_update_outdata_fu_629_m_axi_input01_V_ARSIZE,
        m_axi_input01_V_ARBURST => grp_update_outdata_fu_629_m_axi_input01_V_ARBURST,
        m_axi_input01_V_ARLOCK => grp_update_outdata_fu_629_m_axi_input01_V_ARLOCK,
        m_axi_input01_V_ARCACHE => grp_update_outdata_fu_629_m_axi_input01_V_ARCACHE,
        m_axi_input01_V_ARPROT => grp_update_outdata_fu_629_m_axi_input01_V_ARPROT,
        m_axi_input01_V_ARQOS => grp_update_outdata_fu_629_m_axi_input01_V_ARQOS,
        m_axi_input01_V_ARREGION => grp_update_outdata_fu_629_m_axi_input01_V_ARREGION,
        m_axi_input01_V_ARUSER => grp_update_outdata_fu_629_m_axi_input01_V_ARUSER,
        m_axi_input01_V_RVALID => ap_const_logic_0,
        m_axi_input01_V_RREADY => grp_update_outdata_fu_629_m_axi_input01_V_RREADY,
        m_axi_input01_V_RDATA => ap_const_lv1024_lc_1,
        m_axi_input01_V_RLAST => ap_const_logic_0,
        m_axi_input01_V_RID => ap_const_lv1_0,
        m_axi_input01_V_RUSER => ap_const_lv1_0,
        m_axi_input01_V_RRESP => ap_const_lv2_0,
        m_axi_input01_V_BVALID => input00_BVALID,
        m_axi_input01_V_BREADY => grp_update_outdata_fu_629_m_axi_input01_V_BREADY,
        m_axi_input01_V_BRESP => input00_BRESP,
        m_axi_input01_V_BID => input00_BID,
        m_axi_input01_V_BUSER => input00_BUSER,
        ap_ce => grp_update_outdata_fu_629_ap_ce,
        num => i_reg_462_pp0_iter10_reg,
        V_m_r_read => ap_phi_reg_pp0_iter10_V_m_r_1_reg_534,
        i_syn_ex_rr_read => ap_phi_reg_pp0_iter10_i_syn_ex_rr_1_reg_524,
        i_syn_in_rr_read => ap_phi_reg_pp0_iter10_i_syn_in_rr_1_reg_514,
        r_ref_r_read => ap_phi_reg_pp0_iter10_r_ref_r_1_reg_504,
        input01_V_offset => input01_V5_reg_1846,
        input01_V_blk_n_AW => grp_update_outdata_fu_629_input01_V_blk_n_AW,
        input01_V_blk_n_W => grp_update_outdata_fu_629_input01_V_blk_n_W,
        input01_V_blk_n_B => grp_update_outdata_fu_629_input01_V_blk_n_B);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((tmp_8_reg_1992 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((stable_para_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter10_state33)) then 
                        ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter9;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                elsif (((stable_para_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_output0_s_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_output0_s_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state42) and (ap_const_boolean_0 = ap_block_state42_io)) or ((ap_const_boolean_0 = ap_block_state43_io) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((ap_predicate_op395_writereq_state35 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_predicate_op394_writereq_state35 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_predicate_op374_writereq_state34 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    ap_reg_ioackin_output0_s_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_state42) and (output0_s_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state43) and (output0_s_AWREADY = ap_const_logic_1)) or ((ap_predicate_op395_writereq_state35 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (output0_s_AWREADY = ap_const_logic_1)) or ((ap_predicate_op394_writereq_state35 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (output0_s_AWREADY = ap_const_logic_1)) or ((ap_predicate_op374_writereq_state34 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (output0_s_AWREADY = ap_const_logic_1)))) then 
                    ap_reg_ioackin_output0_s_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_output0_s_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_output0_s_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state44_io) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((ap_const_boolean_0 = ap_block_state43_io) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((ap_predicate_op393_write_state35 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_predicate_op403_write_state36 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op402_write_state36 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    ap_reg_ioackin_output0_s_WREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_state44) and (output0_s_WREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state43) and (output0_s_WREADY = ap_const_logic_1)) or ((ap_predicate_op393_write_state35 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (output0_s_WREADY = ap_const_logic_1)) or ((ap_predicate_op403_write_state36 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (output0_s_WREADY = ap_const_logic_1)) or ((ap_predicate_op402_write_state36 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (output0_s_WREADY = ap_const_logic_1)))) then 
                    ap_reg_ioackin_output0_s_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_output1_s_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_output1_s_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state42) and (ap_const_boolean_0 = ap_block_state42_io)) or ((ap_const_boolean_0 = ap_block_state43_io) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((ap_predicate_op399_writereq_state35 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_predicate_op398_writereq_state35 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_predicate_op376_writereq_state34 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op375_writereq_state34 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    ap_reg_ioackin_output1_s_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_state42) and (output1_s_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state43) and (output1_s_AWREADY = ap_const_logic_1)) or ((ap_predicate_op399_writereq_state35 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (output1_s_AWREADY = ap_const_logic_1)) or ((ap_predicate_op398_writereq_state35 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (output1_s_AWREADY = ap_const_logic_1)) or ((ap_predicate_op376_writereq_state34 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (output1_s_AWREADY = ap_const_logic_1)) or ((ap_predicate_op375_writereq_state34 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (output1_s_AWREADY = ap_const_logic_1)))) then 
                    ap_reg_ioackin_output1_s_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_output1_s_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_output1_s_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state44_io) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((ap_const_boolean_0 = ap_block_state43_io) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((ap_predicate_op397_write_state35 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_predicate_op396_write_state35 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_predicate_op407_write_state36 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op406_write_state36 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    ap_reg_ioackin_output1_s_WREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_state44) and (output1_s_WREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state43) and (output1_s_WREADY = ap_const_logic_1)) or ((ap_predicate_op397_write_state35 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (output1_s_WREADY = ap_const_logic_1)) or ((ap_predicate_op396_write_state35 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (output1_s_WREADY = ap_const_logic_1)) or ((ap_predicate_op407_write_state36 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (output1_s_WREADY = ap_const_logic_1)) or ((ap_predicate_op406_write_state36 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (output1_s_WREADY = ap_const_logic_1)))) then 
                    ap_reg_ioackin_output1_s_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_stable_para_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_stable_para_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    if ((ap_sig_ioackin_stable_para_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_stable_para_ARREADY <= ap_const_logic_0;
                    elsif ((stable_para_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_stable_para_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    grp_update_indata_fu_616_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_update_indata_fu_616_ap_start_reg <= ap_const_logic_0;
            else
                if ((((tmp_8_fu_1247_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_logic_1 = ap_NS_fsm_state2)))) then 
                    grp_update_indata_fu_616_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_update_indata_fu_616_ap_ready = ap_const_logic_1)) then 
                    grp_update_indata_fu_616_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_update_outdata_fu_629_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_update_outdata_fu_629_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_8_reg_1992_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_update_outdata_fu_629_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_update_outdata_fu_629_ap_ready = ap_const_logic_1)) then 
                    grp_update_outdata_fu_629_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter10_V_m_r_1_reg_534_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_41_reg_2009_pp0_iter9_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((tmp_41_reg_2009_pp0_iter9_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter10_V_m_r_1_reg_534 <= grp_execute_fu_594_ap_return_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter10_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter9_V_m_r_1_reg_534;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter10_i_syn_ex_rr_1_reg_524_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_41_reg_2009_pp0_iter9_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((tmp_41_reg_2009_pp0_iter9_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter10_i_syn_ex_rr_1_reg_524 <= grp_execute_fu_594_ap_return_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter10_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter9_i_syn_ex_rr_1_reg_524;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter10_i_syn_in_rr_1_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_41_reg_2009_pp0_iter9_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((tmp_41_reg_2009_pp0_iter9_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter10_i_syn_in_rr_1_reg_514 <= grp_execute_fu_594_ap_return_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter10_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter9_i_syn_in_rr_1_reg_514;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter10_r_ref_r_1_reg_504_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_41_reg_2009_pp0_iter9_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((tmp_41_reg_2009_pp0_iter9_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter10_r_ref_r_1_reg_504 <= grp_execute_fu_594_ap_return_3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter10_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter9_r_ref_r_1_reg_504;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter10_signal_1_18_reg_495_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_41_reg_2009_pp0_iter9_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((tmp_41_reg_2009_pp0_iter9_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter10_signal_1_18_reg_495 <= grp_execute_fu_594_ap_return_4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter10_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter9_signal_1_18_reg_495;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter10_signal_1_1_reg_486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_41_reg_2009_pp0_iter9_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((tmp_41_reg_2009_pp0_iter9_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter10_signal_1_1_reg_486 <= grp_execute_fu_594_ap_return_5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter10_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter9_signal_1_1_reg_486;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter11_num_o_5_reg_567_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1411)) then
                if ((ap_const_boolean_1 = ap_condition_1441)) then 
                    ap_phi_reg_pp0_iter11_num_o_5_reg_567 <= num_o_9_fu_1576_p5;
                elsif ((ap_const_boolean_1 = ap_condition_2336)) then 
                    ap_phi_reg_pp0_iter11_num_o_5_reg_567 <= ap_phi_mux_num_o_3_phi_fu_557_p6;
                elsif ((ap_const_boolean_1 = ap_condition_1444)) then 
                    ap_phi_reg_pp0_iter11_num_o_5_reg_567 <= num_o_8_fu_1607_p5;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_num_o_5_reg_567 <= ap_phi_reg_pp0_iter10_num_o_5_reg_567;
                end if;
            end if; 
        end if;
    end process;

    i_reg_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_reg_1992 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_reg_462 <= i_1_reg_2004;
            elsif (((stable_para_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                i_reg_462 <= ap_const_lv30_0;
            end if; 
        end if;
    end process;

    input00_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    input01_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    num_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    num_o_7_reg_579_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((tmp_22_reg_2212 = ap_const_lv1_0) and (or_cond2_reg_2208 = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)) or ((tmp_22_reg_2212 = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1))))) then 
                num_o_7_reg_579 <= num_o_10_fu_1691_p5;
            elsif ((((or_cond2_reg_2208 = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((tmp_22_reg_2212 = ap_const_lv1_1) and (or_cond2_reg_2208 = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)) or ((tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_0) and (tmp_22_reg_2212 = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)))))) then 
                num_o_7_reg_579 <= ap_phi_reg_pp0_iter11_num_o_5_reg_567;
            elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                num_o_7_reg_579 <= ap_phi_reg_pp0_iter11_num_o_7_reg_579;
            end if; 
        end if;
    end process;

    num_o_reg_474_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                num_o_reg_474 <= num_o_7_reg_579;
            elsif (((stable_para_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                num_o_reg_474 <= ap_const_lv256_lc_3;
            end if; 
        end if;
    end process;

    output0_offset_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    output1_offset_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    output2_s_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    output3_s_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    stable_para_offset_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_predicate_op253_call_state22 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((stable_para_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then
                I_e_1_fu_186 <= reg_768;
                V_m_1_fu_202 <= reg_784;
                i_syn_ex_1_fu_190 <= reg_772;
                i_syn_in_1_fu_194 <= reg_776;
                r_ref_1_fu_198 <= reg_780;
                weighted_spikes_ex_1_fu_178 <= reg_760;
                weighted_spikes_in_1_fu_182 <= reg_764;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op243_call_state21 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                I_e_2_fu_214 <= grp_update_indata_fu_616_ap_return_2;
                V_m_2_fu_230 <= grp_update_indata_fu_616_ap_return_6;
                i_syn_ex_2_fu_218 <= grp_update_indata_fu_616_ap_return_3;
                i_syn_in_2_fu_222 <= grp_update_indata_fu_616_ap_return_4;
                r_ref_2_fu_226 <= grp_update_indata_fu_616_ap_return_5;
                weighted_spikes_ex_2_fu_206 <= grp_update_indata_fu_616_ap_return_0;
                weighted_spikes_in_2_fu_210 <= grp_update_indata_fu_616_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((stable_para_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                P11ex_s_reg_1956 <= P11ex_s_fu_1161_p1;
                P11in_s_reg_1961 <= P11in_s_fu_1175_p1;
                P20_s_reg_1936 <= P20_s_fu_1105_p1;
                P21ex_s_reg_1946 <= P21ex_s_fu_1133_p1;
                P21in_s_reg_1951 <= P21in_s_fu_1147_p1;
                P22_s_reg_1941 <= P22_s_fu_1119_p1;
                RefractoryCounts_s_reg_1971 <= RefractoryCounts_s_fu_1203_p1;
                Theta_s_reg_1966 <= Theta_s_fu_1189_p1;
                V_reset_s_reg_1976 <= V_reset_s_fu_1217_p1;
                    output0_addr_1_reg_1930(29 downto 0) <= tmp_27_fu_1089_p1(32 - 1 downto 0)(29 downto 0);
                    output0_addr_reg_1919(29 downto 0) <= tmp_26_fu_1077_p1(32 - 1 downto 0)(29 downto 0);
                    output1_addr_1_reg_1907(29 downto 0) <= tmp_25_fu_1065_p1(32 - 1 downto 0)(29 downto 0);
                    output1_addr_reg_1894(29 downto 0) <= tmp_9_fu_1053_p1(32 - 1 downto 0)(29 downto 0);
                time_2_reg_1981 <= time_2_fu_1230_p3;
                    tmp_25_cast_reg_1901(29 downto 0) <= tmp_25_cast_fu_1068_p1(29 downto 0);
                    tmp_26_cast_reg_1913(29 downto 0) <= tmp_26_cast_fu_1080_p1(29 downto 0);
                    tmp_27_cast_reg_1925(29 downto 0) <= tmp_27_cast_fu_1092_p1(29 downto 0);
                tmp_6_reg_1986 <= tmp_6_fu_1237_p2;
                    tmp_9_cast_reg_1889(29 downto 0) <= tmp_9_cast_fu_1056_p1(29 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter10_num_o_5_reg_567 <= ap_phi_reg_pp0_iter9_num_o_5_reg_567;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter1_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter0_V_m_r_1_reg_534;
                ap_phi_reg_pp0_iter1_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter0_i_syn_ex_rr_1_reg_524;
                ap_phi_reg_pp0_iter1_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter0_i_syn_in_rr_1_reg_514;
                ap_phi_reg_pp0_iter1_num_o_5_reg_567 <= ap_phi_reg_pp0_iter0_num_o_5_reg_567;
                ap_phi_reg_pp0_iter1_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter0_r_ref_r_1_reg_504;
                ap_phi_reg_pp0_iter1_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter0_signal_1_18_reg_495;
                ap_phi_reg_pp0_iter1_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter0_signal_1_1_reg_486;
                i_1_reg_2004 <= i_1_fu_1267_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter2_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter1_V_m_r_1_reg_534;
                ap_phi_reg_pp0_iter2_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter1_i_syn_ex_rr_1_reg_524;
                ap_phi_reg_pp0_iter2_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter1_i_syn_in_rr_1_reg_514;
                ap_phi_reg_pp0_iter2_num_o_5_reg_567 <= ap_phi_reg_pp0_iter1_num_o_5_reg_567;
                ap_phi_reg_pp0_iter2_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter1_r_ref_r_1_reg_504;
                ap_phi_reg_pp0_iter2_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter1_signal_1_18_reg_495;
                ap_phi_reg_pp0_iter2_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter1_signal_1_1_reg_486;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter3_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter2_V_m_r_1_reg_534;
                ap_phi_reg_pp0_iter3_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter2_i_syn_ex_rr_1_reg_524;
                ap_phi_reg_pp0_iter3_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter2_i_syn_in_rr_1_reg_514;
                ap_phi_reg_pp0_iter3_num_o_5_reg_567 <= ap_phi_reg_pp0_iter2_num_o_5_reg_567;
                ap_phi_reg_pp0_iter3_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter2_r_ref_r_1_reg_504;
                ap_phi_reg_pp0_iter3_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter2_signal_1_18_reg_495;
                ap_phi_reg_pp0_iter3_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter2_signal_1_1_reg_486;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter4_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter3_V_m_r_1_reg_534;
                ap_phi_reg_pp0_iter4_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter3_i_syn_ex_rr_1_reg_524;
                ap_phi_reg_pp0_iter4_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter3_i_syn_in_rr_1_reg_514;
                ap_phi_reg_pp0_iter4_num_o_5_reg_567 <= ap_phi_reg_pp0_iter3_num_o_5_reg_567;
                ap_phi_reg_pp0_iter4_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter3_r_ref_r_1_reg_504;
                ap_phi_reg_pp0_iter4_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter3_signal_1_18_reg_495;
                ap_phi_reg_pp0_iter4_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter3_signal_1_1_reg_486;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter5_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter4_V_m_r_1_reg_534;
                ap_phi_reg_pp0_iter5_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter4_i_syn_ex_rr_1_reg_524;
                ap_phi_reg_pp0_iter5_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter4_i_syn_in_rr_1_reg_514;
                ap_phi_reg_pp0_iter5_num_o_5_reg_567 <= ap_phi_reg_pp0_iter4_num_o_5_reg_567;
                ap_phi_reg_pp0_iter5_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter4_r_ref_r_1_reg_504;
                ap_phi_reg_pp0_iter5_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter4_signal_1_18_reg_495;
                ap_phi_reg_pp0_iter5_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter4_signal_1_1_reg_486;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter6_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter5_V_m_r_1_reg_534;
                ap_phi_reg_pp0_iter6_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter5_i_syn_ex_rr_1_reg_524;
                ap_phi_reg_pp0_iter6_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter5_i_syn_in_rr_1_reg_514;
                ap_phi_reg_pp0_iter6_num_o_5_reg_567 <= ap_phi_reg_pp0_iter5_num_o_5_reg_567;
                ap_phi_reg_pp0_iter6_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter5_r_ref_r_1_reg_504;
                ap_phi_reg_pp0_iter6_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter5_signal_1_18_reg_495;
                ap_phi_reg_pp0_iter6_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter5_signal_1_1_reg_486;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter7_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter6_V_m_r_1_reg_534;
                ap_phi_reg_pp0_iter7_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter6_i_syn_ex_rr_1_reg_524;
                ap_phi_reg_pp0_iter7_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter6_i_syn_in_rr_1_reg_514;
                ap_phi_reg_pp0_iter7_num_o_5_reg_567 <= ap_phi_reg_pp0_iter6_num_o_5_reg_567;
                ap_phi_reg_pp0_iter7_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter6_r_ref_r_1_reg_504;
                ap_phi_reg_pp0_iter7_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter6_signal_1_18_reg_495;
                ap_phi_reg_pp0_iter7_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter6_signal_1_1_reg_486;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter8_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter7_V_m_r_1_reg_534;
                ap_phi_reg_pp0_iter8_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter7_i_syn_ex_rr_1_reg_524;
                ap_phi_reg_pp0_iter8_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter7_i_syn_in_rr_1_reg_514;
                ap_phi_reg_pp0_iter8_num_o_5_reg_567 <= ap_phi_reg_pp0_iter7_num_o_5_reg_567;
                ap_phi_reg_pp0_iter8_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter7_r_ref_r_1_reg_504;
                ap_phi_reg_pp0_iter8_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter7_signal_1_18_reg_495;
                ap_phi_reg_pp0_iter8_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter7_signal_1_1_reg_486;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter9_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter8_V_m_r_1_reg_534;
                ap_phi_reg_pp0_iter9_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter8_i_syn_ex_rr_1_reg_524;
                ap_phi_reg_pp0_iter9_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter8_i_syn_in_rr_1_reg_514;
                ap_phi_reg_pp0_iter9_num_o_5_reg_567 <= ap_phi_reg_pp0_iter8_num_o_5_reg_567;
                ap_phi_reg_pp0_iter9_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter8_r_ref_r_1_reg_504;
                ap_phi_reg_pp0_iter9_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter8_signal_1_18_reg_495;
                ap_phi_reg_pp0_iter9_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter8_signal_1_1_reg_486;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_fu_1247_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1996 <= brmerge_fu_1257_p2;
                tmp_14_reg_2000 <= tmp_14_fu_1262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1996_pp0_iter10_reg <= brmerge_reg_1996_pp0_iter9_reg;
                brmerge_reg_1996_pp0_iter11_reg <= brmerge_reg_1996_pp0_iter10_reg;
                brmerge_reg_1996_pp0_iter12_reg <= brmerge_reg_1996_pp0_iter11_reg;
                brmerge_reg_1996_pp0_iter13_reg <= brmerge_reg_1996_pp0_iter12_reg;
                brmerge_reg_1996_pp0_iter14_reg <= brmerge_reg_1996_pp0_iter13_reg;
                brmerge_reg_1996_pp0_iter1_reg <= brmerge_reg_1996;
                brmerge_reg_1996_pp0_iter2_reg <= brmerge_reg_1996_pp0_iter1_reg;
                brmerge_reg_1996_pp0_iter3_reg <= brmerge_reg_1996_pp0_iter2_reg;
                brmerge_reg_1996_pp0_iter4_reg <= brmerge_reg_1996_pp0_iter3_reg;
                brmerge_reg_1996_pp0_iter5_reg <= brmerge_reg_1996_pp0_iter4_reg;
                brmerge_reg_1996_pp0_iter6_reg <= brmerge_reg_1996_pp0_iter5_reg;
                brmerge_reg_1996_pp0_iter7_reg <= brmerge_reg_1996_pp0_iter6_reg;
                brmerge_reg_1996_pp0_iter8_reg <= brmerge_reg_1996_pp0_iter7_reg;
                brmerge_reg_1996_pp0_iter9_reg <= brmerge_reg_1996_pp0_iter8_reg;
                i_reg_462_pp0_iter10_reg <= i_reg_462_pp0_iter9_reg;
                i_reg_462_pp0_iter1_reg <= i_reg_462;
                i_reg_462_pp0_iter2_reg <= i_reg_462_pp0_iter1_reg;
                i_reg_462_pp0_iter3_reg <= i_reg_462_pp0_iter2_reg;
                i_reg_462_pp0_iter4_reg <= i_reg_462_pp0_iter3_reg;
                i_reg_462_pp0_iter5_reg <= i_reg_462_pp0_iter4_reg;
                i_reg_462_pp0_iter6_reg <= i_reg_462_pp0_iter5_reg;
                i_reg_462_pp0_iter7_reg <= i_reg_462_pp0_iter6_reg;
                i_reg_462_pp0_iter8_reg <= i_reg_462_pp0_iter7_reg;
                i_reg_462_pp0_iter9_reg <= i_reg_462_pp0_iter8_reg;
                tmp_14_reg_2000_pp0_iter10_reg <= tmp_14_reg_2000_pp0_iter9_reg;
                tmp_14_reg_2000_pp0_iter11_reg <= tmp_14_reg_2000_pp0_iter10_reg;
                tmp_14_reg_2000_pp0_iter12_reg <= tmp_14_reg_2000_pp0_iter11_reg;
                tmp_14_reg_2000_pp0_iter13_reg <= tmp_14_reg_2000_pp0_iter12_reg;
                tmp_14_reg_2000_pp0_iter14_reg <= tmp_14_reg_2000_pp0_iter13_reg;
                tmp_14_reg_2000_pp0_iter1_reg <= tmp_14_reg_2000;
                tmp_14_reg_2000_pp0_iter2_reg <= tmp_14_reg_2000_pp0_iter1_reg;
                tmp_14_reg_2000_pp0_iter3_reg <= tmp_14_reg_2000_pp0_iter2_reg;
                tmp_14_reg_2000_pp0_iter4_reg <= tmp_14_reg_2000_pp0_iter3_reg;
                tmp_14_reg_2000_pp0_iter5_reg <= tmp_14_reg_2000_pp0_iter4_reg;
                tmp_14_reg_2000_pp0_iter6_reg <= tmp_14_reg_2000_pp0_iter5_reg;
                tmp_14_reg_2000_pp0_iter7_reg <= tmp_14_reg_2000_pp0_iter6_reg;
                tmp_14_reg_2000_pp0_iter8_reg <= tmp_14_reg_2000_pp0_iter7_reg;
                tmp_14_reg_2000_pp0_iter9_reg <= tmp_14_reg_2000_pp0_iter8_reg;
                tmp_41_reg_2009_pp0_iter5_reg <= tmp_41_reg_2009;
                tmp_41_reg_2009_pp0_iter6_reg <= tmp_41_reg_2009_pp0_iter5_reg;
                tmp_41_reg_2009_pp0_iter7_reg <= tmp_41_reg_2009_pp0_iter6_reg;
                tmp_41_reg_2009_pp0_iter8_reg <= tmp_41_reg_2009_pp0_iter7_reg;
                tmp_41_reg_2009_pp0_iter9_reg <= tmp_41_reg_2009_pp0_iter8_reg;
                tmp_8_reg_1992 <= tmp_8_fu_1247_p2;
                tmp_8_reg_1992_pp0_iter10_reg <= tmp_8_reg_1992_pp0_iter9_reg;
                tmp_8_reg_1992_pp0_iter11_reg <= tmp_8_reg_1992_pp0_iter10_reg;
                tmp_8_reg_1992_pp0_iter12_reg <= tmp_8_reg_1992_pp0_iter11_reg;
                tmp_8_reg_1992_pp0_iter13_reg <= tmp_8_reg_1992_pp0_iter12_reg;
                tmp_8_reg_1992_pp0_iter14_reg <= tmp_8_reg_1992_pp0_iter13_reg;
                tmp_8_reg_1992_pp0_iter1_reg <= tmp_8_reg_1992;
                tmp_8_reg_1992_pp0_iter2_reg <= tmp_8_reg_1992_pp0_iter1_reg;
                tmp_8_reg_1992_pp0_iter3_reg <= tmp_8_reg_1992_pp0_iter2_reg;
                tmp_8_reg_1992_pp0_iter4_reg <= tmp_8_reg_1992_pp0_iter3_reg;
                tmp_8_reg_1992_pp0_iter5_reg <= tmp_8_reg_1992_pp0_iter4_reg;
                tmp_8_reg_1992_pp0_iter6_reg <= tmp_8_reg_1992_pp0_iter5_reg;
                tmp_8_reg_1992_pp0_iter7_reg <= tmp_8_reg_1992_pp0_iter6_reg;
                tmp_8_reg_1992_pp0_iter8_reg <= tmp_8_reg_1992_pp0_iter7_reg;
                tmp_8_reg_1992_pp0_iter9_reg <= tmp_8_reg_1992_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_reg_1878 <= icmp_fu_1037_p2;
                input00_V3_reg_1852 <= input00_V_0_data_reg(31 downto 7);
                input01_V5_reg_1846 <= input01_V_0_data_reg(31 downto 7);
                output0_offset7_reg_1840 <= output0_offset_0_data_reg(31 downto 2);
                output1_offset9_reg_1834 <= output1_offset_0_data_reg(31 downto 2);
                output2_1_reg_1828 <= output2_s_0_data_reg(31 downto 2);
                output3_1_reg_1822 <= output3_s_0_data_reg(31 downto 2);
                stable_para_offset1_reg_1857 <= stable_para_offset_0_data_reg(31 downto 6);
                time_s_reg_1862 <= time_s_fu_955_p3;
                tmp_7_reg_1873 <= tmp_7_fu_1021_p2;
                tmp_reg_1867 <= tmp_fu_1009_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (input00_V_0_vld_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (input00_V_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (input00_V_0_vld_reg = ap_const_logic_1)))) then
                input00_V_0_data_reg <= input00_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (input01_V_0_vld_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (input01_V_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (input01_V_0_vld_reg = ap_const_logic_1)))) then
                input01_V_0_data_reg <= input01_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (num_0_vld_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (num_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (num_0_vld_reg = ap_const_logic_1)))) then
                num_0_data_reg <= num;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                or_cond1_reg_2178 <= or_cond1_fu_1536_p2;
                or_cond2_reg_2208 <= or_cond2_fu_1635_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                or_cond1_reg_2178_pp0_iter11_reg <= or_cond1_reg_2178;
                or_cond1_reg_2178_pp0_iter12_reg <= or_cond1_reg_2178_pp0_iter11_reg;
                or_cond1_reg_2178_pp0_iter13_reg <= or_cond1_reg_2178_pp0_iter12_reg;
                or_cond2_reg_2208_pp0_iter11_reg <= or_cond2_reg_2208;
                or_cond2_reg_2208_pp0_iter12_reg <= or_cond2_reg_2208_pp0_iter11_reg;
                or_cond2_reg_2208_pp0_iter13_reg <= or_cond2_reg_2208_pp0_iter12_reg;
                reg_788_pp0_iter11_reg <= reg_788;
                tmp_16_reg_2182_pp0_iter11_reg <= tmp_16_reg_2182;
                tmp_16_reg_2182_pp0_iter12_reg <= tmp_16_reg_2182_pp0_iter11_reg;
                tmp_16_reg_2182_pp0_iter13_reg <= tmp_16_reg_2182_pp0_iter12_reg;
                tmp_1_reg_2143_pp0_iter11_reg <= tmp_1_reg_2143;
                tmp_1_reg_2143_pp0_iter12_reg <= tmp_1_reg_2143_pp0_iter11_reg;
                tmp_1_reg_2143_pp0_iter13_reg <= tmp_1_reg_2143_pp0_iter12_reg;
                tmp_22_reg_2212_pp0_iter11_reg <= tmp_22_reg_2212;
                tmp_22_reg_2212_pp0_iter12_reg <= tmp_22_reg_2212_pp0_iter11_reg;
                tmp_22_reg_2212_pp0_iter13_reg <= tmp_22_reg_2212_pp0_iter12_reg;
                tmp_4_reg_2158_pp0_iter11_reg <= tmp_4_reg_2158;
                tmp_4_reg_2158_pp0_iter12_reg <= tmp_4_reg_2158_pp0_iter11_reg;
                tmp_4_reg_2158_pp0_iter13_reg <= tmp_4_reg_2158_pp0_iter12_reg;
                tmp_5_reg_2168_pp0_iter11_reg <= tmp_5_reg_2168;
                tmp_5_reg_2168_pp0_iter12_reg <= tmp_5_reg_2168_pp0_iter11_reg;
                tmp_5_reg_2168_pp0_iter13_reg <= tmp_5_reg_2168_pp0_iter12_reg;
                tmp_65_reg_2216_pp0_iter11_reg <= tmp_65_reg_2216;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_1372_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                output0_addr_2_reg_2152 <= output0_8_sum_cast_fu_1395_p1(32 - 1 downto 0);
                tmp_49_reg_2147 <= tmp_49_fu_1378_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_fu_1434_p2 = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter10_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                output0_addr_3_reg_2162 <= output1_10_sum_cast_fu_1449_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (((tmp_5_fu_1482_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (tmp_4_fu_1434_p2 = ap_const_lv1_1)) or ((tmp_5_fu_1482_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (brmerge_reg_1996_pp0_iter10_reg = ap_const_lv1_1))))) then
                output0_addr_4_reg_2172 <= output1_10_sum1_cast_fu_1497_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (output0_offset_0_vld_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (output0_offset_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (output0_offset_0_vld_reg = ap_const_logic_1)))) then
                output0_offset_0_data_reg <= output0_offset;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (or_cond1_fu_1536_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                output1_addr_2_reg_2197 <= output2_12_sum1_cast_fu_1597_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (((tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_0) and (tmp_16_fu_1551_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)) or ((or_cond1_fu_1536_p2 = ap_const_lv1_0) and (tmp_16_fu_1551_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1))))) then
                output1_addr_3_reg_2186 <= output2_12_sum_cast_fu_1566_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((tmp_22_reg_2212 = ap_const_lv1_0) and (or_cond2_reg_2208 = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)) or ((tmp_22_reg_2212 = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1))))) then
                output1_addr_4_reg_2226 <= output3_14_sum_cast_fu_1675_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (output1_offset_0_vld_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (output1_offset_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (output1_offset_0_vld_reg = ap_const_logic_1)))) then
                output1_offset_0_data_reg <= output1_offset;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (output2_s_0_vld_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (output2_s_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (output2_s_0_vld_reg = ap_const_logic_1)))) then
                output2_s_0_data_reg <= output2_s;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (output3_s_0_vld_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (output3_s_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (output3_s_0_vld_reg = ap_const_logic_1)))) then
                output3_s_0_data_reg <= output3_s;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or (not((((grp_update_indata_fu_616_input01_V_blk_n_R and grp_update_indata_fu_616_input01_V_blk_n_AR) = ap_const_logic_0) or ((grp_update_indata_fu_616_input00_V_blk_n_R and grp_update_indata_fu_616_input00_V_blk_n_AR) = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then
                reg_760 <= grp_update_indata_fu_616_ap_return_0;
                reg_764 <= grp_update_indata_fu_616_ap_return_1;
                reg_768 <= grp_update_indata_fu_616_ap_return_2;
                reg_772 <= grp_update_indata_fu_616_ap_return_3;
                reg_776 <= grp_update_indata_fu_616_ap_return_4;
                reg_780 <= grp_update_indata_fu_616_ap_return_5;
                reg_784 <= grp_update_indata_fu_616_ap_return_6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_4_fu_1434_p2 = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter10_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (((tmp_5_fu_1482_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (tmp_4_fu_1434_p2 = ap_const_lv1_1)) or ((tmp_5_fu_1482_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (brmerge_reg_1996_pp0_iter10_reg = ap_const_lv1_1)))))) then
                reg_788 <= ap_phi_reg_pp0_iter10_signal_1_1_reg_486(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (or_cond1_fu_1536_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (((tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_0) and (tmp_16_fu_1551_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)) or ((or_cond1_fu_1536_p2 = ap_const_lv1_0) and (tmp_16_fu_1551_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)))))) then
                reg_794 <= ap_phi_reg_pp0_iter10_signal_1_1_reg_486(95 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (stable_para_offset_0_vld_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (stable_para_offset_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (stable_para_offset_0_vld_reg = ap_const_logic_1)))) then
                stable_para_offset_0_data_reg <= stable_para_offset;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (((tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)) or ((or_cond1_fu_1536_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1))))) then
                tmp_16_reg_2182 <= tmp_16_fu_1551_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_1_reg_2143 <= tmp_1_fu_1372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (((tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)) or ((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (or_cond2_fu_1635_p2 = ap_const_lv1_1))))) then
                tmp_22_reg_2212 <= tmp_22_fu_1650_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_reg_1992_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_41_reg_2009 <= tmp_41_fu_1273_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state42) and (ap_const_boolean_0 = ap_block_state42_io))) then
                tmp_44_reg_2237 <= num_o_reg_474(63 downto 32);
                tmp_45_reg_2242 <= num_o_reg_474(95 downto 64);
                tmp_46_reg_2247 <= num_o_reg_474(127 downto 96);
                tmp_47_reg_2232 <= tmp_47_fu_1704_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((brmerge_reg_1996_pp0_iter10_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_4_reg_2158 <= tmp_4_fu_1434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (tmp_4_fu_1434_p2 = ap_const_lv1_1)) or ((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (brmerge_reg_1996_pp0_iter10_reg = ap_const_lv1_1))))) then
                tmp_5_reg_2168 <= tmp_5_fu_1482_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond2_reg_2208 = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_64_reg_2221 <= ap_phi_reg_pp0_iter11_num_o_5_reg_567(127 downto 96);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (((tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_0) and (tmp_22_fu_1650_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)) or ((tmp_22_fu_1650_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (or_cond2_fu_1635_p2 = ap_const_lv1_1))))) then
                tmp_65_reg_2216 <= ap_phi_reg_pp0_iter10_signal_1_1_reg_486(127 downto 96);
            end if;
        end if;
    end process;
    tmp_9_cast_reg_1889(32 downto 30) <= "000";
    output1_addr_reg_1894(31 downto 30) <= "00";
    tmp_25_cast_reg_1901(32 downto 30) <= "000";
    output1_addr_1_reg_1907(31 downto 30) <= "00";
    tmp_26_cast_reg_1913(32 downto 30) <= "000";
    output0_addr_reg_1919(31 downto 30) <= "00";
    tmp_27_cast_reg_1925(32 downto 30) <= "000";
    output0_addr_1_reg_1930(31 downto 30) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state11, grp_update_indata_fu_616_input00_V_blk_n_AR, grp_update_indata_fu_616_input00_V_blk_n_R, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_pp0_stage1, grp_update_indata_fu_616_input01_V_blk_n_AR, grp_update_indata_fu_616_input01_V_blk_n_R, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter14, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state49, ap_CS_fsm_state42, ap_CS_fsm_state48, stable_para_RVALID, output0_s_BVALID, output1_s_BVALID, ap_enable_reg_pp0_iter10, ap_sig_ioackin_stable_para_ARREADY, ap_enable_reg_pp0_iter9, ap_block_state42_io, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter13, ap_block_state43_io, ap_block_state44_io, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if ((not((((grp_update_indata_fu_616_input01_V_blk_n_R and grp_update_indata_fu_616_input01_V_blk_n_AR) = ap_const_logic_0) or ((grp_update_indata_fu_616_input00_V_blk_n_R and grp_update_indata_fu_616_input00_V_blk_n_AR) = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_sig_ioackin_stable_para_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if ((not((((grp_update_indata_fu_616_input01_V_blk_n_R and grp_update_indata_fu_616_input01_V_blk_n_AR) = ap_const_logic_0) or ((grp_update_indata_fu_616_input00_V_blk_n_R and grp_update_indata_fu_616_input00_V_blk_n_AR) = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((stable_para_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) or ((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state42 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state42) and (ap_const_boolean_0 = ap_block_state42_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state43 => 
                if (((ap_const_boolean_0 = ap_block_state43_io) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state44 => 
                if (((ap_const_boolean_0 = ap_block_state44_io) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                if ((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state49 => 
                if ((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state49))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    P11ex_s_fu_1161_p1 <= tmp_36_fu_1151_p4;
    P11in_s_fu_1175_p1 <= tmp_37_fu_1165_p4;
    P20_s_fu_1105_p1 <= tmp_10_fu_1101_p1;
    P21ex_s_fu_1133_p1 <= tmp_34_fu_1123_p4;
    P21in_s_fu_1147_p1 <= tmp_35_fu_1137_p4;
    P22_s_fu_1119_p1 <= tmp_s_fu_1109_p4;
    RefractoryCounts_s_fu_1203_p1 <= tmp_39_fu_1193_p4;
    Theta_s_fu_1189_p1 <= tmp_38_fu_1179_p4;
    V_reset_s_fu_1217_p1 <= tmp_40_fu_1207_p4;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(12);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state42 <= ap_CS_fsm(13);
    ap_CS_fsm_state43 <= ap_CS_fsm(14);
    ap_CS_fsm_state44 <= ap_CS_fsm(15);
    ap_CS_fsm_state48 <= ap_CS_fsm(19);
    ap_CS_fsm_state49 <= ap_CS_fsm(20);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state2 <= ap_NS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(grp_update_indata_fu_616_input00_V_blk_n_AR, grp_update_indata_fu_616_input00_V_blk_n_R, ap_enable_reg_pp0_iter1, tmp_8_reg_1992, grp_update_indata_fu_616_input01_V_blk_n_AR, grp_update_indata_fu_616_input01_V_blk_n_R, grp_update_outdata_fu_629_input01_V_blk_n_AW, grp_update_outdata_fu_629_input01_V_blk_n_W, grp_update_outdata_fu_629_input01_V_blk_n_B, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter10_reg, ap_enable_reg_pp0_iter14, tmp_8_reg_1992_pp0_iter13_reg, output0_s_BVALID, output1_s_BVALID, ap_predicate_op433_writeresp_state40, ap_predicate_op436_writeresp_state40, ap_predicate_op437_writeresp_state40)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (((tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and ((grp_update_outdata_fu_629_input01_V_blk_n_W and grp_update_outdata_fu_629_input01_V_blk_n_B and grp_update_outdata_fu_629_input01_V_blk_n_AW) = ap_const_logic_0)) or ((ap_predicate_op437_writeresp_state40 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op436_writeresp_state40 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op433_writeresp_state40 = ap_const_boolean_1) and (output0_s_BVALID = ap_const_logic_0)))) or ((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and ((grp_update_outdata_fu_629_input01_V_blk_n_W and grp_update_outdata_fu_629_input01_V_blk_n_B and grp_update_outdata_fu_629_input01_V_blk_n_AW) = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((tmp_8_reg_1992 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((grp_update_indata_fu_616_input01_V_blk_n_R and grp_update_indata_fu_616_input01_V_blk_n_AR) = ap_const_logic_0) or ((grp_update_indata_fu_616_input00_V_blk_n_R and grp_update_indata_fu_616_input00_V_blk_n_AR) = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(grp_update_indata_fu_616_input00_V_blk_n_AR, grp_update_indata_fu_616_input00_V_blk_n_R, ap_enable_reg_pp0_iter1, tmp_8_reg_1992, grp_update_indata_fu_616_input01_V_blk_n_AR, grp_update_indata_fu_616_input01_V_blk_n_R, grp_update_outdata_fu_629_input01_V_blk_n_AW, grp_update_outdata_fu_629_input01_V_blk_n_W, grp_update_outdata_fu_629_input01_V_blk_n_B, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter10_reg, ap_enable_reg_pp0_iter14, tmp_8_reg_1992_pp0_iter13_reg, ap_enable_reg_pp0_iter12, output0_s_BVALID, output1_s_BVALID, ap_block_state34_io, ap_block_state36_io, ap_predicate_op433_writeresp_state40, ap_predicate_op436_writeresp_state40, ap_predicate_op437_writeresp_state40)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state36_io) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (((tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and ((grp_update_outdata_fu_629_input01_V_blk_n_W and grp_update_outdata_fu_629_input01_V_blk_n_B and grp_update_outdata_fu_629_input01_V_blk_n_AW) = ap_const_logic_0)) or ((ap_predicate_op437_writeresp_state40 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op436_writeresp_state40 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op433_writeresp_state40 = ap_const_boolean_1) and (output0_s_BVALID = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state34_io) or ((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and ((grp_update_outdata_fu_629_input01_V_blk_n_W and grp_update_outdata_fu_629_input01_V_blk_n_B and grp_update_outdata_fu_629_input01_V_blk_n_AW) = ap_const_logic_0)))) or ((tmp_8_reg_1992 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((grp_update_indata_fu_616_input01_V_blk_n_R and grp_update_indata_fu_616_input01_V_blk_n_AR) = ap_const_logic_0) or ((grp_update_indata_fu_616_input00_V_blk_n_R and grp_update_indata_fu_616_input00_V_blk_n_AR) = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(grp_update_indata_fu_616_input00_V_blk_n_AR, grp_update_indata_fu_616_input00_V_blk_n_R, ap_enable_reg_pp0_iter1, tmp_8_reg_1992, grp_update_indata_fu_616_input01_V_blk_n_AR, grp_update_indata_fu_616_input01_V_blk_n_R, grp_update_outdata_fu_629_input01_V_blk_n_AW, grp_update_outdata_fu_629_input01_V_blk_n_W, grp_update_outdata_fu_629_input01_V_blk_n_B, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter10_reg, ap_enable_reg_pp0_iter14, tmp_8_reg_1992_pp0_iter13_reg, ap_enable_reg_pp0_iter12, output0_s_BVALID, output1_s_BVALID, ap_block_state34_io, ap_block_state36_io, ap_predicate_op433_writeresp_state40, ap_predicate_op436_writeresp_state40, ap_predicate_op437_writeresp_state40)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state36_io) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (((tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and ((grp_update_outdata_fu_629_input01_V_blk_n_W and grp_update_outdata_fu_629_input01_V_blk_n_B and grp_update_outdata_fu_629_input01_V_blk_n_AW) = ap_const_logic_0)) or ((ap_predicate_op437_writeresp_state40 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op436_writeresp_state40 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op433_writeresp_state40 = ap_const_boolean_1) and (output0_s_BVALID = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state34_io) or ((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and ((grp_update_outdata_fu_629_input01_V_blk_n_W and grp_update_outdata_fu_629_input01_V_blk_n_B and grp_update_outdata_fu_629_input01_V_blk_n_AW) = ap_const_logic_0)))) or ((tmp_8_reg_1992 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((grp_update_indata_fu_616_input01_V_blk_n_R and grp_update_indata_fu_616_input01_V_blk_n_AR) = ap_const_logic_0) or ((grp_update_indata_fu_616_input00_V_blk_n_R and grp_update_indata_fu_616_input00_V_blk_n_AR) = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(grp_update_indata_fu_616_input00_V_blk_n_AR, grp_update_indata_fu_616_input00_V_blk_n_R, ap_enable_reg_pp0_iter4, tmp_8_reg_1992_pp0_iter4_reg, grp_update_indata_fu_616_input01_V_blk_n_AR, grp_update_indata_fu_616_input01_V_blk_n_R, grp_update_outdata_fu_629_input01_V_blk_n_AW, grp_update_outdata_fu_629_input01_V_blk_n_W, grp_update_outdata_fu_629_input01_V_blk_n_B, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter11_reg, ap_enable_reg_pp0_iter14, output0_s_BVALID, output1_s_BVALID, ap_predicate_op440_writeresp_state41, ap_predicate_op441_writeresp_state41, ap_predicate_op442_writeresp_state41, ap_predicate_op443_writeresp_state41)
    begin
                ap_block_pp0_stage1_01001 <= (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (((ap_predicate_op443_writeresp_state41 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op442_writeresp_state41 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op441_writeresp_state41 = ap_const_boolean_1) and (output0_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op440_writeresp_state41 = ap_const_boolean_1) and (output0_s_BVALID = ap_const_logic_0)))) or ((tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and ((grp_update_outdata_fu_629_input01_V_blk_n_W and grp_update_outdata_fu_629_input01_V_blk_n_B and grp_update_outdata_fu_629_input01_V_blk_n_AW) = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((grp_update_indata_fu_616_input01_V_blk_n_R and grp_update_indata_fu_616_input01_V_blk_n_AR) = ap_const_logic_0) or ((grp_update_indata_fu_616_input00_V_blk_n_R and grp_update_indata_fu_616_input00_V_blk_n_AR) = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(grp_update_indata_fu_616_input00_V_blk_n_AR, grp_update_indata_fu_616_input00_V_blk_n_R, ap_enable_reg_pp0_iter4, tmp_8_reg_1992_pp0_iter4_reg, grp_update_indata_fu_616_input01_V_blk_n_AR, grp_update_indata_fu_616_input01_V_blk_n_R, grp_update_outdata_fu_629_input01_V_blk_n_AW, grp_update_outdata_fu_629_input01_V_blk_n_W, grp_update_outdata_fu_629_input01_V_blk_n_B, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter11_reg, ap_enable_reg_pp0_iter14, output0_s_BVALID, output1_s_BVALID, ap_block_state35_io, ap_predicate_op440_writeresp_state41, ap_predicate_op441_writeresp_state41, ap_predicate_op442_writeresp_state41, ap_predicate_op443_writeresp_state41)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (((ap_predicate_op443_writeresp_state41 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op442_writeresp_state41 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op441_writeresp_state41 = ap_const_boolean_1) and (output0_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op440_writeresp_state41 = ap_const_boolean_1) and (output0_s_BVALID = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state35_io) or ((tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and ((grp_update_outdata_fu_629_input01_V_blk_n_W and grp_update_outdata_fu_629_input01_V_blk_n_B and grp_update_outdata_fu_629_input01_V_blk_n_AW) = ap_const_logic_0)))) or ((tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((grp_update_indata_fu_616_input01_V_blk_n_R and grp_update_indata_fu_616_input01_V_blk_n_AR) = ap_const_logic_0) or ((grp_update_indata_fu_616_input00_V_blk_n_R and grp_update_indata_fu_616_input00_V_blk_n_AR) = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(grp_update_indata_fu_616_input00_V_blk_n_AR, grp_update_indata_fu_616_input00_V_blk_n_R, ap_enable_reg_pp0_iter4, tmp_8_reg_1992_pp0_iter4_reg, grp_update_indata_fu_616_input01_V_blk_n_AR, grp_update_indata_fu_616_input01_V_blk_n_R, grp_update_outdata_fu_629_input01_V_blk_n_AW, grp_update_outdata_fu_629_input01_V_blk_n_W, grp_update_outdata_fu_629_input01_V_blk_n_B, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter11_reg, ap_enable_reg_pp0_iter14, output0_s_BVALID, output1_s_BVALID, ap_block_state35_io, ap_predicate_op440_writeresp_state41, ap_predicate_op441_writeresp_state41, ap_predicate_op442_writeresp_state41, ap_predicate_op443_writeresp_state41)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (((ap_predicate_op443_writeresp_state41 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op442_writeresp_state41 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op441_writeresp_state41 = ap_const_boolean_1) and (output0_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op440_writeresp_state41 = ap_const_boolean_1) and (output0_s_BVALID = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state35_io) or ((tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and ((grp_update_outdata_fu_629_input01_V_blk_n_W and grp_update_outdata_fu_629_input01_V_blk_n_B and grp_update_outdata_fu_629_input01_V_blk_n_AW) = ap_const_logic_0)))) or ((tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((grp_update_indata_fu_616_input01_V_blk_n_R and grp_update_indata_fu_616_input01_V_blk_n_AR) = ap_const_logic_0) or ((grp_update_indata_fu_616_input00_V_blk_n_R and grp_update_indata_fu_616_input00_V_blk_n_AR) = ap_const_logic_0))));
    end process;


    ap_block_state10_assign_proc : process(grp_update_indata_fu_616_input00_V_blk_n_AR, grp_update_indata_fu_616_input00_V_blk_n_R, grp_update_indata_fu_616_input01_V_blk_n_AR, grp_update_indata_fu_616_input01_V_blk_n_R)
    begin
                ap_block_state10 <= (((grp_update_indata_fu_616_input01_V_blk_n_R and grp_update_indata_fu_616_input01_V_blk_n_AR) = ap_const_logic_0) or ((grp_update_indata_fu_616_input00_V_blk_n_R and grp_update_indata_fu_616_input00_V_blk_n_AR) = ap_const_logic_0));
    end process;

        ap_block_state12_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp0_stage0_iter1_assign_proc : process(grp_update_indata_fu_616_input00_V_blk_n_AR, grp_update_indata_fu_616_input00_V_blk_n_R, tmp_8_reg_1992, grp_update_indata_fu_616_input01_V_blk_n_AR, grp_update_indata_fu_616_input01_V_blk_n_R)
    begin
                ap_block_state14_pp0_stage0_iter1 <= ((tmp_8_reg_1992 = ap_const_lv1_1) and (((grp_update_indata_fu_616_input01_V_blk_n_R and grp_update_indata_fu_616_input01_V_blk_n_AR) = ap_const_logic_0) or ((grp_update_indata_fu_616_input00_V_blk_n_R and grp_update_indata_fu_616_input00_V_blk_n_AR) = ap_const_logic_0)));
    end process;

        ap_block_state15_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state21_pp0_stage1_iter4_assign_proc : process(grp_update_indata_fu_616_input00_V_blk_n_AR, grp_update_indata_fu_616_input00_V_blk_n_R, tmp_8_reg_1992_pp0_iter4_reg, grp_update_indata_fu_616_input01_V_blk_n_AR, grp_update_indata_fu_616_input01_V_blk_n_R)
    begin
                ap_block_state21_pp0_stage1_iter4 <= ((tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (((grp_update_indata_fu_616_input01_V_blk_n_R and grp_update_indata_fu_616_input01_V_blk_n_AR) = ap_const_logic_0) or ((grp_update_indata_fu_616_input00_V_blk_n_R and grp_update_indata_fu_616_input00_V_blk_n_AR) = ap_const_logic_0)));
    end process;

        ap_block_state22_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_assign_proc : process(grp_update_indata_fu_616_input00_V_blk_n_AR, grp_update_indata_fu_616_input00_V_blk_n_R, grp_update_indata_fu_616_input01_V_blk_n_AR, grp_update_indata_fu_616_input01_V_blk_n_R)
    begin
                ap_block_state3 <= (((grp_update_indata_fu_616_input01_V_blk_n_R and grp_update_indata_fu_616_input01_V_blk_n_AR) = ap_const_logic_0) or ((grp_update_indata_fu_616_input00_V_blk_n_R and grp_update_indata_fu_616_input00_V_blk_n_AR) = ap_const_logic_0));
    end process;

        ap_block_state30_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state34_io_assign_proc : process(ap_sig_ioackin_output0_s_AWREADY, ap_predicate_op374_writereq_state34, ap_sig_ioackin_output1_s_AWREADY, ap_predicate_op375_writereq_state34, ap_predicate_op376_writereq_state34)
    begin
                ap_block_state34_io <= (((ap_predicate_op376_writereq_state34 = ap_const_boolean_1) and (ap_sig_ioackin_output1_s_AWREADY = ap_const_logic_0)) or ((ap_predicate_op375_writereq_state34 = ap_const_boolean_1) and (ap_sig_ioackin_output1_s_AWREADY = ap_const_logic_0)) or ((ap_predicate_op374_writereq_state34 = ap_const_boolean_1) and (ap_sig_ioackin_output0_s_AWREADY = ap_const_logic_0)));
    end process;


    ap_block_state34_pp0_stage0_iter11_assign_proc : process(grp_update_outdata_fu_629_input01_V_blk_n_AW, grp_update_outdata_fu_629_input01_V_blk_n_W, grp_update_outdata_fu_629_input01_V_blk_n_B, tmp_8_reg_1992_pp0_iter10_reg)
    begin
                ap_block_state34_pp0_stage0_iter11 <= ((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and ((grp_update_outdata_fu_629_input01_V_blk_n_W and grp_update_outdata_fu_629_input01_V_blk_n_B and grp_update_outdata_fu_629_input01_V_blk_n_AW) = ap_const_logic_0));
    end process;


    ap_block_state35_io_assign_proc : process(ap_sig_ioackin_output0_s_AWREADY, ap_sig_ioackin_output1_s_AWREADY, ap_sig_ioackin_output0_s_WREADY, ap_sig_ioackin_output1_s_WREADY, ap_predicate_op393_write_state35, ap_predicate_op394_writereq_state35, ap_predicate_op395_writereq_state35, ap_predicate_op396_write_state35, ap_predicate_op397_write_state35, ap_predicate_op398_writereq_state35, ap_predicate_op399_writereq_state35)
    begin
                ap_block_state35_io <= (((ap_predicate_op397_write_state35 = ap_const_boolean_1) and (ap_sig_ioackin_output1_s_WREADY = ap_const_logic_0)) or ((ap_predicate_op396_write_state35 = ap_const_boolean_1) and (ap_sig_ioackin_output1_s_WREADY = ap_const_logic_0)) or ((ap_predicate_op393_write_state35 = ap_const_boolean_1) and (ap_sig_ioackin_output0_s_WREADY = ap_const_logic_0)) or ((ap_predicate_op399_writereq_state35 = ap_const_boolean_1) and (ap_sig_ioackin_output1_s_AWREADY = ap_const_logic_0)) or ((ap_predicate_op398_writereq_state35 = ap_const_boolean_1) and (ap_sig_ioackin_output1_s_AWREADY = ap_const_logic_0)) or ((ap_predicate_op395_writereq_state35 = ap_const_boolean_1) and (ap_sig_ioackin_output0_s_AWREADY = ap_const_logic_0)) or ((ap_predicate_op394_writereq_state35 = ap_const_boolean_1) and (ap_sig_ioackin_output0_s_AWREADY = ap_const_logic_0)));
    end process;


    ap_block_state35_pp0_stage1_iter11_assign_proc : process(grp_update_outdata_fu_629_input01_V_blk_n_AW, grp_update_outdata_fu_629_input01_V_blk_n_W, grp_update_outdata_fu_629_input01_V_blk_n_B, tmp_8_reg_1992_pp0_iter11_reg)
    begin
                ap_block_state35_pp0_stage1_iter11 <= ((tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and ((grp_update_outdata_fu_629_input01_V_blk_n_W and grp_update_outdata_fu_629_input01_V_blk_n_B and grp_update_outdata_fu_629_input01_V_blk_n_AW) = ap_const_logic_0));
    end process;


    ap_block_state36_io_assign_proc : process(ap_sig_ioackin_output0_s_WREADY, ap_predicate_op402_write_state36, ap_predicate_op403_write_state36, ap_sig_ioackin_output1_s_WREADY, ap_predicate_op406_write_state36, ap_predicate_op407_write_state36)
    begin
                ap_block_state36_io <= (((ap_predicate_op407_write_state36 = ap_const_boolean_1) and (ap_sig_ioackin_output1_s_WREADY = ap_const_logic_0)) or ((ap_predicate_op406_write_state36 = ap_const_boolean_1) and (ap_sig_ioackin_output1_s_WREADY = ap_const_logic_0)) or ((ap_predicate_op403_write_state36 = ap_const_boolean_1) and (ap_sig_ioackin_output0_s_WREADY = ap_const_logic_0)) or ((ap_predicate_op402_write_state36 = ap_const_boolean_1) and (ap_sig_ioackin_output0_s_WREADY = ap_const_logic_0)));
    end process;

        ap_block_state36_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state40_pp0_stage0_iter14_assign_proc : process(grp_update_outdata_fu_629_input01_V_blk_n_AW, grp_update_outdata_fu_629_input01_V_blk_n_W, grp_update_outdata_fu_629_input01_V_blk_n_B, tmp_8_reg_1992_pp0_iter13_reg, output0_s_BVALID, output1_s_BVALID, ap_predicate_op433_writeresp_state40, ap_predicate_op436_writeresp_state40, ap_predicate_op437_writeresp_state40)
    begin
                ap_block_state40_pp0_stage0_iter14 <= (((tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and ((grp_update_outdata_fu_629_input01_V_blk_n_W and grp_update_outdata_fu_629_input01_V_blk_n_B and grp_update_outdata_fu_629_input01_V_blk_n_AW) = ap_const_logic_0)) or ((ap_predicate_op437_writeresp_state40 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op436_writeresp_state40 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op433_writeresp_state40 = ap_const_boolean_1) and (output0_s_BVALID = ap_const_logic_0)));
    end process;


    ap_block_state41_pp0_stage1_iter14_assign_proc : process(output0_s_BVALID, output1_s_BVALID, ap_predicate_op440_writeresp_state41, ap_predicate_op441_writeresp_state41, ap_predicate_op442_writeresp_state41, ap_predicate_op443_writeresp_state41)
    begin
                ap_block_state41_pp0_stage1_iter14 <= (((ap_predicate_op443_writeresp_state41 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op442_writeresp_state41 = ap_const_boolean_1) and (output1_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op441_writeresp_state41 = ap_const_boolean_1) and (output0_s_BVALID = ap_const_logic_0)) or ((ap_predicate_op440_writeresp_state41 = ap_const_boolean_1) and (output0_s_BVALID = ap_const_logic_0)));
    end process;


    ap_block_state42_io_assign_proc : process(ap_sig_ioackin_output0_s_AWREADY, ap_sig_ioackin_output1_s_AWREADY)
    begin
                ap_block_state42_io <= ((ap_sig_ioackin_output1_s_AWREADY = ap_const_logic_0) or (ap_sig_ioackin_output0_s_AWREADY = ap_const_logic_0));
    end process;


    ap_block_state43_io_assign_proc : process(ap_sig_ioackin_output0_s_AWREADY, ap_sig_ioackin_output1_s_AWREADY, ap_sig_ioackin_output0_s_WREADY, ap_sig_ioackin_output1_s_WREADY)
    begin
                ap_block_state43_io <= ((ap_sig_ioackin_output1_s_WREADY = ap_const_logic_0) or (ap_sig_ioackin_output0_s_WREADY = ap_const_logic_0) or (ap_sig_ioackin_output1_s_AWREADY = ap_const_logic_0) or (ap_sig_ioackin_output0_s_AWREADY = ap_const_logic_0));
    end process;


    ap_block_state44_io_assign_proc : process(ap_sig_ioackin_output0_s_WREADY, ap_sig_ioackin_output1_s_WREADY)
    begin
                ap_block_state44_io <= ((ap_sig_ioackin_output1_s_WREADY = ap_const_logic_0) or (ap_sig_ioackin_output0_s_WREADY = ap_const_logic_0));
    end process;


    ap_block_state48_assign_proc : process(output0_s_BVALID, output1_s_BVALID)
    begin
                ap_block_state48 <= ((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0));
    end process;


    ap_block_state49_assign_proc : process(output0_s_BVALID, output1_s_BVALID)
    begin
                ap_block_state49 <= ((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0));
    end process;


    ap_condition_1411_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter10)
    begin
                ap_condition_1411 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_1417_assign_proc : process(tmp_8_reg_1992_pp0_iter10_reg, brmerge_reg_1996_pp0_iter10_reg, tmp_4_fu_1434_p2)
    begin
                ap_condition_1417 <= ((tmp_4_fu_1434_p2 = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter10_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1));
    end process;


    ap_condition_1429_assign_proc : process(tmp_8_reg_1992_pp0_iter10_reg, brmerge_reg_1996_pp0_iter10_reg, tmp_4_fu_1434_p2, tmp_5_fu_1482_p2)
    begin
                ap_condition_1429 <= (((tmp_5_fu_1482_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (tmp_4_fu_1434_p2 = ap_const_lv1_1)) or ((tmp_5_fu_1482_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (brmerge_reg_1996_pp0_iter10_reg = ap_const_lv1_1)));
    end process;


    ap_condition_1441_assign_proc : process(tmp_8_reg_1992_pp0_iter10_reg, tmp_14_reg_2000_pp0_iter10_reg, tmp_16_fu_1551_p2, or_cond1_fu_1536_p2)
    begin
                ap_condition_1441 <= (((tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_0) and (tmp_16_fu_1551_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)) or ((or_cond1_fu_1536_p2 = ap_const_lv1_0) and (tmp_16_fu_1551_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)));
    end process;


    ap_condition_1444_assign_proc : process(tmp_8_reg_1992_pp0_iter10_reg, tmp_14_reg_2000_pp0_iter10_reg, or_cond1_fu_1536_p2)
    begin
                ap_condition_1444 <= ((tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (or_cond1_fu_1536_p2 = ap_const_lv1_1));
    end process;


    ap_condition_2301_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter10)
    begin
                ap_condition_2301 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1));
    end process;


    ap_condition_2314_assign_proc : process(tmp_8_reg_1992_pp0_iter10_reg, brmerge_reg_1996_pp0_iter10_reg, tmp_4_fu_1434_p2, tmp_5_fu_1482_p2)
    begin
                ap_condition_2314 <= (((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (tmp_5_fu_1482_p2 = ap_const_lv1_1) and (tmp_4_fu_1434_p2 = ap_const_lv1_1)) or ((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (tmp_5_fu_1482_p2 = ap_const_lv1_1) and (brmerge_reg_1996_pp0_iter10_reg = ap_const_lv1_1)));
    end process;


    ap_condition_2336_assign_proc : process(tmp_8_reg_1992_pp0_iter10_reg, tmp_14_reg_2000_pp0_iter10_reg, tmp_16_fu_1551_p2, or_cond1_fu_1536_p2)
    begin
                ap_condition_2336 <= (((tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (tmp_16_fu_1551_p2 = ap_const_lv1_1)) or ((or_cond1_fu_1536_p2 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (tmp_16_fu_1551_p2 = ap_const_lv1_1)));
    end process;


    ap_condition_2404_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_8_reg_1992_pp0_iter10_reg, ap_enable_reg_pp0_iter10)
    begin
                ap_condition_2404 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1));
    end process;


    ap_condition_2455_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_predicate_op374_writereq_state34, ap_block_pp0_stage0_01001)
    begin
                ap_condition_2455 <= ((ap_predicate_op374_writereq_state34 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_2497_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter11, ap_predicate_op394_writereq_state35, ap_block_pp0_stage1_01001)
    begin
                ap_condition_2497 <= ((ap_predicate_op394_writereq_state35 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_2507_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter11, ap_predicate_op395_writereq_state35, ap_block_pp0_stage1_01001)
    begin
                ap_condition_2507 <= ((ap_predicate_op395_writereq_state35 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_3399_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_predicate_op224_call_state20)
    begin
                ap_condition_3399 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op224_call_state20 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_3402_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_predicate_op243_call_state21)
    begin
                ap_condition_3402 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_predicate_op243_call_state21 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_pp0_exit_iter10_state33_assign_proc : process(ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            ap_condition_pp0_exit_iter10_state33 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter10_state33 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state49, output0_s_BVALID, output1_s_BVALID)
    begin
        if ((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_466_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_8_reg_1992, i_reg_462, i_1_reg_2004)
    begin
        if (((tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_466_p4 <= i_1_reg_2004;
        else 
            ap_phi_mux_i_phi_fu_466_p4 <= i_reg_462;
        end if; 
    end process;


    ap_phi_mux_num_o_1_phi_fu_547_p4_assign_proc : process(tmp_1_fu_1372_p2, ap_phi_mux_num_o_phi_fu_478_p4, ap_phi_reg_pp0_iter10_num_o_1_reg_544, num_o_2_fu_1411_p5, ap_condition_2404)
    begin
        if ((ap_const_boolean_1 = ap_condition_2404)) then
            if ((tmp_1_fu_1372_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_num_o_1_phi_fu_547_p4 <= num_o_2_fu_1411_p5;
            elsif ((tmp_1_fu_1372_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_num_o_1_phi_fu_547_p4 <= ap_phi_mux_num_o_phi_fu_478_p4;
            else 
                ap_phi_mux_num_o_1_phi_fu_547_p4 <= ap_phi_reg_pp0_iter10_num_o_1_reg_544;
            end if;
        else 
            ap_phi_mux_num_o_1_phi_fu_547_p4 <= ap_phi_reg_pp0_iter10_num_o_1_reg_544;
        end if; 
    end process;


    ap_phi_mux_num_o_3_phi_fu_557_p6_assign_proc : process(ap_phi_mux_num_o_1_phi_fu_547_p4, num_o_4_fu_1459_p5, ap_phi_reg_pp0_iter10_num_o_3_reg_554, num_o_6_fu_1507_p5, ap_condition_1417, ap_condition_2314, ap_condition_1429, ap_condition_2301)
    begin
        if ((ap_const_boolean_1 = ap_condition_2301)) then
            if ((ap_const_boolean_1 = ap_condition_1429)) then 
                ap_phi_mux_num_o_3_phi_fu_557_p6 <= num_o_6_fu_1507_p5;
            elsif ((ap_const_boolean_1 = ap_condition_2314)) then 
                ap_phi_mux_num_o_3_phi_fu_557_p6 <= ap_phi_mux_num_o_1_phi_fu_547_p4;
            elsif ((ap_const_boolean_1 = ap_condition_1417)) then 
                ap_phi_mux_num_o_3_phi_fu_557_p6 <= num_o_4_fu_1459_p5;
            else 
                ap_phi_mux_num_o_3_phi_fu_557_p6 <= ap_phi_reg_pp0_iter10_num_o_3_reg_554;
            end if;
        else 
            ap_phi_mux_num_o_3_phi_fu_557_p6 <= ap_phi_reg_pp0_iter10_num_o_3_reg_554;
        end if; 
    end process;


    ap_phi_mux_num_o_phi_fu_478_p4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter11_reg, num_o_reg_474, num_o_7_reg_579)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_phi_mux_num_o_phi_fu_478_p4 <= num_o_7_reg_579;
        else 
            ap_phi_mux_num_o_phi_fu_478_p4 <= num_o_reg_474;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_V_m_r_1_reg_534 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_i_syn_ex_rr_1_reg_524 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_i_syn_in_rr_1_reg_514 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_num_o_5_reg_567 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_r_ref_r_1_reg_504 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_signal_1_18_reg_495 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_signal_1_1_reg_486 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter10_num_o_1_reg_544 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter10_num_o_3_reg_554 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter11_num_o_7_reg_579 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op224_call_state20_assign_proc : process(tmp_8_reg_1992_pp0_iter3_reg, tmp_41_fu_1273_p1)
    begin
                ap_predicate_op224_call_state20 <= ((tmp_41_fu_1273_p1 = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter3_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op243_call_state21_assign_proc : process(tmp_8_reg_1992_pp0_iter4_reg, tmp_41_reg_2009)
    begin
                ap_predicate_op243_call_state21 <= ((tmp_41_reg_2009 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op253_call_state22_assign_proc : process(tmp_8_reg_1992_pp0_iter4_reg, tmp_41_reg_2009)
    begin
                ap_predicate_op253_call_state22 <= ((tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (tmp_41_reg_2009 = ap_const_lv1_1));
    end process;


    ap_predicate_op374_writereq_state34_assign_proc : process(tmp_8_reg_1992_pp0_iter10_reg, tmp_1_reg_2143)
    begin
                ap_predicate_op374_writereq_state34 <= ((tmp_1_reg_2143 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op375_writereq_state34_assign_proc : process(tmp_8_reg_1992_pp0_iter10_reg, tmp_14_reg_2000_pp0_iter10_reg, or_cond1_reg_2178, tmp_16_reg_2182)
    begin
                ap_predicate_op375_writereq_state34 <= (((tmp_16_reg_2182 = ap_const_lv1_0) and (or_cond1_reg_2178 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)) or ((tmp_16_reg_2182 = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)));
    end process;


    ap_predicate_op376_writereq_state34_assign_proc : process(tmp_8_reg_1992_pp0_iter10_reg, tmp_14_reg_2000_pp0_iter10_reg, or_cond1_reg_2178)
    begin
                ap_predicate_op376_writereq_state34 <= ((or_cond1_reg_2178 = ap_const_lv1_1) and (tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op393_write_state35_assign_proc : process(tmp_8_reg_1992_pp0_iter11_reg, tmp_1_reg_2143)
    begin
                ap_predicate_op393_write_state35 <= ((tmp_1_reg_2143 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op394_writereq_state35_assign_proc : process(tmp_8_reg_1992_pp0_iter11_reg, brmerge_reg_1996_pp0_iter11_reg, tmp_4_reg_2158)
    begin
                ap_predicate_op394_writereq_state35 <= ((tmp_4_reg_2158 = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter11_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op395_writereq_state35_assign_proc : process(tmp_8_reg_1992_pp0_iter11_reg, brmerge_reg_1996_pp0_iter11_reg, tmp_4_reg_2158, tmp_5_reg_2168)
    begin
                ap_predicate_op395_writereq_state35 <= (((tmp_5_reg_2168 = ap_const_lv1_0) and (tmp_4_reg_2158 = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)) or ((tmp_5_reg_2168 = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)));
    end process;


    ap_predicate_op396_write_state35_assign_proc : process(tmp_8_reg_1992_pp0_iter11_reg, tmp_14_reg_2000_pp0_iter11_reg, or_cond1_reg_2178, tmp_16_reg_2182)
    begin
                ap_predicate_op396_write_state35 <= (((tmp_16_reg_2182 = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter11_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)) or ((tmp_16_reg_2182 = ap_const_lv1_0) and (or_cond1_reg_2178 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)));
    end process;


    ap_predicate_op397_write_state35_assign_proc : process(tmp_8_reg_1992_pp0_iter11_reg, tmp_14_reg_2000_pp0_iter11_reg, or_cond1_reg_2178)
    begin
                ap_predicate_op397_write_state35 <= ((or_cond1_reg_2178 = ap_const_lv1_1) and (tmp_14_reg_2000_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op398_writereq_state35_assign_proc : process(tmp_8_reg_1992_pp0_iter11_reg, tmp_14_reg_2000_pp0_iter11_reg, or_cond2_reg_2208)
    begin
                ap_predicate_op398_writereq_state35 <= ((or_cond2_reg_2208 = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op399_writereq_state35_assign_proc : process(tmp_8_reg_1992_pp0_iter11_reg, tmp_14_reg_2000_pp0_iter11_reg, or_cond2_reg_2208, tmp_22_reg_2212)
    begin
                ap_predicate_op399_writereq_state35 <= (((tmp_22_reg_2212 = ap_const_lv1_0) and (or_cond2_reg_2208 = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)) or ((tmp_22_reg_2212 = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter11_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)));
    end process;


    ap_predicate_op402_write_state36_assign_proc : process(tmp_8_reg_1992_pp0_iter11_reg, brmerge_reg_1996_pp0_iter11_reg, tmp_4_reg_2158_pp0_iter11_reg)
    begin
                ap_predicate_op402_write_state36 <= ((tmp_4_reg_2158_pp0_iter11_reg = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter11_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op403_write_state36_assign_proc : process(tmp_8_reg_1992_pp0_iter11_reg, brmerge_reg_1996_pp0_iter11_reg, tmp_4_reg_2158_pp0_iter11_reg, tmp_5_reg_2168_pp0_iter11_reg)
    begin
                ap_predicate_op403_write_state36 <= (((tmp_5_reg_2168_pp0_iter11_reg = ap_const_lv1_0) and (tmp_4_reg_2158_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)) or ((tmp_5_reg_2168_pp0_iter11_reg = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)));
    end process;


    ap_predicate_op406_write_state36_assign_proc : process(tmp_8_reg_1992_pp0_iter11_reg, tmp_14_reg_2000_pp0_iter11_reg, or_cond2_reg_2208_pp0_iter11_reg)
    begin
                ap_predicate_op406_write_state36 <= ((or_cond2_reg_2208_pp0_iter11_reg = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op407_write_state36_assign_proc : process(tmp_8_reg_1992_pp0_iter11_reg, tmp_14_reg_2000_pp0_iter11_reg, or_cond2_reg_2208_pp0_iter11_reg, tmp_22_reg_2212_pp0_iter11_reg)
    begin
                ap_predicate_op407_write_state36 <= (((tmp_22_reg_2212_pp0_iter11_reg = ap_const_lv1_0) and (or_cond2_reg_2208_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)) or ((tmp_22_reg_2212_pp0_iter11_reg = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter11_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)));
    end process;


    ap_predicate_op433_writeresp_state40_assign_proc : process(tmp_8_reg_1992_pp0_iter13_reg, tmp_1_reg_2143_pp0_iter13_reg)
    begin
                ap_predicate_op433_writeresp_state40 <= ((tmp_1_reg_2143_pp0_iter13_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op436_writeresp_state40_assign_proc : process(tmp_8_reg_1992_pp0_iter13_reg, tmp_14_reg_2000_pp0_iter13_reg, or_cond1_reg_2178_pp0_iter13_reg, tmp_16_reg_2182_pp0_iter13_reg)
    begin
                ap_predicate_op436_writeresp_state40 <= (((tmp_16_reg_2182_pp0_iter13_reg = ap_const_lv1_0) and (or_cond1_reg_2178_pp0_iter13_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1)) or ((tmp_16_reg_2182_pp0_iter13_reg = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter13_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1)));
    end process;


    ap_predicate_op437_writeresp_state40_assign_proc : process(tmp_8_reg_1992_pp0_iter13_reg, tmp_14_reg_2000_pp0_iter13_reg, or_cond1_reg_2178_pp0_iter13_reg)
    begin
                ap_predicate_op437_writeresp_state40 <= ((or_cond1_reg_2178_pp0_iter13_reg = ap_const_lv1_1) and (tmp_14_reg_2000_pp0_iter13_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op440_writeresp_state41_assign_proc : process(tmp_8_reg_1992_pp0_iter14_reg, brmerge_reg_1996_pp0_iter14_reg, tmp_4_reg_2158_pp0_iter13_reg)
    begin
                ap_predicate_op440_writeresp_state41 <= ((tmp_4_reg_2158_pp0_iter13_reg = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter14_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter14_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op441_writeresp_state41_assign_proc : process(tmp_8_reg_1992_pp0_iter14_reg, brmerge_reg_1996_pp0_iter14_reg, tmp_4_reg_2158_pp0_iter13_reg, tmp_5_reg_2168_pp0_iter13_reg)
    begin
                ap_predicate_op441_writeresp_state41 <= (((tmp_5_reg_2168_pp0_iter13_reg = ap_const_lv1_0) and (tmp_4_reg_2158_pp0_iter13_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter14_reg = ap_const_lv1_1)) or ((tmp_5_reg_2168_pp0_iter13_reg = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter14_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter14_reg = ap_const_lv1_1)));
    end process;


    ap_predicate_op442_writeresp_state41_assign_proc : process(tmp_8_reg_1992_pp0_iter14_reg, tmp_14_reg_2000_pp0_iter14_reg, or_cond2_reg_2208_pp0_iter13_reg)
    begin
                ap_predicate_op442_writeresp_state41 <= ((or_cond2_reg_2208_pp0_iter13_reg = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter14_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter14_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op443_writeresp_state41_assign_proc : process(tmp_8_reg_1992_pp0_iter14_reg, tmp_14_reg_2000_pp0_iter14_reg, or_cond2_reg_2208_pp0_iter13_reg, tmp_22_reg_2212_pp0_iter13_reg)
    begin
                ap_predicate_op443_writeresp_state41 <= (((tmp_22_reg_2212_pp0_iter13_reg = ap_const_lv1_0) and (or_cond2_reg_2208_pp0_iter13_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter14_reg = ap_const_lv1_1)) or ((tmp_22_reg_2212_pp0_iter13_reg = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter14_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter14_reg = ap_const_lv1_1)));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state49, output0_s_BVALID, output1_s_BVALID)
    begin
        if ((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_output0_s_AWREADY_assign_proc : process(output0_s_AWREADY, ap_reg_ioackin_output0_s_AWREADY)
    begin
        if ((ap_reg_ioackin_output0_s_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_output0_s_AWREADY <= output0_s_AWREADY;
        else 
            ap_sig_ioackin_output0_s_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_output0_s_WREADY_assign_proc : process(output0_s_WREADY, ap_reg_ioackin_output0_s_WREADY)
    begin
        if ((ap_reg_ioackin_output0_s_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_output0_s_WREADY <= output0_s_WREADY;
        else 
            ap_sig_ioackin_output0_s_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_output1_s_AWREADY_assign_proc : process(output1_s_AWREADY, ap_reg_ioackin_output1_s_AWREADY)
    begin
        if ((ap_reg_ioackin_output1_s_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_output1_s_AWREADY <= output1_s_AWREADY;
        else 
            ap_sig_ioackin_output1_s_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_output1_s_WREADY_assign_proc : process(output1_s_WREADY, ap_reg_ioackin_output1_s_WREADY)
    begin
        if ((ap_reg_ioackin_output1_s_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_output1_s_WREADY <= output1_s_WREADY;
        else 
            ap_sig_ioackin_output1_s_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_stable_para_ARREADY_assign_proc : process(stable_para_ARREADY, ap_reg_ioackin_stable_para_ARREADY)
    begin
        if ((ap_reg_ioackin_stable_para_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_stable_para_ARREADY <= stable_para_ARREADY;
        else 
            ap_sig_ioackin_stable_para_ARREADY <= ap_const_logic_1;
        end if; 
    end process;

    brmerge_fu_1257_p2 <= (p_not_fu_1252_p2 or icmp_reg_1878);

    grp_execute_fu_594_I_e_read_assign_proc : process(ap_enable_reg_pp0_iter4, I_e_1_fu_186, I_e_2_fu_214, ap_condition_3399, ap_condition_3402)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_3402)) then 
                grp_execute_fu_594_I_e_read <= I_e_1_fu_186;
            elsif ((ap_const_boolean_1 = ap_condition_3399)) then 
                grp_execute_fu_594_I_e_read <= I_e_2_fu_214;
            else 
                grp_execute_fu_594_I_e_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_execute_fu_594_I_e_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_execute_fu_594_V_m_read_assign_proc : process(ap_enable_reg_pp0_iter4, V_m_1_fu_202, V_m_2_fu_230, ap_condition_3399, ap_condition_3402)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_3402)) then 
                grp_execute_fu_594_V_m_read <= V_m_1_fu_202;
            elsif ((ap_const_boolean_1 = ap_condition_3399)) then 
                grp_execute_fu_594_V_m_read <= V_m_2_fu_230;
            else 
                grp_execute_fu_594_V_m_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_execute_fu_594_V_m_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_execute_fu_594_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_execute_fu_594_ap_ce <= ap_const_logic_1;
        else 
            grp_execute_fu_594_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_execute_fu_594_i_assign_proc : process(ap_enable_reg_pp0_iter4, i_reg_462_pp0_iter3_reg, i_reg_462_pp0_iter4_reg, ap_condition_3399, ap_condition_3402)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_3402)) then 
                grp_execute_fu_594_i <= i_reg_462_pp0_iter4_reg;
            elsif ((ap_const_boolean_1 = ap_condition_3399)) then 
                grp_execute_fu_594_i <= i_reg_462_pp0_iter3_reg;
            else 
                grp_execute_fu_594_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_execute_fu_594_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_execute_fu_594_i_syn_ex_read_assign_proc : process(ap_enable_reg_pp0_iter4, i_syn_ex_1_fu_190, i_syn_ex_2_fu_218, ap_condition_3399, ap_condition_3402)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_3402)) then 
                grp_execute_fu_594_i_syn_ex_read <= i_syn_ex_1_fu_190;
            elsif ((ap_const_boolean_1 = ap_condition_3399)) then 
                grp_execute_fu_594_i_syn_ex_read <= i_syn_ex_2_fu_218;
            else 
                grp_execute_fu_594_i_syn_ex_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_execute_fu_594_i_syn_ex_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_execute_fu_594_i_syn_in_read_assign_proc : process(ap_enable_reg_pp0_iter4, i_syn_in_1_fu_194, i_syn_in_2_fu_222, ap_condition_3399, ap_condition_3402)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_3402)) then 
                grp_execute_fu_594_i_syn_in_read <= i_syn_in_1_fu_194;
            elsif ((ap_const_boolean_1 = ap_condition_3399)) then 
                grp_execute_fu_594_i_syn_in_read <= i_syn_in_2_fu_222;
            else 
                grp_execute_fu_594_i_syn_in_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_execute_fu_594_i_syn_in_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_execute_fu_594_r_ref_read_assign_proc : process(ap_enable_reg_pp0_iter4, r_ref_1_fu_198, r_ref_2_fu_226, ap_condition_3399, ap_condition_3402)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_3402)) then 
                grp_execute_fu_594_r_ref_read <= r_ref_1_fu_198;
            elsif ((ap_const_boolean_1 = ap_condition_3399)) then 
                grp_execute_fu_594_r_ref_read <= r_ref_2_fu_226;
            else 
                grp_execute_fu_594_r_ref_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_execute_fu_594_r_ref_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_execute_fu_594_weighted_spikes_ex_s_assign_proc : process(ap_enable_reg_pp0_iter4, weighted_spikes_ex_1_fu_178, weighted_spikes_ex_2_fu_206, ap_condition_3399, ap_condition_3402)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_3402)) then 
                grp_execute_fu_594_weighted_spikes_ex_s <= weighted_spikes_ex_1_fu_178;
            elsif ((ap_const_boolean_1 = ap_condition_3399)) then 
                grp_execute_fu_594_weighted_spikes_ex_s <= weighted_spikes_ex_2_fu_206;
            else 
                grp_execute_fu_594_weighted_spikes_ex_s <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_execute_fu_594_weighted_spikes_ex_s <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_execute_fu_594_weighted_spikes_in_s_assign_proc : process(ap_enable_reg_pp0_iter4, weighted_spikes_in_1_fu_182, weighted_spikes_in_2_fu_210, ap_condition_3399, ap_condition_3402)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_3402)) then 
                grp_execute_fu_594_weighted_spikes_in_s <= weighted_spikes_in_1_fu_182;
            elsif ((ap_const_boolean_1 = ap_condition_3399)) then 
                grp_execute_fu_594_weighted_spikes_in_s <= weighted_spikes_in_2_fu_210;
            else 
                grp_execute_fu_594_weighted_spikes_in_s <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_execute_fu_594_weighted_spikes_in_s <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_708_p4 <= ap_phi_mux_num_o_1_phi_fu_547_p4(63 downto 32);
    grp_fu_718_p2 <= std_logic_vector(signed(grp_fu_708_p4) + signed(ap_const_lv32_1));
    grp_fu_734_p4 <= ap_phi_mux_num_o_3_phi_fu_557_p6(95 downto 64);
    grp_fu_744_p2 <= std_logic_vector(signed(grp_fu_734_p4) + signed(ap_const_lv32_1));
    grp_fu_750_p4 <= ap_phi_reg_pp0_iter11_num_o_5_reg_567(127 downto 96);

    grp_update_indata_fu_616_ap_ce_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_pp0_stage0, tmp_8_reg_1992, ap_CS_fsm_pp0_stage1, tmp_8_reg_1992_pp0_iter4_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_state2, ap_sig_ioackin_stable_para_ARREADY, tmp_8_reg_1992_pp0_iter1_reg, tmp_8_reg_1992_pp0_iter2_reg, tmp_8_reg_1992_pp0_iter3_reg, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and ((tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) or (tmp_8_reg_1992_pp0_iter3_reg = ap_const_lv1_1) or (tmp_8_reg_1992_pp0_iter2_reg = ap_const_lv1_1) or (tmp_8_reg_1992_pp0_iter1_reg = ap_const_lv1_1) or (tmp_8_reg_1992 = ap_const_lv1_1))) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and ((tmp_8_reg_1992_pp0_iter3_reg = ap_const_lv1_1) or (tmp_8_reg_1992_pp0_iter2_reg = ap_const_lv1_1) or (tmp_8_reg_1992_pp0_iter1_reg = ap_const_lv1_1) or (tmp_8_reg_1992 = ap_const_lv1_1))) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_sig_ioackin_stable_para_ARREADY = ap_const_logic_1)))) then 
            grp_update_indata_fu_616_ap_ce <= ap_const_logic_1;
        else 
            grp_update_indata_fu_616_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_update_indata_fu_616_ap_start <= grp_update_indata_fu_616_ap_start_reg;

    grp_update_indata_fu_616_i_assign_proc : process(tmp_8_reg_1992, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, i_reg_462, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_update_indata_fu_616_i <= i_reg_462;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_update_indata_fu_616_i <= ap_const_lv30_0;
        else 
            grp_update_indata_fu_616_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_update_indata_fu_616_input00_V_offset_assign_proc : process(input00_V_0_data_reg, tmp_8_reg_1992, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_state2, input00_V3_reg_1852, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_update_indata_fu_616_input00_V_offset <= input00_V3_reg_1852;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_update_indata_fu_616_input00_V_offset <= input00_V_0_data_reg(31 downto 7);
        else 
            grp_update_indata_fu_616_input00_V_offset <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_update_indata_fu_616_input01_V_offset_assign_proc : process(input01_V_0_data_reg, tmp_8_reg_1992, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_state2, input01_V5_reg_1846, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_update_indata_fu_616_input01_V_offset <= input01_V5_reg_1846;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_update_indata_fu_616_input01_V_offset <= input01_V_0_data_reg(31 downto 7);
        else 
            grp_update_indata_fu_616_input01_V_offset <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_update_outdata_fu_629_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_8_reg_1992_pp0_iter10_reg, tmp_8_reg_1992_pp0_iter11_reg, tmp_8_reg_1992_pp0_iter13_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, tmp_8_reg_1992_pp0_iter12_reg)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and ((tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) or (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) or (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) or (tmp_8_reg_1992_pp0_iter12_reg = ap_const_lv1_1))) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and ((tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) or (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) or (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) or (tmp_8_reg_1992_pp0_iter12_reg = ap_const_lv1_1))))) then 
            grp_update_outdata_fu_629_ap_ce <= ap_const_logic_1;
        else 
            grp_update_outdata_fu_629_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_update_outdata_fu_629_ap_start <= grp_update_outdata_fu_629_ap_start_reg;
    i_1_fu_1267_p2 <= std_logic_vector(unsigned(i_reg_462) + unsigned(ap_const_lv30_1));
    i_cast_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_phi_fu_466_p4),31));
    icmp_fu_1037_p2 <= "0" when (tmp_29_fu_1027_p4 = ap_const_lv4_0) else "1";

    input00_ARVALID_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_8_reg_1992, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1, tmp_8_reg_1992_pp0_iter4_reg, ap_CS_fsm_state2, tmp_8_reg_1992_pp0_iter1_reg, tmp_8_reg_1992_pp0_iter2_reg, tmp_8_reg_1992_pp0_iter3_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, grp_update_indata_fu_616_m_axi_input01_V_ARVALID, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_8_reg_1992_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((tmp_8_reg_1992_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input00_ARVALID <= grp_update_indata_fu_616_m_axi_input01_V_ARVALID;
        else 
            input00_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    input00_AWVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter10_reg, tmp_8_reg_1992_pp0_iter11_reg, ap_enable_reg_pp0_iter14, tmp_8_reg_1992_pp0_iter13_reg, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter10, tmp_8_reg_1992_pp0_iter12_reg, ap_enable_reg_pp0_iter13, grp_update_outdata_fu_629_m_axi_input01_V_AWVALID)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter12_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)))) then 
            input00_AWVALID <= grp_update_outdata_fu_629_m_axi_input01_V_AWVALID;
        else 
            input00_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    input00_BREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter10_reg, tmp_8_reg_1992_pp0_iter11_reg, ap_enable_reg_pp0_iter14, tmp_8_reg_1992_pp0_iter13_reg, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter10, tmp_8_reg_1992_pp0_iter12_reg, ap_enable_reg_pp0_iter13, grp_update_outdata_fu_629_m_axi_input01_V_BREADY)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter12_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)))) then 
            input00_BREADY <= grp_update_outdata_fu_629_m_axi_input01_V_BREADY;
        else 
            input00_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    input00_RREADY_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_8_reg_1992, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1, tmp_8_reg_1992_pp0_iter4_reg, ap_CS_fsm_state2, tmp_8_reg_1992_pp0_iter1_reg, tmp_8_reg_1992_pp0_iter2_reg, tmp_8_reg_1992_pp0_iter3_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, grp_update_indata_fu_616_m_axi_input01_V_RREADY, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_8_reg_1992_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((tmp_8_reg_1992_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input00_RREADY <= grp_update_indata_fu_616_m_axi_input01_V_RREADY;
        else 
            input00_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    input00_V_0_ack_out_assign_proc : process(ap_CS_fsm_state49, output0_s_BVALID, output1_s_BVALID)
    begin
        if ((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            input00_V_0_ack_out <= ap_const_logic_1;
        else 
            input00_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    input00_WVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter10_reg, tmp_8_reg_1992_pp0_iter11_reg, ap_enable_reg_pp0_iter14, tmp_8_reg_1992_pp0_iter13_reg, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter10, tmp_8_reg_1992_pp0_iter12_reg, ap_enable_reg_pp0_iter13, grp_update_outdata_fu_629_m_axi_input01_V_WVALID)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter12_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)))) then 
            input00_WVALID <= grp_update_outdata_fu_629_m_axi_input01_V_WVALID;
        else 
            input00_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    input00_blk_n_AR_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_8_reg_1992, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1, tmp_8_reg_1992_pp0_iter4_reg, grp_update_indata_fu_616_input01_V_blk_n_AR)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input00_blk_n_AR <= grp_update_indata_fu_616_input01_V_blk_n_AR;
        else 
            input00_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    input00_blk_n_AW_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, grp_update_outdata_fu_629_input01_V_blk_n_AW, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter10_reg, tmp_8_reg_1992_pp0_iter11_reg, ap_enable_reg_pp0_iter14, tmp_8_reg_1992_pp0_iter13_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input00_blk_n_AW <= grp_update_outdata_fu_629_input01_V_blk_n_AW;
        else 
            input00_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    input00_blk_n_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, grp_update_outdata_fu_629_input01_V_blk_n_B, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter10_reg, tmp_8_reg_1992_pp0_iter11_reg, ap_enable_reg_pp0_iter14, tmp_8_reg_1992_pp0_iter13_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input00_blk_n_B <= grp_update_outdata_fu_629_input01_V_blk_n_B;
        else 
            input00_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    input00_blk_n_R_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_8_reg_1992, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1, tmp_8_reg_1992_pp0_iter4_reg, grp_update_indata_fu_616_input01_V_blk_n_R)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input00_blk_n_R <= grp_update_indata_fu_616_input01_V_blk_n_R;
        else 
            input00_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    input00_blk_n_W_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, grp_update_outdata_fu_629_input01_V_blk_n_W, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter10_reg, tmp_8_reg_1992_pp0_iter11_reg, ap_enable_reg_pp0_iter14, tmp_8_reg_1992_pp0_iter13_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input00_blk_n_W <= grp_update_outdata_fu_629_input01_V_blk_n_W;
        else 
            input00_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    input01_ARVALID_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_8_reg_1992, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1, tmp_8_reg_1992_pp0_iter4_reg, ap_CS_fsm_state2, tmp_8_reg_1992_pp0_iter1_reg, tmp_8_reg_1992_pp0_iter2_reg, tmp_8_reg_1992_pp0_iter3_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, grp_update_indata_fu_616_m_axi_input00_V_ARVALID, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_8_reg_1992_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((tmp_8_reg_1992_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input01_ARVALID <= grp_update_indata_fu_616_m_axi_input00_V_ARVALID;
        else 
            input01_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    input01_RREADY_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_8_reg_1992, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1, tmp_8_reg_1992_pp0_iter4_reg, ap_CS_fsm_state2, tmp_8_reg_1992_pp0_iter1_reg, tmp_8_reg_1992_pp0_iter2_reg, tmp_8_reg_1992_pp0_iter3_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, grp_update_indata_fu_616_m_axi_input00_V_RREADY, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_8_reg_1992_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_reg_1992_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((tmp_8_reg_1992_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input01_RREADY <= grp_update_indata_fu_616_m_axi_input00_V_RREADY;
        else 
            input01_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    input01_V_0_ack_out_assign_proc : process(ap_CS_fsm_state49, output0_s_BVALID, output1_s_BVALID)
    begin
        if ((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            input01_V_0_ack_out <= ap_const_logic_1;
        else 
            input01_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    input01_blk_n_AR_assign_proc : process(grp_update_indata_fu_616_input00_V_blk_n_AR, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_8_reg_1992, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1, tmp_8_reg_1992_pp0_iter4_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input01_blk_n_AR <= grp_update_indata_fu_616_input00_V_blk_n_AR;
        else 
            input01_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    input01_blk_n_R_assign_proc : process(grp_update_indata_fu_616_input00_V_blk_n_R, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_8_reg_1992, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1, tmp_8_reg_1992_pp0_iter4_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_8_reg_1992 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input01_blk_n_R <= grp_update_indata_fu_616_input00_V_blk_n_R;
        else 
            input01_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    num_0_ack_out_assign_proc : process(ap_CS_fsm_state49, output0_s_BVALID, output1_s_BVALID)
    begin
        if ((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            num_0_ack_out <= ap_const_logic_1;
        else 
            num_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    num_o_10_fu_1691_p5 <= (ap_phi_reg_pp0_iter11_num_o_5_reg_567(255 downto 128) & tmp_24_fu_1685_p2 & ap_phi_reg_pp0_iter11_num_o_5_reg_567(95 downto 0));
    num_o_2_fu_1411_p5 <= (ap_phi_mux_num_o_phi_fu_478_p4(255 downto 32) & tmp_3_fu_1405_p2);
    num_o_4_fu_1459_p5 <= (ap_phi_mux_num_o_1_phi_fu_547_p4(255 downto 64) & grp_fu_718_p2 & ap_phi_mux_num_o_1_phi_fu_547_p4(31 downto 0));
    num_o_6_fu_1507_p5 <= (ap_phi_mux_num_o_1_phi_fu_547_p4(255 downto 64) & grp_fu_718_p2 & ap_phi_mux_num_o_1_phi_fu_547_p4(31 downto 0));
    num_o_8_fu_1607_p5 <= (ap_phi_mux_num_o_3_phi_fu_557_p6(255 downto 96) & grp_fu_744_p2 & ap_phi_mux_num_o_3_phi_fu_557_p6(63 downto 0));
    num_o_9_fu_1576_p5 <= (ap_phi_mux_num_o_3_phi_fu_557_p6(255 downto 96) & grp_fu_744_p2 & ap_phi_mux_num_o_3_phi_fu_557_p6(63 downto 0));
    or_cond1_fu_1536_p2 <= (tmp_7_reg_1873 and tmp_15_fu_1530_p2);
    or_cond2_fu_1635_p2 <= (tmp_reg_1867 or tmp_21_fu_1629_p2);
        output0_8_sum_cast_fu_1395_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output0_8_sum_fu_1390_p2),64));

    output0_8_sum_fu_1390_p2 <= std_logic_vector(unsigned(tmp_27_cast_reg_1925) + unsigned(tmp_2_cast_fu_1386_p1));

    output0_offset_0_ack_out_assign_proc : process(ap_CS_fsm_state49, output0_s_BVALID, output1_s_BVALID)
    begin
        if ((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            output0_offset_0_ack_out <= ap_const_logic_1;
        else 
            output0_offset_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    output0_s_AWADDR_assign_proc : process(ap_CS_fsm_state43, ap_CS_fsm_state42, output0_addr_reg_1919, output0_addr_1_reg_1930, output0_addr_2_reg_2152, output0_addr_3_reg_2162, output0_addr_4_reg_2172, ap_reg_ioackin_output0_s_AWREADY, ap_condition_2455, ap_condition_2497, ap_condition_2507)
    begin
        if ((ap_reg_ioackin_output0_s_AWREADY = ap_const_logic_0)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
                output0_s_AWADDR <= output0_addr_reg_1919;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                output0_s_AWADDR <= output0_addr_1_reg_1930;
            elsif ((ap_const_boolean_1 = ap_condition_2507)) then 
                output0_s_AWADDR <= output0_addr_4_reg_2172;
            elsif ((ap_const_boolean_1 = ap_condition_2497)) then 
                output0_s_AWADDR <= output0_addr_3_reg_2162;
            elsif ((ap_const_boolean_1 = ap_condition_2455)) then 
                output0_s_AWADDR <= output0_addr_2_reg_2152;
            else 
                output0_s_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output0_s_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output0_s_AWVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter11, ap_CS_fsm_state43, ap_CS_fsm_state42, ap_predicate_op374_writereq_state34, ap_predicate_op394_writereq_state35, ap_predicate_op395_writereq_state35, ap_reg_ioackin_output0_s_AWREADY, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001)
    begin
        if ((((ap_reg_ioackin_output0_s_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((ap_reg_ioackin_output0_s_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((ap_predicate_op395_writereq_state35 = ap_const_boolean_1) and (ap_reg_ioackin_output0_s_AWREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_predicate_op394_writereq_state35 = ap_const_boolean_1) and (ap_reg_ioackin_output0_s_AWREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_predicate_op374_writereq_state34 = ap_const_boolean_1) and (ap_reg_ioackin_output0_s_AWREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output0_s_AWVALID <= ap_const_logic_1;
        else 
            output0_s_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    output0_s_BREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter14, ap_CS_fsm_state49, ap_CS_fsm_state48, output0_s_BVALID, output1_s_BVALID, ap_predicate_op433_writeresp_state40, ap_block_pp0_stage0_11001, ap_predicate_op440_writeresp_state41, ap_predicate_op441_writeresp_state41, ap_block_pp0_stage1_11001)
    begin
        if (((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state48)) or (not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state49)) or ((ap_predicate_op441_writeresp_state41 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_predicate_op440_writeresp_state41 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_predicate_op433_writeresp_state40 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            output0_s_BREADY <= ap_const_logic_1;
        else 
            output0_s_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    output0_s_WDATA_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter11, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_enable_reg_pp0_iter12, ap_predicate_op402_write_state36, ap_predicate_op403_write_state36, ap_predicate_op393_write_state35, reg_788_pp0_iter11_reg, tmp_49_reg_2147, tmp_47_reg_2232, tmp_44_reg_2237, ap_block_pp0_stage0_01001, ap_reg_ioackin_output0_s_WREADY, ap_block_pp0_stage1_01001)
    begin
        if (((ap_reg_ioackin_output0_s_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            output0_s_WDATA <= tmp_44_reg_2237;
        elsif (((ap_reg_ioackin_output0_s_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            output0_s_WDATA <= tmp_47_reg_2232;
        elsif ((((ap_predicate_op403_write_state36 = ap_const_boolean_1) and (ap_reg_ioackin_output0_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_predicate_op402_write_state36 = ap_const_boolean_1) and (ap_reg_ioackin_output0_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output0_s_WDATA <= reg_788_pp0_iter11_reg;
        elsif (((ap_predicate_op393_write_state35 = ap_const_boolean_1) and (ap_reg_ioackin_output0_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            output0_s_WDATA <= tmp_49_reg_2147;
        else 
            output0_s_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output0_s_WVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter11, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_enable_reg_pp0_iter12, ap_predicate_op402_write_state36, ap_predicate_op403_write_state36, ap_predicate_op393_write_state35, ap_block_pp0_stage0_01001, ap_reg_ioackin_output0_s_WREADY, ap_block_pp0_stage1_01001)
    begin
        if ((((ap_reg_ioackin_output0_s_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((ap_reg_ioackin_output0_s_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((ap_predicate_op393_write_state35 = ap_const_boolean_1) and (ap_reg_ioackin_output0_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_predicate_op403_write_state36 = ap_const_boolean_1) and (ap_reg_ioackin_output0_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_predicate_op402_write_state36 = ap_const_boolean_1) and (ap_reg_ioackin_output0_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output0_s_WVALID <= ap_const_logic_1;
        else 
            output0_s_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    output0_s_blk_n_AW_assign_proc : process(m_axi_output0_s_AWREADY, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter10_reg, tmp_8_reg_1992_pp0_iter11_reg, ap_CS_fsm_state43, ap_CS_fsm_state42, tmp_1_reg_2143, brmerge_reg_1996_pp0_iter11_reg, tmp_4_reg_2158, tmp_5_reg_2168)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state43) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((tmp_5_reg_2168 = ap_const_lv1_0) and (tmp_4_reg_2158 = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)) or ((tmp_5_reg_2168 = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)))) or ((tmp_4_reg_2158 = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_1_reg_2143 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output0_s_blk_n_AW <= m_axi_output0_s_AWREADY;
        else 
            output0_s_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    output0_s_blk_n_B_assign_proc : process(m_axi_output0_s_BVALID, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter14, tmp_8_reg_1992_pp0_iter13_reg, ap_CS_fsm_state49, ap_CS_fsm_state48, tmp_1_reg_2143_pp0_iter13_reg, tmp_8_reg_1992_pp0_iter14_reg, brmerge_reg_1996_pp0_iter14_reg, tmp_4_reg_2158_pp0_iter13_reg, tmp_5_reg_2168_pp0_iter13_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state49) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((tmp_5_reg_2168_pp0_iter13_reg = ap_const_lv1_0) and (tmp_4_reg_2158_pp0_iter13_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter14_reg = ap_const_lv1_1)) or ((tmp_5_reg_2168_pp0_iter13_reg = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter14_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter14_reg = ap_const_lv1_1)))) or ((tmp_4_reg_2158_pp0_iter13_reg = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter14_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_1_reg_2143_pp0_iter13_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output0_s_blk_n_B <= m_axi_output0_s_BVALID;
        else 
            output0_s_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    output0_s_blk_n_W_assign_proc : process(m_axi_output0_s_WREADY, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter11_reg, ap_CS_fsm_state43, ap_CS_fsm_state44, tmp_1_reg_2143, brmerge_reg_1996_pp0_iter11_reg, ap_enable_reg_pp0_iter12, tmp_4_reg_2158_pp0_iter11_reg, tmp_5_reg_2168_pp0_iter11_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or ((tmp_1_reg_2143 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((tmp_5_reg_2168_pp0_iter11_reg = ap_const_lv1_0) and (tmp_4_reg_2158_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)) or ((tmp_5_reg_2168_pp0_iter11_reg = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)))) or ((tmp_4_reg_2158_pp0_iter11_reg = ap_const_lv1_0) and (brmerge_reg_1996_pp0_iter11_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output0_s_blk_n_W <= m_axi_output0_s_WREADY;
        else 
            output0_s_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

        output1_10_sum1_cast_fu_1497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output1_10_sum1_fu_1492_p2),64));

    output1_10_sum1_fu_1492_p2 <= std_logic_vector(signed(tmp_12_cast_fu_1488_p1) + signed(tmp_26_cast_reg_1913));
        output1_10_sum_cast_fu_1449_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output1_10_sum_fu_1444_p2),64));

    output1_10_sum_fu_1444_p2 <= std_logic_vector(signed(tmp_10_cast_fu_1440_p1) + signed(tmp_26_cast_reg_1913));

    output1_offset_0_ack_out_assign_proc : process(ap_CS_fsm_state49, output0_s_BVALID, output1_s_BVALID)
    begin
        if ((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            output1_offset_0_ack_out <= ap_const_logic_1;
        else 
            output1_offset_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    output1_s_AWADDR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter11, ap_CS_fsm_state43, ap_CS_fsm_state42, ap_predicate_op375_writereq_state34, ap_predicate_op376_writereq_state34, ap_predicate_op398_writereq_state35, ap_predicate_op399_writereq_state35, output1_addr_reg_1894, output1_addr_1_reg_1907, output1_addr_3_reg_2186, output1_addr_2_reg_2197, output1_addr_4_reg_2226, ap_block_pp0_stage0_01001, ap_reg_ioackin_output1_s_AWREADY, ap_block_pp0_stage1_01001)
    begin
        if (((ap_reg_ioackin_output1_s_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            output1_s_AWADDR <= output1_addr_1_reg_1907;
        elsif (((ap_predicate_op399_writereq_state35 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_AWREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            output1_s_AWADDR <= output1_addr_4_reg_2226;
        elsif ((((ap_reg_ioackin_output1_s_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((ap_predicate_op398_writereq_state35 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_AWREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            output1_s_AWADDR <= output1_addr_reg_1894;
        elsif (((ap_predicate_op376_writereq_state34 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_AWREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            output1_s_AWADDR <= output1_addr_2_reg_2197;
        elsif (((ap_predicate_op375_writereq_state34 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_AWREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            output1_s_AWADDR <= output1_addr_3_reg_2186;
        else 
            output1_s_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output1_s_AWVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter11, ap_CS_fsm_state43, ap_CS_fsm_state42, ap_predicate_op375_writereq_state34, ap_predicate_op376_writereq_state34, ap_predicate_op398_writereq_state35, ap_predicate_op399_writereq_state35, ap_block_pp0_stage0_01001, ap_reg_ioackin_output1_s_AWREADY, ap_block_pp0_stage1_01001)
    begin
        if ((((ap_reg_ioackin_output1_s_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((ap_reg_ioackin_output1_s_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((ap_predicate_op399_writereq_state35 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_AWREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_predicate_op398_writereq_state35 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_AWREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_predicate_op376_writereq_state34 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_AWREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_predicate_op375_writereq_state34 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_AWREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output1_s_AWVALID <= ap_const_logic_1;
        else 
            output1_s_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    output1_s_BREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter14, ap_CS_fsm_state49, ap_CS_fsm_state48, output0_s_BVALID, output1_s_BVALID, ap_predicate_op436_writeresp_state40, ap_predicate_op437_writeresp_state40, ap_block_pp0_stage0_11001, ap_predicate_op442_writeresp_state41, ap_predicate_op443_writeresp_state41, ap_block_pp0_stage1_11001)
    begin
        if (((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state48)) or (not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state49)) or ((ap_predicate_op443_writeresp_state41 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_predicate_op442_writeresp_state41 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_predicate_op437_writeresp_state40 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op436_writeresp_state40 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            output1_s_BREADY <= ap_const_logic_1;
        else 
            output1_s_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    output1_s_WDATA_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter11, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_enable_reg_pp0_iter12, ap_predicate_op406_write_state36, ap_predicate_op407_write_state36, ap_predicate_op396_write_state35, ap_predicate_op397_write_state35, reg_794, tmp_65_reg_2216_pp0_iter11_reg, tmp_64_reg_2221, tmp_45_reg_2242, tmp_46_reg_2247, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001, ap_reg_ioackin_output1_s_WREADY)
    begin
        if (((ap_reg_ioackin_output1_s_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            output1_s_WDATA <= tmp_46_reg_2247;
        elsif (((ap_reg_ioackin_output1_s_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            output1_s_WDATA <= tmp_45_reg_2242;
        elsif (((ap_predicate_op407_write_state36 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            output1_s_WDATA <= tmp_65_reg_2216_pp0_iter11_reg;
        elsif (((ap_predicate_op406_write_state36 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            output1_s_WDATA <= tmp_64_reg_2221;
        elsif ((((ap_predicate_op397_write_state35 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_predicate_op396_write_state35 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            output1_s_WDATA <= reg_794;
        else 
            output1_s_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output1_s_WVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter11, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_enable_reg_pp0_iter12, ap_predicate_op406_write_state36, ap_predicate_op407_write_state36, ap_predicate_op396_write_state35, ap_predicate_op397_write_state35, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001, ap_reg_ioackin_output1_s_WREADY)
    begin
        if ((((ap_reg_ioackin_output1_s_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((ap_reg_ioackin_output1_s_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((ap_predicate_op397_write_state35 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_predicate_op396_write_state35 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_predicate_op407_write_state36 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_predicate_op406_write_state36 = ap_const_boolean_1) and (ap_reg_ioackin_output1_s_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output1_s_WVALID <= ap_const_logic_1;
        else 
            output1_s_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    output1_s_blk_n_AW_assign_proc : process(m_axi_output1_s_AWREADY, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter10_reg, tmp_8_reg_1992_pp0_iter11_reg, ap_CS_fsm_state43, ap_CS_fsm_state42, tmp_14_reg_2000_pp0_iter11_reg, or_cond2_reg_2208, tmp_14_reg_2000_pp0_iter10_reg, or_cond1_reg_2178, tmp_16_reg_2182, tmp_22_reg_2212)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state43) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((tmp_22_reg_2212 = ap_const_lv1_0) and (or_cond2_reg_2208 = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)) or ((tmp_22_reg_2212 = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter11_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)))) or ((or_cond2_reg_2208 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_14_reg_2000_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((tmp_16_reg_2182 = ap_const_lv1_0) and (or_cond1_reg_2178 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)) or ((tmp_16_reg_2182 = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1)))) or ((or_cond1_reg_2178 = ap_const_lv1_1) and (tmp_14_reg_2000_pp0_iter10_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output1_s_blk_n_AW <= m_axi_output1_s_AWREADY;
        else 
            output1_s_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    output1_s_blk_n_B_assign_proc : process(m_axi_output1_s_BVALID, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter14, tmp_8_reg_1992_pp0_iter13_reg, ap_CS_fsm_state49, ap_CS_fsm_state48, tmp_8_reg_1992_pp0_iter14_reg, tmp_14_reg_2000_pp0_iter14_reg, or_cond2_reg_2208_pp0_iter13_reg, tmp_14_reg_2000_pp0_iter13_reg, or_cond1_reg_2178_pp0_iter13_reg, tmp_16_reg_2182_pp0_iter13_reg, tmp_22_reg_2212_pp0_iter13_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state49) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((tmp_22_reg_2212_pp0_iter13_reg = ap_const_lv1_0) and (or_cond2_reg_2208_pp0_iter13_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter14_reg = ap_const_lv1_1)) or ((tmp_22_reg_2212_pp0_iter13_reg = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter14_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter14_reg = ap_const_lv1_1)))) or ((or_cond2_reg_2208_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_14_reg_2000_pp0_iter14_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter14_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((tmp_16_reg_2182_pp0_iter13_reg = ap_const_lv1_0) and (or_cond1_reg_2178_pp0_iter13_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1)) or ((tmp_16_reg_2182_pp0_iter13_reg = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter13_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1)))) or ((or_cond1_reg_2178_pp0_iter13_reg = ap_const_lv1_1) and (tmp_14_reg_2000_pp0_iter13_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter13_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output1_s_blk_n_B <= m_axi_output1_s_BVALID;
        else 
            output1_s_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    output1_s_blk_n_W_assign_proc : process(m_axi_output1_s_WREADY, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter11, tmp_8_reg_1992_pp0_iter11_reg, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_enable_reg_pp0_iter12, tmp_14_reg_2000_pp0_iter11_reg, or_cond2_reg_2208_pp0_iter11_reg, or_cond1_reg_2178, tmp_16_reg_2182, tmp_22_reg_2212_pp0_iter11_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((tmp_16_reg_2182 = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter11_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)) or ((tmp_16_reg_2182 = ap_const_lv1_0) and (or_cond1_reg_2178 = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)))) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (or_cond1_reg_2178 = ap_const_lv1_1) and (tmp_14_reg_2000_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((tmp_22_reg_2212_pp0_iter11_reg = ap_const_lv1_0) and (or_cond2_reg_2208_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)) or ((tmp_22_reg_2212_pp0_iter11_reg = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter11_reg = ap_const_lv1_0) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1)))) or ((or_cond2_reg_2208_pp0_iter11_reg = ap_const_lv1_0) and (tmp_14_reg_2000_pp0_iter11_reg = ap_const_lv1_1) and (tmp_8_reg_1992_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output1_s_blk_n_W <= m_axi_output1_s_WREADY;
        else 
            output1_s_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

        output2_12_sum1_cast_fu_1597_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output2_12_sum1_fu_1592_p2),64));

    output2_12_sum1_fu_1592_p2 <= std_logic_vector(signed(tmp_17_cast_fu_1588_p1) + signed(tmp_25_cast_reg_1901));
        output2_12_sum_cast_fu_1566_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output2_12_sum_fu_1561_p2),64));

    output2_12_sum_fu_1561_p2 <= std_logic_vector(signed(tmp_19_cast_fu_1557_p1) + signed(tmp_25_cast_reg_1901));

    output2_s_0_ack_out_assign_proc : process(ap_CS_fsm_state49, output0_s_BVALID, output1_s_BVALID)
    begin
        if ((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            output2_s_0_ack_out <= ap_const_logic_1;
        else 
            output2_s_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

        output3_14_sum_cast_fu_1675_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output3_14_sum_fu_1670_p2),64));

    output3_14_sum_fu_1670_p2 <= std_logic_vector(signed(tmp_23_cast_fu_1666_p1) + signed(tmp_9_cast_reg_1889));

    output3_s_0_ack_out_assign_proc : process(ap_CS_fsm_state49, output0_s_BVALID, output1_s_BVALID)
    begin
        if ((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            output3_s_0_ack_out <= ap_const_logic_1;
        else 
            output3_s_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    p_and_f_fu_967_p3 <= (ap_const_lv29_0 & tmp_17_fu_963_p1);
    p_and_t_fu_979_p3 <= (ap_const_lv29_0 & tmp_19_fu_975_p1);
    p_lshr_cast_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_921_p4),30));
    p_lshr_f_cast_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_941_p4),30));
    p_neg_fu_915_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(num_0_data_reg));
    p_neg_t1_fu_987_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_and_t_fu_979_p3));
    p_neg_t_fu_935_p2 <= std_logic_vector(unsigned(ap_const_lv30_0) - unsigned(p_lshr_cast_fu_931_p1));
    p_not_fu_1252_p2 <= "0" when (i_cast_fu_1243_p1 = tmp_6_reg_1986) else "1";
    rmd_0_off_fu_1015_p2 <= std_logic_vector(signed(ap_const_lv5_1E) + signed(tmp_23_fu_1001_p1));
    rmd_fu_993_p3 <= 
        p_neg_t1_fu_987_p2 when (tmp_12_fu_907_p3(0) = '1') else 
        p_and_f_fu_967_p3;
    stable_para_ARADDR <= tmp_30_fu_1043_p1(32 - 1 downto 0);

    stable_para_ARVALID_assign_proc : process(ap_CS_fsm_state4, ap_reg_ioackin_stable_para_ARREADY)
    begin
        if (((ap_reg_ioackin_stable_para_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stable_para_ARVALID <= ap_const_logic_1;
        else 
            stable_para_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    stable_para_RREADY_assign_proc : process(ap_CS_fsm_state11, stable_para_RVALID)
    begin
        if (((stable_para_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            stable_para_RREADY <= ap_const_logic_1;
        else 
            stable_para_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    stable_para_blk_n_AR_assign_proc : process(m_axi_stable_para_ARREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            stable_para_blk_n_AR <= m_axi_stable_para_ARREADY;
        else 
            stable_para_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    stable_para_blk_n_R_assign_proc : process(m_axi_stable_para_RVALID, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            stable_para_blk_n_R <= m_axi_stable_para_RVALID;
        else 
            stable_para_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    stable_para_offset_0_ack_out_assign_proc : process(ap_CS_fsm_state49, output0_s_BVALID, output1_s_BVALID)
    begin
        if ((not(((output1_s_BVALID = ap_const_logic_0) or (output0_s_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            stable_para_offset_0_ack_out <= ap_const_logic_1;
        else 
            stable_para_offset_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    time_1_fu_1224_p2 <= std_logic_vector(unsigned(ap_const_lv31_1) + unsigned(time_cast_fu_1221_p1));
    time_2_fu_1230_p3 <= 
        time_cast_fu_1221_p1 when (tmp_reg_1867(0) = '1') else 
        time_1_fu_1224_p2;
        time_cast_fu_1221_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(time_s_reg_1862),31));

    time_s_fu_955_p3 <= 
        p_neg_t_fu_935_p2 when (tmp_12_fu_907_p3(0) = '1') else 
        p_lshr_f_cast_fu_951_p1;
        tmp_10_cast_fu_1440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_708_p4),33));

    tmp_10_fu_1101_p1 <= stable_para_RDATA(32 - 1 downto 0);
        tmp_12_cast_fu_1488_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_708_p4),33));

    tmp_12_fu_907_p3 <= num_0_data_reg(31 downto 31);
    tmp_14_fu_1262_p2 <= "1" when (i_cast_fu_1243_p1 = tmp_6_reg_1986) else "0";
    tmp_15_fu_1530_p2 <= "0" when (tmp_56_fu_1520_p4 = ap_const_lv32_FFFFFFFF) else "1";
    tmp_16_fu_1551_p2 <= "1" when (tmp_57_fu_1541_p4 = ap_const_lv32_FFFFFFFF) else "0";
        tmp_17_cast_fu_1588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_734_p4),33));

    tmp_17_fu_963_p1 <= num_0_data_reg(3 - 1 downto 0);
        tmp_19_cast_fu_1557_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_734_p4),33));

    tmp_19_fu_975_p1 <= p_neg_fu_915_p2(3 - 1 downto 0);
    tmp_1_fu_1372_p2 <= "1" when (tmp_48_fu_1368_p1 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_21_fu_1629_p2 <= "1" when (tmp_62_fu_1619_p4 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_22_fu_1650_p2 <= "1" when (tmp_63_fu_1640_p4 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_23_cast_fu_1666_p0 <= grp_fu_750_p4;
        tmp_23_cast_fu_1666_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_23_cast_fu_1666_p0),33));

    tmp_23_fu_1001_p1 <= rmd_fu_993_p3(5 - 1 downto 0);
    tmp_24_fu_1685_p0 <= grp_fu_750_p4;
    tmp_24_fu_1685_p2 <= std_logic_vector(signed(tmp_24_fu_1685_p0) + signed(ap_const_lv32_1));
    tmp_25_cast_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output2_1_reg_1828),33));
    tmp_25_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output2_1_reg_1828),64));
    tmp_26_cast_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output1_offset9_reg_1834),33));
    tmp_26_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output1_offset9_reg_1834),64));
    tmp_27_cast_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output0_offset7_reg_1840),33));
    tmp_27_fu_1089_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output0_offset7_reg_1840),64));
    tmp_28_fu_1005_p1 <= rmd_fu_993_p3(4 - 1 downto 0);
    tmp_29_fu_1027_p4 <= rmd_0_off_fu_1015_p2(4 downto 1);
        tmp_2_cast_fu_1386_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_67_fu_1382_p1),33));

    tmp_30_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(stable_para_offset1_reg_1857),64));
    tmp_32_fu_921_p4 <= p_neg_fu_915_p2(31 downto 3);
    tmp_33_fu_941_p4 <= num_0_data_reg(31 downto 3);
    tmp_34_fu_1123_p4 <= stable_para_RDATA(95 downto 64);
    tmp_35_fu_1137_p4 <= stable_para_RDATA(127 downto 96);
    tmp_36_fu_1151_p4 <= stable_para_RDATA(159 downto 128);
    tmp_37_fu_1165_p4 <= stable_para_RDATA(191 downto 160);
    tmp_38_fu_1179_p4 <= stable_para_RDATA(223 downto 192);
    tmp_39_fu_1193_p4 <= stable_para_RDATA(255 downto 224);
    tmp_3_fu_1405_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_67_fu_1382_p1));
    tmp_40_fu_1207_p4 <= stable_para_RDATA(287 downto 256);
    tmp_41_fu_1273_p1 <= i_reg_462_pp0_iter3_reg(1 - 1 downto 0);
    tmp_47_fu_1704_p1 <= num_o_reg_474(32 - 1 downto 0);
    tmp_48_fu_1368_p1 <= ap_phi_reg_pp0_iter10_signal_1_18_reg_495(32 - 1 downto 0);
    tmp_49_fu_1378_p1 <= ap_phi_reg_pp0_iter10_signal_1_1_reg_486(32 - 1 downto 0);
    tmp_4_fu_1434_p2 <= "1" when (tmp_50_fu_1424_p4 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_50_fu_1424_p4 <= ap_phi_reg_pp0_iter10_signal_1_18_reg_495(63 downto 32);
    tmp_51_fu_1472_p4 <= ap_phi_reg_pp0_iter10_signal_1_18_reg_495(63 downto 32);
    tmp_56_fu_1520_p4 <= ap_phi_reg_pp0_iter10_signal_1_18_reg_495(95 downto 64);
    tmp_57_fu_1541_p4 <= ap_phi_reg_pp0_iter10_signal_1_18_reg_495(95 downto 64);
    tmp_5_fu_1482_p2 <= "1" when (tmp_51_fu_1472_p4 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_62_fu_1619_p4 <= ap_phi_reg_pp0_iter10_signal_1_18_reg_495(127 downto 96);
    tmp_63_fu_1640_p4 <= ap_phi_reg_pp0_iter10_signal_1_18_reg_495(127 downto 96);
    tmp_67_fu_1382_p1 <= ap_phi_mux_num_o_phi_fu_478_p4(32 - 1 downto 0);
    tmp_6_fu_1237_p2 <= std_logic_vector(signed(ap_const_lv31_7FFFFFFF) + signed(time_2_fu_1230_p3));
    tmp_7_fu_1021_p2 <= "1" when (tmp_28_fu_1005_p1 = ap_const_lv4_3) else "0";
    tmp_8_fu_1247_p2 <= "1" when (signed(i_cast_fu_1243_p1) < signed(time_2_reg_1981)) else "0";
    tmp_9_cast_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output3_1_reg_1822),33));
    tmp_9_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output3_1_reg_1822),64));
    tmp_fu_1009_p2 <= "1" when (tmp_28_fu_1005_p1 = ap_const_lv4_0) else "0";
    tmp_s_fu_1109_p4 <= stable_para_RDATA(63 downto 32);
end behav;
