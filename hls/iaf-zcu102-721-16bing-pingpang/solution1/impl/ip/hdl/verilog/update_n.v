// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="update_n,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=240,HLS_SYN_FF=60632,HLS_SYN_LUT=27435,HLS_VERSION=2018_2}" *)

module update_n (
        ap_clk,
        ap_rst_n,
        m_axi_stable_para_AWVALID,
        m_axi_stable_para_AWREADY,
        m_axi_stable_para_AWADDR,
        m_axi_stable_para_AWID,
        m_axi_stable_para_AWLEN,
        m_axi_stable_para_AWSIZE,
        m_axi_stable_para_AWBURST,
        m_axi_stable_para_AWLOCK,
        m_axi_stable_para_AWCACHE,
        m_axi_stable_para_AWPROT,
        m_axi_stable_para_AWQOS,
        m_axi_stable_para_AWREGION,
        m_axi_stable_para_AWUSER,
        m_axi_stable_para_WVALID,
        m_axi_stable_para_WREADY,
        m_axi_stable_para_WDATA,
        m_axi_stable_para_WSTRB,
        m_axi_stable_para_WLAST,
        m_axi_stable_para_WID,
        m_axi_stable_para_WUSER,
        m_axi_stable_para_ARVALID,
        m_axi_stable_para_ARREADY,
        m_axi_stable_para_ARADDR,
        m_axi_stable_para_ARID,
        m_axi_stable_para_ARLEN,
        m_axi_stable_para_ARSIZE,
        m_axi_stable_para_ARBURST,
        m_axi_stable_para_ARLOCK,
        m_axi_stable_para_ARCACHE,
        m_axi_stable_para_ARPROT,
        m_axi_stable_para_ARQOS,
        m_axi_stable_para_ARREGION,
        m_axi_stable_para_ARUSER,
        m_axi_stable_para_RVALID,
        m_axi_stable_para_RREADY,
        m_axi_stable_para_RDATA,
        m_axi_stable_para_RLAST,
        m_axi_stable_para_RID,
        m_axi_stable_para_RUSER,
        m_axi_stable_para_RRESP,
        m_axi_stable_para_BVALID,
        m_axi_stable_para_BREADY,
        m_axi_stable_para_BRESP,
        m_axi_stable_para_BID,
        m_axi_stable_para_BUSER,
        m_axi_input01_AWVALID,
        m_axi_input01_AWREADY,
        m_axi_input01_AWADDR,
        m_axi_input01_AWID,
        m_axi_input01_AWLEN,
        m_axi_input01_AWSIZE,
        m_axi_input01_AWBURST,
        m_axi_input01_AWLOCK,
        m_axi_input01_AWCACHE,
        m_axi_input01_AWPROT,
        m_axi_input01_AWQOS,
        m_axi_input01_AWREGION,
        m_axi_input01_AWUSER,
        m_axi_input01_WVALID,
        m_axi_input01_WREADY,
        m_axi_input01_WDATA,
        m_axi_input01_WSTRB,
        m_axi_input01_WLAST,
        m_axi_input01_WID,
        m_axi_input01_WUSER,
        m_axi_input01_ARVALID,
        m_axi_input01_ARREADY,
        m_axi_input01_ARADDR,
        m_axi_input01_ARID,
        m_axi_input01_ARLEN,
        m_axi_input01_ARSIZE,
        m_axi_input01_ARBURST,
        m_axi_input01_ARLOCK,
        m_axi_input01_ARCACHE,
        m_axi_input01_ARPROT,
        m_axi_input01_ARQOS,
        m_axi_input01_ARREGION,
        m_axi_input01_ARUSER,
        m_axi_input01_RVALID,
        m_axi_input01_RREADY,
        m_axi_input01_RDATA,
        m_axi_input01_RLAST,
        m_axi_input01_RID,
        m_axi_input01_RUSER,
        m_axi_input01_RRESP,
        m_axi_input01_BVALID,
        m_axi_input01_BREADY,
        m_axi_input01_BRESP,
        m_axi_input01_BID,
        m_axi_input01_BUSER,
        m_axi_input00_AWVALID,
        m_axi_input00_AWREADY,
        m_axi_input00_AWADDR,
        m_axi_input00_AWID,
        m_axi_input00_AWLEN,
        m_axi_input00_AWSIZE,
        m_axi_input00_AWBURST,
        m_axi_input00_AWLOCK,
        m_axi_input00_AWCACHE,
        m_axi_input00_AWPROT,
        m_axi_input00_AWQOS,
        m_axi_input00_AWREGION,
        m_axi_input00_AWUSER,
        m_axi_input00_WVALID,
        m_axi_input00_WREADY,
        m_axi_input00_WDATA,
        m_axi_input00_WSTRB,
        m_axi_input00_WLAST,
        m_axi_input00_WID,
        m_axi_input00_WUSER,
        m_axi_input00_ARVALID,
        m_axi_input00_ARREADY,
        m_axi_input00_ARADDR,
        m_axi_input00_ARID,
        m_axi_input00_ARLEN,
        m_axi_input00_ARSIZE,
        m_axi_input00_ARBURST,
        m_axi_input00_ARLOCK,
        m_axi_input00_ARCACHE,
        m_axi_input00_ARPROT,
        m_axi_input00_ARQOS,
        m_axi_input00_ARREGION,
        m_axi_input00_ARUSER,
        m_axi_input00_RVALID,
        m_axi_input00_RREADY,
        m_axi_input00_RDATA,
        m_axi_input00_RLAST,
        m_axi_input00_RID,
        m_axi_input00_RUSER,
        m_axi_input00_RRESP,
        m_axi_input00_BVALID,
        m_axi_input00_BREADY,
        m_axi_input00_BRESP,
        m_axi_input00_BID,
        m_axi_input00_BUSER,
        m_axi_output0_s_AWVALID,
        m_axi_output0_s_AWREADY,
        m_axi_output0_s_AWADDR,
        m_axi_output0_s_AWID,
        m_axi_output0_s_AWLEN,
        m_axi_output0_s_AWSIZE,
        m_axi_output0_s_AWBURST,
        m_axi_output0_s_AWLOCK,
        m_axi_output0_s_AWCACHE,
        m_axi_output0_s_AWPROT,
        m_axi_output0_s_AWQOS,
        m_axi_output0_s_AWREGION,
        m_axi_output0_s_AWUSER,
        m_axi_output0_s_WVALID,
        m_axi_output0_s_WREADY,
        m_axi_output0_s_WDATA,
        m_axi_output0_s_WSTRB,
        m_axi_output0_s_WLAST,
        m_axi_output0_s_WID,
        m_axi_output0_s_WUSER,
        m_axi_output0_s_ARVALID,
        m_axi_output0_s_ARREADY,
        m_axi_output0_s_ARADDR,
        m_axi_output0_s_ARID,
        m_axi_output0_s_ARLEN,
        m_axi_output0_s_ARSIZE,
        m_axi_output0_s_ARBURST,
        m_axi_output0_s_ARLOCK,
        m_axi_output0_s_ARCACHE,
        m_axi_output0_s_ARPROT,
        m_axi_output0_s_ARQOS,
        m_axi_output0_s_ARREGION,
        m_axi_output0_s_ARUSER,
        m_axi_output0_s_RVALID,
        m_axi_output0_s_RREADY,
        m_axi_output0_s_RDATA,
        m_axi_output0_s_RLAST,
        m_axi_output0_s_RID,
        m_axi_output0_s_RUSER,
        m_axi_output0_s_RRESP,
        m_axi_output0_s_BVALID,
        m_axi_output0_s_BREADY,
        m_axi_output0_s_BRESP,
        m_axi_output0_s_BID,
        m_axi_output0_s_BUSER,
        m_axi_output1_s_AWVALID,
        m_axi_output1_s_AWREADY,
        m_axi_output1_s_AWADDR,
        m_axi_output1_s_AWID,
        m_axi_output1_s_AWLEN,
        m_axi_output1_s_AWSIZE,
        m_axi_output1_s_AWBURST,
        m_axi_output1_s_AWLOCK,
        m_axi_output1_s_AWCACHE,
        m_axi_output1_s_AWPROT,
        m_axi_output1_s_AWQOS,
        m_axi_output1_s_AWREGION,
        m_axi_output1_s_AWUSER,
        m_axi_output1_s_WVALID,
        m_axi_output1_s_WREADY,
        m_axi_output1_s_WDATA,
        m_axi_output1_s_WSTRB,
        m_axi_output1_s_WLAST,
        m_axi_output1_s_WID,
        m_axi_output1_s_WUSER,
        m_axi_output1_s_ARVALID,
        m_axi_output1_s_ARREADY,
        m_axi_output1_s_ARADDR,
        m_axi_output1_s_ARID,
        m_axi_output1_s_ARLEN,
        m_axi_output1_s_ARSIZE,
        m_axi_output1_s_ARBURST,
        m_axi_output1_s_ARLOCK,
        m_axi_output1_s_ARCACHE,
        m_axi_output1_s_ARPROT,
        m_axi_output1_s_ARQOS,
        m_axi_output1_s_ARREGION,
        m_axi_output1_s_ARUSER,
        m_axi_output1_s_RVALID,
        m_axi_output1_s_RREADY,
        m_axi_output1_s_RDATA,
        m_axi_output1_s_RLAST,
        m_axi_output1_s_RID,
        m_axi_output1_s_RUSER,
        m_axi_output1_s_RRESP,
        m_axi_output1_s_BVALID,
        m_axi_output1_s_BREADY,
        m_axi_output1_s_BRESP,
        m_axi_output1_s_BID,
        m_axi_output1_s_BUSER,
        s_axi_ctrl_bus_AWVALID,
        s_axi_ctrl_bus_AWREADY,
        s_axi_ctrl_bus_AWADDR,
        s_axi_ctrl_bus_WVALID,
        s_axi_ctrl_bus_WREADY,
        s_axi_ctrl_bus_WDATA,
        s_axi_ctrl_bus_WSTRB,
        s_axi_ctrl_bus_ARVALID,
        s_axi_ctrl_bus_ARREADY,
        s_axi_ctrl_bus_ARADDR,
        s_axi_ctrl_bus_RVALID,
        s_axi_ctrl_bus_RREADY,
        s_axi_ctrl_bus_RDATA,
        s_axi_ctrl_bus_RRESP,
        s_axi_ctrl_bus_BVALID,
        s_axi_ctrl_bus_BREADY,
        s_axi_ctrl_bus_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_state11 = 21'd1024;
parameter    ap_ST_fsm_pp0_stage0 = 21'd2048;
parameter    ap_ST_fsm_pp0_stage1 = 21'd4096;
parameter    ap_ST_fsm_state42 = 21'd8192;
parameter    ap_ST_fsm_state43 = 21'd16384;
parameter    ap_ST_fsm_state44 = 21'd32768;
parameter    ap_ST_fsm_state45 = 21'd65536;
parameter    ap_ST_fsm_state46 = 21'd131072;
parameter    ap_ST_fsm_state47 = 21'd262144;
parameter    ap_ST_fsm_state48 = 21'd524288;
parameter    ap_ST_fsm_state49 = 21'd1048576;
parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_STABLE_PARA_ID_WIDTH = 1;
parameter    C_M_AXI_STABLE_PARA_ADDR_WIDTH = 32;
parameter    C_M_AXI_STABLE_PARA_DATA_WIDTH = 512;
parameter    C_M_AXI_STABLE_PARA_AWUSER_WIDTH = 1;
parameter    C_M_AXI_STABLE_PARA_ARUSER_WIDTH = 1;
parameter    C_M_AXI_STABLE_PARA_WUSER_WIDTH = 1;
parameter    C_M_AXI_STABLE_PARA_RUSER_WIDTH = 1;
parameter    C_M_AXI_STABLE_PARA_BUSER_WIDTH = 1;
parameter    C_M_AXI_STABLE_PARA_USER_VALUE = 0;
parameter    C_M_AXI_STABLE_PARA_PROT_VALUE = 0;
parameter    C_M_AXI_STABLE_PARA_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_INPUT01_ID_WIDTH = 1;
parameter    C_M_AXI_INPUT01_ADDR_WIDTH = 32;
parameter    C_M_AXI_INPUT01_DATA_WIDTH = 1024;
parameter    C_M_AXI_INPUT01_AWUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT01_ARUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT01_WUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT01_RUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT01_BUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT01_USER_VALUE = 0;
parameter    C_M_AXI_INPUT01_PROT_VALUE = 0;
parameter    C_M_AXI_INPUT01_CACHE_VALUE = 3;
parameter    C_M_AXI_INPUT00_ID_WIDTH = 1;
parameter    C_M_AXI_INPUT00_ADDR_WIDTH = 32;
parameter    C_M_AXI_INPUT00_DATA_WIDTH = 1024;
parameter    C_M_AXI_INPUT00_AWUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT00_ARUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT00_WUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT00_RUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT00_BUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT00_USER_VALUE = 0;
parameter    C_M_AXI_INPUT00_PROT_VALUE = 0;
parameter    C_M_AXI_INPUT00_CACHE_VALUE = 3;
parameter    C_M_AXI_OUTPUT0_S_ID_WIDTH = 1;
parameter    C_M_AXI_OUTPUT0_S_ADDR_WIDTH = 32;
parameter    C_M_AXI_OUTPUT0_S_DATA_WIDTH = 32;
parameter    C_M_AXI_OUTPUT0_S_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT0_S_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT0_S_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT0_S_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT0_S_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT0_S_USER_VALUE = 0;
parameter    C_M_AXI_OUTPUT0_S_PROT_VALUE = 0;
parameter    C_M_AXI_OUTPUT0_S_CACHE_VALUE = 3;
parameter    C_M_AXI_OUTPUT1_S_ID_WIDTH = 1;
parameter    C_M_AXI_OUTPUT1_S_ADDR_WIDTH = 32;
parameter    C_M_AXI_OUTPUT1_S_DATA_WIDTH = 32;
parameter    C_M_AXI_OUTPUT1_S_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT1_S_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT1_S_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT1_S_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT1_S_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT1_S_USER_VALUE = 0;
parameter    C_M_AXI_OUTPUT1_S_PROT_VALUE = 0;
parameter    C_M_AXI_OUTPUT1_S_CACHE_VALUE = 3;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_STABLE_PARA_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_INPUT01_WSTRB_WIDTH = (1024 / 8);
parameter C_M_AXI_INPUT00_WSTRB_WIDTH = (1024 / 8);
parameter C_M_AXI_OUTPUT0_S_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUTPUT1_S_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_stable_para_AWVALID;
input   m_axi_stable_para_AWREADY;
output  [C_M_AXI_STABLE_PARA_ADDR_WIDTH - 1:0] m_axi_stable_para_AWADDR;
output  [C_M_AXI_STABLE_PARA_ID_WIDTH - 1:0] m_axi_stable_para_AWID;
output  [7:0] m_axi_stable_para_AWLEN;
output  [2:0] m_axi_stable_para_AWSIZE;
output  [1:0] m_axi_stable_para_AWBURST;
output  [1:0] m_axi_stable_para_AWLOCK;
output  [3:0] m_axi_stable_para_AWCACHE;
output  [2:0] m_axi_stable_para_AWPROT;
output  [3:0] m_axi_stable_para_AWQOS;
output  [3:0] m_axi_stable_para_AWREGION;
output  [C_M_AXI_STABLE_PARA_AWUSER_WIDTH - 1:0] m_axi_stable_para_AWUSER;
output   m_axi_stable_para_WVALID;
input   m_axi_stable_para_WREADY;
output  [C_M_AXI_STABLE_PARA_DATA_WIDTH - 1:0] m_axi_stable_para_WDATA;
output  [C_M_AXI_STABLE_PARA_WSTRB_WIDTH - 1:0] m_axi_stable_para_WSTRB;
output   m_axi_stable_para_WLAST;
output  [C_M_AXI_STABLE_PARA_ID_WIDTH - 1:0] m_axi_stable_para_WID;
output  [C_M_AXI_STABLE_PARA_WUSER_WIDTH - 1:0] m_axi_stable_para_WUSER;
output   m_axi_stable_para_ARVALID;
input   m_axi_stable_para_ARREADY;
output  [C_M_AXI_STABLE_PARA_ADDR_WIDTH - 1:0] m_axi_stable_para_ARADDR;
output  [C_M_AXI_STABLE_PARA_ID_WIDTH - 1:0] m_axi_stable_para_ARID;
output  [7:0] m_axi_stable_para_ARLEN;
output  [2:0] m_axi_stable_para_ARSIZE;
output  [1:0] m_axi_stable_para_ARBURST;
output  [1:0] m_axi_stable_para_ARLOCK;
output  [3:0] m_axi_stable_para_ARCACHE;
output  [2:0] m_axi_stable_para_ARPROT;
output  [3:0] m_axi_stable_para_ARQOS;
output  [3:0] m_axi_stable_para_ARREGION;
output  [C_M_AXI_STABLE_PARA_ARUSER_WIDTH - 1:0] m_axi_stable_para_ARUSER;
input   m_axi_stable_para_RVALID;
output   m_axi_stable_para_RREADY;
input  [C_M_AXI_STABLE_PARA_DATA_WIDTH - 1:0] m_axi_stable_para_RDATA;
input   m_axi_stable_para_RLAST;
input  [C_M_AXI_STABLE_PARA_ID_WIDTH - 1:0] m_axi_stable_para_RID;
input  [C_M_AXI_STABLE_PARA_RUSER_WIDTH - 1:0] m_axi_stable_para_RUSER;
input  [1:0] m_axi_stable_para_RRESP;
input   m_axi_stable_para_BVALID;
output   m_axi_stable_para_BREADY;
input  [1:0] m_axi_stable_para_BRESP;
input  [C_M_AXI_STABLE_PARA_ID_WIDTH - 1:0] m_axi_stable_para_BID;
input  [C_M_AXI_STABLE_PARA_BUSER_WIDTH - 1:0] m_axi_stable_para_BUSER;
output   m_axi_input01_AWVALID;
input   m_axi_input01_AWREADY;
output  [C_M_AXI_INPUT01_ADDR_WIDTH - 1:0] m_axi_input01_AWADDR;
output  [C_M_AXI_INPUT01_ID_WIDTH - 1:0] m_axi_input01_AWID;
output  [7:0] m_axi_input01_AWLEN;
output  [2:0] m_axi_input01_AWSIZE;
output  [1:0] m_axi_input01_AWBURST;
output  [1:0] m_axi_input01_AWLOCK;
output  [3:0] m_axi_input01_AWCACHE;
output  [2:0] m_axi_input01_AWPROT;
output  [3:0] m_axi_input01_AWQOS;
output  [3:0] m_axi_input01_AWREGION;
output  [C_M_AXI_INPUT01_AWUSER_WIDTH - 1:0] m_axi_input01_AWUSER;
output   m_axi_input01_WVALID;
input   m_axi_input01_WREADY;
output  [C_M_AXI_INPUT01_DATA_WIDTH - 1:0] m_axi_input01_WDATA;
output  [C_M_AXI_INPUT01_WSTRB_WIDTH - 1:0] m_axi_input01_WSTRB;
output   m_axi_input01_WLAST;
output  [C_M_AXI_INPUT01_ID_WIDTH - 1:0] m_axi_input01_WID;
output  [C_M_AXI_INPUT01_WUSER_WIDTH - 1:0] m_axi_input01_WUSER;
output   m_axi_input01_ARVALID;
input   m_axi_input01_ARREADY;
output  [C_M_AXI_INPUT01_ADDR_WIDTH - 1:0] m_axi_input01_ARADDR;
output  [C_M_AXI_INPUT01_ID_WIDTH - 1:0] m_axi_input01_ARID;
output  [7:0] m_axi_input01_ARLEN;
output  [2:0] m_axi_input01_ARSIZE;
output  [1:0] m_axi_input01_ARBURST;
output  [1:0] m_axi_input01_ARLOCK;
output  [3:0] m_axi_input01_ARCACHE;
output  [2:0] m_axi_input01_ARPROT;
output  [3:0] m_axi_input01_ARQOS;
output  [3:0] m_axi_input01_ARREGION;
output  [C_M_AXI_INPUT01_ARUSER_WIDTH - 1:0] m_axi_input01_ARUSER;
input   m_axi_input01_RVALID;
output   m_axi_input01_RREADY;
input  [C_M_AXI_INPUT01_DATA_WIDTH - 1:0] m_axi_input01_RDATA;
input   m_axi_input01_RLAST;
input  [C_M_AXI_INPUT01_ID_WIDTH - 1:0] m_axi_input01_RID;
input  [C_M_AXI_INPUT01_RUSER_WIDTH - 1:0] m_axi_input01_RUSER;
input  [1:0] m_axi_input01_RRESP;
input   m_axi_input01_BVALID;
output   m_axi_input01_BREADY;
input  [1:0] m_axi_input01_BRESP;
input  [C_M_AXI_INPUT01_ID_WIDTH - 1:0] m_axi_input01_BID;
input  [C_M_AXI_INPUT01_BUSER_WIDTH - 1:0] m_axi_input01_BUSER;
output   m_axi_input00_AWVALID;
input   m_axi_input00_AWREADY;
output  [C_M_AXI_INPUT00_ADDR_WIDTH - 1:0] m_axi_input00_AWADDR;
output  [C_M_AXI_INPUT00_ID_WIDTH - 1:0] m_axi_input00_AWID;
output  [7:0] m_axi_input00_AWLEN;
output  [2:0] m_axi_input00_AWSIZE;
output  [1:0] m_axi_input00_AWBURST;
output  [1:0] m_axi_input00_AWLOCK;
output  [3:0] m_axi_input00_AWCACHE;
output  [2:0] m_axi_input00_AWPROT;
output  [3:0] m_axi_input00_AWQOS;
output  [3:0] m_axi_input00_AWREGION;
output  [C_M_AXI_INPUT00_AWUSER_WIDTH - 1:0] m_axi_input00_AWUSER;
output   m_axi_input00_WVALID;
input   m_axi_input00_WREADY;
output  [C_M_AXI_INPUT00_DATA_WIDTH - 1:0] m_axi_input00_WDATA;
output  [C_M_AXI_INPUT00_WSTRB_WIDTH - 1:0] m_axi_input00_WSTRB;
output   m_axi_input00_WLAST;
output  [C_M_AXI_INPUT00_ID_WIDTH - 1:0] m_axi_input00_WID;
output  [C_M_AXI_INPUT00_WUSER_WIDTH - 1:0] m_axi_input00_WUSER;
output   m_axi_input00_ARVALID;
input   m_axi_input00_ARREADY;
output  [C_M_AXI_INPUT00_ADDR_WIDTH - 1:0] m_axi_input00_ARADDR;
output  [C_M_AXI_INPUT00_ID_WIDTH - 1:0] m_axi_input00_ARID;
output  [7:0] m_axi_input00_ARLEN;
output  [2:0] m_axi_input00_ARSIZE;
output  [1:0] m_axi_input00_ARBURST;
output  [1:0] m_axi_input00_ARLOCK;
output  [3:0] m_axi_input00_ARCACHE;
output  [2:0] m_axi_input00_ARPROT;
output  [3:0] m_axi_input00_ARQOS;
output  [3:0] m_axi_input00_ARREGION;
output  [C_M_AXI_INPUT00_ARUSER_WIDTH - 1:0] m_axi_input00_ARUSER;
input   m_axi_input00_RVALID;
output   m_axi_input00_RREADY;
input  [C_M_AXI_INPUT00_DATA_WIDTH - 1:0] m_axi_input00_RDATA;
input   m_axi_input00_RLAST;
input  [C_M_AXI_INPUT00_ID_WIDTH - 1:0] m_axi_input00_RID;
input  [C_M_AXI_INPUT00_RUSER_WIDTH - 1:0] m_axi_input00_RUSER;
input  [1:0] m_axi_input00_RRESP;
input   m_axi_input00_BVALID;
output   m_axi_input00_BREADY;
input  [1:0] m_axi_input00_BRESP;
input  [C_M_AXI_INPUT00_ID_WIDTH - 1:0] m_axi_input00_BID;
input  [C_M_AXI_INPUT00_BUSER_WIDTH - 1:0] m_axi_input00_BUSER;
output   m_axi_output0_s_AWVALID;
input   m_axi_output0_s_AWREADY;
output  [C_M_AXI_OUTPUT0_S_ADDR_WIDTH - 1:0] m_axi_output0_s_AWADDR;
output  [C_M_AXI_OUTPUT0_S_ID_WIDTH - 1:0] m_axi_output0_s_AWID;
output  [7:0] m_axi_output0_s_AWLEN;
output  [2:0] m_axi_output0_s_AWSIZE;
output  [1:0] m_axi_output0_s_AWBURST;
output  [1:0] m_axi_output0_s_AWLOCK;
output  [3:0] m_axi_output0_s_AWCACHE;
output  [2:0] m_axi_output0_s_AWPROT;
output  [3:0] m_axi_output0_s_AWQOS;
output  [3:0] m_axi_output0_s_AWREGION;
output  [C_M_AXI_OUTPUT0_S_AWUSER_WIDTH - 1:0] m_axi_output0_s_AWUSER;
output   m_axi_output0_s_WVALID;
input   m_axi_output0_s_WREADY;
output  [C_M_AXI_OUTPUT0_S_DATA_WIDTH - 1:0] m_axi_output0_s_WDATA;
output  [C_M_AXI_OUTPUT0_S_WSTRB_WIDTH - 1:0] m_axi_output0_s_WSTRB;
output   m_axi_output0_s_WLAST;
output  [C_M_AXI_OUTPUT0_S_ID_WIDTH - 1:0] m_axi_output0_s_WID;
output  [C_M_AXI_OUTPUT0_S_WUSER_WIDTH - 1:0] m_axi_output0_s_WUSER;
output   m_axi_output0_s_ARVALID;
input   m_axi_output0_s_ARREADY;
output  [C_M_AXI_OUTPUT0_S_ADDR_WIDTH - 1:0] m_axi_output0_s_ARADDR;
output  [C_M_AXI_OUTPUT0_S_ID_WIDTH - 1:0] m_axi_output0_s_ARID;
output  [7:0] m_axi_output0_s_ARLEN;
output  [2:0] m_axi_output0_s_ARSIZE;
output  [1:0] m_axi_output0_s_ARBURST;
output  [1:0] m_axi_output0_s_ARLOCK;
output  [3:0] m_axi_output0_s_ARCACHE;
output  [2:0] m_axi_output0_s_ARPROT;
output  [3:0] m_axi_output0_s_ARQOS;
output  [3:0] m_axi_output0_s_ARREGION;
output  [C_M_AXI_OUTPUT0_S_ARUSER_WIDTH - 1:0] m_axi_output0_s_ARUSER;
input   m_axi_output0_s_RVALID;
output   m_axi_output0_s_RREADY;
input  [C_M_AXI_OUTPUT0_S_DATA_WIDTH - 1:0] m_axi_output0_s_RDATA;
input   m_axi_output0_s_RLAST;
input  [C_M_AXI_OUTPUT0_S_ID_WIDTH - 1:0] m_axi_output0_s_RID;
input  [C_M_AXI_OUTPUT0_S_RUSER_WIDTH - 1:0] m_axi_output0_s_RUSER;
input  [1:0] m_axi_output0_s_RRESP;
input   m_axi_output0_s_BVALID;
output   m_axi_output0_s_BREADY;
input  [1:0] m_axi_output0_s_BRESP;
input  [C_M_AXI_OUTPUT0_S_ID_WIDTH - 1:0] m_axi_output0_s_BID;
input  [C_M_AXI_OUTPUT0_S_BUSER_WIDTH - 1:0] m_axi_output0_s_BUSER;
output   m_axi_output1_s_AWVALID;
input   m_axi_output1_s_AWREADY;
output  [C_M_AXI_OUTPUT1_S_ADDR_WIDTH - 1:0] m_axi_output1_s_AWADDR;
output  [C_M_AXI_OUTPUT1_S_ID_WIDTH - 1:0] m_axi_output1_s_AWID;
output  [7:0] m_axi_output1_s_AWLEN;
output  [2:0] m_axi_output1_s_AWSIZE;
output  [1:0] m_axi_output1_s_AWBURST;
output  [1:0] m_axi_output1_s_AWLOCK;
output  [3:0] m_axi_output1_s_AWCACHE;
output  [2:0] m_axi_output1_s_AWPROT;
output  [3:0] m_axi_output1_s_AWQOS;
output  [3:0] m_axi_output1_s_AWREGION;
output  [C_M_AXI_OUTPUT1_S_AWUSER_WIDTH - 1:0] m_axi_output1_s_AWUSER;
output   m_axi_output1_s_WVALID;
input   m_axi_output1_s_WREADY;
output  [C_M_AXI_OUTPUT1_S_DATA_WIDTH - 1:0] m_axi_output1_s_WDATA;
output  [C_M_AXI_OUTPUT1_S_WSTRB_WIDTH - 1:0] m_axi_output1_s_WSTRB;
output   m_axi_output1_s_WLAST;
output  [C_M_AXI_OUTPUT1_S_ID_WIDTH - 1:0] m_axi_output1_s_WID;
output  [C_M_AXI_OUTPUT1_S_WUSER_WIDTH - 1:0] m_axi_output1_s_WUSER;
output   m_axi_output1_s_ARVALID;
input   m_axi_output1_s_ARREADY;
output  [C_M_AXI_OUTPUT1_S_ADDR_WIDTH - 1:0] m_axi_output1_s_ARADDR;
output  [C_M_AXI_OUTPUT1_S_ID_WIDTH - 1:0] m_axi_output1_s_ARID;
output  [7:0] m_axi_output1_s_ARLEN;
output  [2:0] m_axi_output1_s_ARSIZE;
output  [1:0] m_axi_output1_s_ARBURST;
output  [1:0] m_axi_output1_s_ARLOCK;
output  [3:0] m_axi_output1_s_ARCACHE;
output  [2:0] m_axi_output1_s_ARPROT;
output  [3:0] m_axi_output1_s_ARQOS;
output  [3:0] m_axi_output1_s_ARREGION;
output  [C_M_AXI_OUTPUT1_S_ARUSER_WIDTH - 1:0] m_axi_output1_s_ARUSER;
input   m_axi_output1_s_RVALID;
output   m_axi_output1_s_RREADY;
input  [C_M_AXI_OUTPUT1_S_DATA_WIDTH - 1:0] m_axi_output1_s_RDATA;
input   m_axi_output1_s_RLAST;
input  [C_M_AXI_OUTPUT1_S_ID_WIDTH - 1:0] m_axi_output1_s_RID;
input  [C_M_AXI_OUTPUT1_S_RUSER_WIDTH - 1:0] m_axi_output1_s_RUSER;
input  [1:0] m_axi_output1_s_RRESP;
input   m_axi_output1_s_BVALID;
output   m_axi_output1_s_BREADY;
input  [1:0] m_axi_output1_s_BRESP;
input  [C_M_AXI_OUTPUT1_S_ID_WIDTH - 1:0] m_axi_output1_s_BID;
input  [C_M_AXI_OUTPUT1_S_BUSER_WIDTH - 1:0] m_axi_output1_s_BUSER;
input   s_axi_ctrl_bus_AWVALID;
output   s_axi_ctrl_bus_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_ctrl_bus_AWADDR;
input   s_axi_ctrl_bus_WVALID;
output   s_axi_ctrl_bus_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_ctrl_bus_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1:0] s_axi_ctrl_bus_WSTRB;
input   s_axi_ctrl_bus_ARVALID;
output   s_axi_ctrl_bus_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_ctrl_bus_ARADDR;
output   s_axi_ctrl_bus_RVALID;
input   s_axi_ctrl_bus_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_ctrl_bus_RDATA;
output  [1:0] s_axi_ctrl_bus_RRESP;
output   s_axi_ctrl_bus_BVALID;
input   s_axi_ctrl_bus_BREADY;
output  [1:0] s_axi_ctrl_bus_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] num;
reg   [31:0] num_0_data_reg;
reg    num_0_vld_reg;
reg    num_0_ack_out;
wire   [31:0] stable_para_offset;
reg   [31:0] stable_para_offset_0_data_reg;
reg    stable_para_offset_0_vld_reg;
reg    stable_para_offset_0_ack_out;
wire   [31:0] input00_V;
reg   [31:0] input00_V_0_data_reg;
reg    input00_V_0_vld_reg;
reg    input00_V_0_ack_out;
wire   [31:0] input01_V;
reg   [31:0] input01_V_0_data_reg;
reg    input01_V_0_vld_reg;
reg    input01_V_0_ack_out;
wire   [31:0] output0_offset;
reg   [31:0] output0_offset_0_data_reg;
reg    output0_offset_0_vld_reg;
reg    output0_offset_0_ack_out;
wire   [31:0] output1_offset;
reg   [31:0] output1_offset_0_data_reg;
reg    output1_offset_0_vld_reg;
reg    output1_offset_0_ack_out;
wire   [31:0] output2_s;
reg   [31:0] output2_s_0_data_reg;
reg    output2_s_0_vld_reg;
reg    output2_s_0_ack_out;
wire   [31:0] output3_s;
reg   [31:0] output3_s_0_data_reg;
reg    output3_s_0_vld_reg;
reg    output3_s_0_ack_out;
reg    stable_para_blk_n_AR;
wire    ap_CS_fsm_state4;
reg    stable_para_blk_n_R;
wire    ap_CS_fsm_state11;
wire    grp_update_indata_fu_616_input00_V_blk_n_AR;
wire    grp_update_indata_fu_616_input00_V_blk_n_R;
reg    input01_blk_n_AR;
reg    input01_blk_n_R;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_8_reg_1992;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage1;
reg   [0:0] tmp_8_reg_1992_pp0_iter4_reg;
wire    grp_update_indata_fu_616_input01_V_blk_n_AR;
wire    grp_update_indata_fu_616_input01_V_blk_n_R;
reg    input00_blk_n_AR;
reg    input00_blk_n_R;
wire    grp_update_outdata_fu_629_input01_V_blk_n_AW;
wire    grp_update_outdata_fu_629_input01_V_blk_n_W;
wire    grp_update_outdata_fu_629_input01_V_blk_n_B;
reg    input00_blk_n_AW;
reg    input00_blk_n_W;
reg    input00_blk_n_B;
reg    ap_enable_reg_pp0_iter11;
reg   [0:0] tmp_8_reg_1992_pp0_iter10_reg;
reg   [0:0] tmp_8_reg_1992_pp0_iter11_reg;
reg    ap_enable_reg_pp0_iter14;
reg   [0:0] tmp_8_reg_1992_pp0_iter13_reg;
reg    output0_s_blk_n_AW;
wire    ap_CS_fsm_state43;
reg    output0_s_blk_n_W;
wire    ap_CS_fsm_state44;
reg    output0_s_blk_n_B;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state48;
reg   [0:0] tmp_1_reg_2143;
reg   [0:0] tmp_1_reg_2143_pp0_iter13_reg;
reg   [0:0] brmerge_reg_1996;
reg   [0:0] brmerge_reg_1996_pp0_iter11_reg;
reg   [0:0] tmp_4_reg_2158;
reg    ap_enable_reg_pp0_iter12;
reg   [0:0] tmp_4_reg_2158_pp0_iter11_reg;
reg   [0:0] tmp_8_reg_1992_pp0_iter14_reg;
reg   [0:0] brmerge_reg_1996_pp0_iter14_reg;
reg   [0:0] tmp_4_reg_2158_pp0_iter13_reg;
reg   [0:0] tmp_5_reg_2168;
reg   [0:0] tmp_5_reg_2168_pp0_iter11_reg;
reg   [0:0] tmp_5_reg_2168_pp0_iter13_reg;
reg    output1_s_blk_n_AW;
reg   [0:0] tmp_14_reg_2000;
reg   [0:0] tmp_14_reg_2000_pp0_iter11_reg;
reg   [0:0] or_cond2_reg_2208;
reg    output1_s_blk_n_W;
reg   [0:0] or_cond2_reg_2208_pp0_iter11_reg;
reg    output1_s_blk_n_B;
reg   [0:0] tmp_14_reg_2000_pp0_iter14_reg;
reg   [0:0] or_cond2_reg_2208_pp0_iter13_reg;
reg   [0:0] tmp_14_reg_2000_pp0_iter10_reg;
reg   [0:0] or_cond1_reg_2178;
reg   [0:0] tmp_14_reg_2000_pp0_iter13_reg;
reg   [0:0] or_cond1_reg_2178_pp0_iter13_reg;
reg   [0:0] tmp_16_reg_2182;
reg   [0:0] tmp_16_reg_2182_pp0_iter13_reg;
reg   [0:0] tmp_22_reg_2212;
reg   [0:0] tmp_22_reg_2212_pp0_iter11_reg;
reg   [0:0] tmp_22_reg_2212_pp0_iter13_reg;
wire    stable_para_AWREADY;
wire    stable_para_WREADY;
reg    stable_para_ARVALID;
wire    stable_para_ARREADY;
wire   [31:0] stable_para_ARADDR;
wire    stable_para_RVALID;
reg    stable_para_RREADY;
wire   [511:0] stable_para_RDATA;
wire    stable_para_RLAST;
wire   [0:0] stable_para_RID;
wire   [0:0] stable_para_RUSER;
wire   [1:0] stable_para_RRESP;
wire    stable_para_BVALID;
wire   [1:0] stable_para_BRESP;
wire   [0:0] stable_para_BID;
wire   [0:0] stable_para_BUSER;
wire    input01_AWREADY;
wire    input01_WREADY;
reg    input01_ARVALID;
wire    input01_ARREADY;
wire    input01_RVALID;
reg    input01_RREADY;
wire   [1023:0] input01_RDATA;
wire    input01_RLAST;
wire   [0:0] input01_RID;
wire   [0:0] input01_RUSER;
wire   [1:0] input01_RRESP;
wire    input01_BVALID;
wire   [1:0] input01_BRESP;
wire   [0:0] input01_BID;
wire   [0:0] input01_BUSER;
reg    input00_AWVALID;
wire    input00_AWREADY;
reg    input00_WVALID;
wire    input00_WREADY;
reg    input00_ARVALID;
wire    input00_ARREADY;
wire    input00_RVALID;
reg    input00_RREADY;
wire   [1023:0] input00_RDATA;
wire    input00_RLAST;
wire   [0:0] input00_RID;
wire   [0:0] input00_RUSER;
wire   [1:0] input00_RRESP;
wire    input00_BVALID;
reg    input00_BREADY;
wire   [1:0] input00_BRESP;
wire   [0:0] input00_BID;
wire   [0:0] input00_BUSER;
reg    output0_s_AWVALID;
wire    output0_s_AWREADY;
reg   [31:0] output0_s_AWADDR;
reg    output0_s_WVALID;
wire    output0_s_WREADY;
reg   [31:0] output0_s_WDATA;
wire    output0_s_ARREADY;
wire    output0_s_RVALID;
wire   [31:0] output0_s_RDATA;
wire    output0_s_RLAST;
wire   [0:0] output0_s_RID;
wire   [0:0] output0_s_RUSER;
wire   [1:0] output0_s_RRESP;
wire    output0_s_BVALID;
reg    output0_s_BREADY;
wire   [1:0] output0_s_BRESP;
wire   [0:0] output0_s_BID;
wire   [0:0] output0_s_BUSER;
reg    output1_s_AWVALID;
wire    output1_s_AWREADY;
reg   [31:0] output1_s_AWADDR;
reg    output1_s_WVALID;
wire    output1_s_WREADY;
reg   [31:0] output1_s_WDATA;
wire    output1_s_ARREADY;
wire    output1_s_RVALID;
wire   [31:0] output1_s_RDATA;
wire    output1_s_RLAST;
wire   [0:0] output1_s_RID;
wire   [0:0] output1_s_RUSER;
wire   [1:0] output1_s_RRESP;
wire    output1_s_BVALID;
reg    output1_s_BREADY;
wire   [1:0] output1_s_BRESP;
wire   [0:0] output1_s_BID;
wire   [0:0] output1_s_BUSER;
reg   [29:0] i_reg_462;
reg   [29:0] i_reg_462_pp0_iter1_reg;
wire    ap_block_state12_pp0_stage0_iter0;
reg    ap_block_state14_pp0_stage0_iter1;
wire    ap_block_state16_pp0_stage0_iter2;
wire    ap_block_state18_pp0_stage0_iter3;
wire    ap_block_state20_pp0_stage0_iter4;
wire    ap_block_state22_pp0_stage0_iter5;
wire    ap_block_state24_pp0_stage0_iter6;
wire    ap_block_state26_pp0_stage0_iter7;
wire    ap_block_state28_pp0_stage0_iter8;
wire    ap_block_state30_pp0_stage0_iter9;
wire    ap_block_state32_pp0_stage0_iter10;
reg    ap_block_state34_pp0_stage0_iter11;
reg    ap_sig_ioackin_output0_s_AWREADY;
reg    ap_predicate_op374_writereq_state34;
reg    ap_sig_ioackin_output1_s_AWREADY;
reg    ap_predicate_op375_writereq_state34;
reg    ap_predicate_op376_writereq_state34;
reg    ap_block_state34_io;
wire    ap_block_state36_pp0_stage0_iter12;
reg    ap_sig_ioackin_output0_s_WREADY;
reg    ap_predicate_op402_write_state36;
reg    ap_predicate_op403_write_state36;
reg    ap_sig_ioackin_output1_s_WREADY;
reg    ap_predicate_op406_write_state36;
reg    ap_predicate_op407_write_state36;
reg    ap_block_state36_io;
wire    ap_block_state38_pp0_stage0_iter13;
reg    ap_predicate_op433_writeresp_state40;
reg    ap_predicate_op436_writeresp_state40;
reg    ap_predicate_op437_writeresp_state40;
reg    ap_block_state40_pp0_stage0_iter14;
reg    ap_block_pp0_stage0_11001;
reg   [29:0] i_reg_462_pp0_iter2_reg;
reg   [29:0] i_reg_462_pp0_iter3_reg;
reg   [29:0] i_reg_462_pp0_iter4_reg;
reg   [29:0] i_reg_462_pp0_iter5_reg;
reg   [29:0] i_reg_462_pp0_iter6_reg;
reg   [29:0] i_reg_462_pp0_iter7_reg;
reg   [29:0] i_reg_462_pp0_iter8_reg;
reg   [29:0] i_reg_462_pp0_iter9_reg;
reg   [29:0] i_reg_462_pp0_iter10_reg;
reg   [255:0] num_o_reg_474;
wire    ap_block_state13_pp0_stage1_iter0;
wire    ap_block_state15_pp0_stage1_iter1;
wire    ap_block_state17_pp0_stage1_iter2;
wire    ap_block_state19_pp0_stage1_iter3;
reg    ap_block_state21_pp0_stage1_iter4;
wire    ap_block_state23_pp0_stage1_iter5;
wire    ap_block_state25_pp0_stage1_iter6;
wire    ap_block_state27_pp0_stage1_iter7;
wire    ap_block_state29_pp0_stage1_iter8;
wire    ap_block_state31_pp0_stage1_iter9;
wire    ap_block_state33_pp0_stage1_iter10;
reg    ap_block_state35_pp0_stage1_iter11;
reg    ap_predicate_op393_write_state35;
reg    ap_predicate_op394_writereq_state35;
reg    ap_predicate_op395_writereq_state35;
reg    ap_predicate_op396_write_state35;
reg    ap_predicate_op397_write_state35;
reg    ap_predicate_op398_writereq_state35;
reg    ap_predicate_op399_writereq_state35;
reg    ap_block_state35_io;
wire    ap_block_state37_pp0_stage1_iter12;
wire    ap_block_state39_pp0_stage1_iter13;
reg    ap_predicate_op440_writeresp_state41;
reg    ap_predicate_op441_writeresp_state41;
reg    ap_predicate_op442_writeresp_state41;
reg    ap_predicate_op443_writeresp_state41;
reg    ap_block_state41_pp0_stage1_iter14;
reg    ap_block_pp0_stage1_11001;
reg   [255:0] num_o_7_reg_579;
reg   [255:0] reg_760;
reg    ap_block_state10;
reg   [255:0] reg_764;
reg   [255:0] reg_768;
reg   [255:0] reg_772;
reg   [255:0] reg_776;
reg   [255:0] reg_780;
reg   [255:0] reg_784;
reg   [31:0] reg_788;
reg    ap_enable_reg_pp0_iter10;
reg   [0:0] brmerge_reg_1996_pp0_iter10_reg;
wire   [0:0] tmp_4_fu_1434_p2;
reg   [31:0] reg_788_pp0_iter11_reg;
wire   [0:0] tmp_5_fu_1482_p2;
reg   [31:0] reg_794;
wire   [0:0] tmp_16_fu_1551_p2;
wire   [0:0] or_cond1_fu_1536_p2;
reg   [29:0] output3_1_reg_1822;
wire    ap_CS_fsm_state2;
reg   [29:0] output2_1_reg_1828;
reg   [29:0] output1_offset9_reg_1834;
reg   [29:0] output0_offset7_reg_1840;
reg   [24:0] input01_V5_reg_1846;
reg   [24:0] input00_V3_reg_1852;
reg   [25:0] stable_para_offset1_reg_1857;
wire   [29:0] time_s_fu_955_p3;
reg   [29:0] time_s_reg_1862;
wire   [0:0] tmp_fu_1009_p2;
reg   [0:0] tmp_reg_1867;
wire   [0:0] tmp_7_fu_1021_p2;
reg   [0:0] tmp_7_reg_1873;
wire   [0:0] icmp_fu_1037_p2;
reg   [0:0] icmp_reg_1878;
reg    ap_sig_ioackin_stable_para_ARREADY;
wire   [32:0] tmp_9_cast_fu_1056_p1;
reg   [32:0] tmp_9_cast_reg_1889;
reg   [31:0] output1_addr_reg_1894;
wire   [32:0] tmp_25_cast_fu_1068_p1;
reg   [32:0] tmp_25_cast_reg_1901;
reg   [31:0] output1_addr_1_reg_1907;
wire   [32:0] tmp_26_cast_fu_1080_p1;
reg   [32:0] tmp_26_cast_reg_1913;
reg   [31:0] output0_addr_reg_1919;
wire   [32:0] tmp_27_cast_fu_1092_p1;
reg   [32:0] tmp_27_cast_reg_1925;
reg   [31:0] output0_addr_1_reg_1930;
wire   [31:0] P20_s_fu_1105_p1;
reg   [31:0] P20_s_reg_1936;
wire   [31:0] P22_s_fu_1119_p1;
reg   [31:0] P22_s_reg_1941;
wire   [31:0] P21ex_s_fu_1133_p1;
reg   [31:0] P21ex_s_reg_1946;
wire   [31:0] P21in_s_fu_1147_p1;
reg   [31:0] P21in_s_reg_1951;
wire   [31:0] P11ex_s_fu_1161_p1;
reg   [31:0] P11ex_s_reg_1956;
wire   [31:0] P11in_s_fu_1175_p1;
reg   [31:0] P11in_s_reg_1961;
wire   [31:0] Theta_s_fu_1189_p1;
reg   [31:0] Theta_s_reg_1966;
wire   [31:0] RefractoryCounts_s_fu_1203_p1;
reg   [31:0] RefractoryCounts_s_reg_1971;
wire   [31:0] V_reset_s_fu_1217_p1;
reg   [31:0] V_reset_s_reg_1976;
wire   [30:0] time_2_fu_1230_p3;
reg   [30:0] time_2_reg_1981;
wire   [30:0] tmp_6_fu_1237_p2;
reg   [30:0] tmp_6_reg_1986;
wire   [0:0] tmp_8_fu_1247_p2;
reg   [0:0] tmp_8_reg_1992_pp0_iter1_reg;
reg   [0:0] tmp_8_reg_1992_pp0_iter2_reg;
reg   [0:0] tmp_8_reg_1992_pp0_iter3_reg;
reg   [0:0] tmp_8_reg_1992_pp0_iter5_reg;
reg   [0:0] tmp_8_reg_1992_pp0_iter6_reg;
reg   [0:0] tmp_8_reg_1992_pp0_iter7_reg;
reg   [0:0] tmp_8_reg_1992_pp0_iter8_reg;
reg   [0:0] tmp_8_reg_1992_pp0_iter9_reg;
reg   [0:0] tmp_8_reg_1992_pp0_iter12_reg;
wire   [0:0] brmerge_fu_1257_p2;
reg   [0:0] brmerge_reg_1996_pp0_iter1_reg;
reg   [0:0] brmerge_reg_1996_pp0_iter2_reg;
reg   [0:0] brmerge_reg_1996_pp0_iter3_reg;
reg   [0:0] brmerge_reg_1996_pp0_iter4_reg;
reg   [0:0] brmerge_reg_1996_pp0_iter5_reg;
reg   [0:0] brmerge_reg_1996_pp0_iter6_reg;
reg   [0:0] brmerge_reg_1996_pp0_iter7_reg;
reg   [0:0] brmerge_reg_1996_pp0_iter8_reg;
reg   [0:0] brmerge_reg_1996_pp0_iter9_reg;
reg   [0:0] brmerge_reg_1996_pp0_iter12_reg;
reg   [0:0] brmerge_reg_1996_pp0_iter13_reg;
wire   [0:0] tmp_14_fu_1262_p2;
reg   [0:0] tmp_14_reg_2000_pp0_iter1_reg;
reg   [0:0] tmp_14_reg_2000_pp0_iter2_reg;
reg   [0:0] tmp_14_reg_2000_pp0_iter3_reg;
reg   [0:0] tmp_14_reg_2000_pp0_iter4_reg;
reg   [0:0] tmp_14_reg_2000_pp0_iter5_reg;
reg   [0:0] tmp_14_reg_2000_pp0_iter6_reg;
reg   [0:0] tmp_14_reg_2000_pp0_iter7_reg;
reg   [0:0] tmp_14_reg_2000_pp0_iter8_reg;
reg   [0:0] tmp_14_reg_2000_pp0_iter9_reg;
reg   [0:0] tmp_14_reg_2000_pp0_iter12_reg;
wire   [29:0] i_1_fu_1267_p2;
reg   [29:0] i_1_reg_2004;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_41_fu_1273_p1;
reg   [0:0] tmp_41_reg_2009;
reg   [0:0] tmp_41_reg_2009_pp0_iter5_reg;
reg   [0:0] tmp_41_reg_2009_pp0_iter6_reg;
reg   [0:0] tmp_41_reg_2009_pp0_iter7_reg;
reg   [0:0] tmp_41_reg_2009_pp0_iter8_reg;
reg   [0:0] tmp_41_reg_2009_pp0_iter9_reg;
reg    ap_enable_reg_pp0_iter9;
wire   [0:0] tmp_1_fu_1372_p2;
reg   [0:0] tmp_1_reg_2143_pp0_iter11_reg;
reg   [0:0] tmp_1_reg_2143_pp0_iter12_reg;
wire   [31:0] tmp_49_fu_1378_p1;
reg   [31:0] tmp_49_reg_2147;
reg   [31:0] output0_addr_2_reg_2152;
reg   [0:0] tmp_4_reg_2158_pp0_iter12_reg;
reg   [31:0] output0_addr_3_reg_2162;
reg   [0:0] tmp_5_reg_2168_pp0_iter12_reg;
reg   [31:0] output0_addr_4_reg_2172;
reg   [0:0] or_cond1_reg_2178_pp0_iter11_reg;
reg   [0:0] or_cond1_reg_2178_pp0_iter12_reg;
reg   [0:0] tmp_16_reg_2182_pp0_iter11_reg;
reg   [0:0] tmp_16_reg_2182_pp0_iter12_reg;
reg   [31:0] output1_addr_3_reg_2186;
wire   [255:0] num_o_9_fu_1576_p5;
reg   [31:0] output1_addr_2_reg_2197;
wire   [255:0] num_o_8_fu_1607_p5;
wire   [0:0] or_cond2_fu_1635_p2;
reg   [0:0] or_cond2_reg_2208_pp0_iter12_reg;
wire   [0:0] tmp_22_fu_1650_p2;
reg   [0:0] tmp_22_reg_2212_pp0_iter12_reg;
reg   [31:0] tmp_65_reg_2216;
reg   [31:0] tmp_65_reg_2216_pp0_iter11_reg;
wire   [31:0] grp_fu_750_p4;
reg   [31:0] tmp_64_reg_2221;
reg   [31:0] output1_addr_4_reg_2226;
wire   [31:0] tmp_47_fu_1704_p1;
reg   [31:0] tmp_47_reg_2232;
reg    ap_block_state42_io;
reg   [31:0] tmp_44_reg_2237;
reg   [31:0] tmp_45_reg_2242;
reg   [31:0] tmp_46_reg_2247;
reg    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_condition_pp0_exit_iter10_state33;
reg    ap_enable_reg_pp0_iter13;
reg   [29:0] grp_execute_fu_594_i;
reg   [255:0] grp_execute_fu_594_weighted_spikes_ex_s;
reg   [255:0] grp_execute_fu_594_weighted_spikes_in_s;
reg   [255:0] grp_execute_fu_594_I_e_read;
reg   [255:0] grp_execute_fu_594_i_syn_ex_read;
reg   [255:0] grp_execute_fu_594_i_syn_in_read;
reg   [255:0] grp_execute_fu_594_r_ref_read;
reg   [255:0] grp_execute_fu_594_V_m_read;
wire   [255:0] grp_execute_fu_594_ap_return_0;
wire   [255:0] grp_execute_fu_594_ap_return_1;
wire   [255:0] grp_execute_fu_594_ap_return_2;
wire   [255:0] grp_execute_fu_594_ap_return_3;
wire   [255:0] grp_execute_fu_594_ap_return_4;
wire   [255:0] grp_execute_fu_594_ap_return_5;
reg    grp_execute_fu_594_ap_ce;
reg    ap_predicate_op224_call_state20;
reg    ap_predicate_op253_call_state22;
reg    ap_predicate_op243_call_state21;
wire    grp_update_indata_fu_616_ap_start;
wire    grp_update_indata_fu_616_ap_done;
wire    grp_update_indata_fu_616_ap_idle;
wire    grp_update_indata_fu_616_ap_ready;
wire    grp_update_indata_fu_616_m_axi_input00_V_AWVALID;
wire   [31:0] grp_update_indata_fu_616_m_axi_input00_V_AWADDR;
wire   [0:0] grp_update_indata_fu_616_m_axi_input00_V_AWID;
wire   [31:0] grp_update_indata_fu_616_m_axi_input00_V_AWLEN;
wire   [2:0] grp_update_indata_fu_616_m_axi_input00_V_AWSIZE;
wire   [1:0] grp_update_indata_fu_616_m_axi_input00_V_AWBURST;
wire   [1:0] grp_update_indata_fu_616_m_axi_input00_V_AWLOCK;
wire   [3:0] grp_update_indata_fu_616_m_axi_input00_V_AWCACHE;
wire   [2:0] grp_update_indata_fu_616_m_axi_input00_V_AWPROT;
wire   [3:0] grp_update_indata_fu_616_m_axi_input00_V_AWQOS;
wire   [3:0] grp_update_indata_fu_616_m_axi_input00_V_AWREGION;
wire   [0:0] grp_update_indata_fu_616_m_axi_input00_V_AWUSER;
wire    grp_update_indata_fu_616_m_axi_input00_V_WVALID;
wire   [1023:0] grp_update_indata_fu_616_m_axi_input00_V_WDATA;
wire   [127:0] grp_update_indata_fu_616_m_axi_input00_V_WSTRB;
wire    grp_update_indata_fu_616_m_axi_input00_V_WLAST;
wire   [0:0] grp_update_indata_fu_616_m_axi_input00_V_WID;
wire   [0:0] grp_update_indata_fu_616_m_axi_input00_V_WUSER;
wire    grp_update_indata_fu_616_m_axi_input00_V_ARVALID;
wire   [31:0] grp_update_indata_fu_616_m_axi_input00_V_ARADDR;
wire   [0:0] grp_update_indata_fu_616_m_axi_input00_V_ARID;
wire   [31:0] grp_update_indata_fu_616_m_axi_input00_V_ARLEN;
wire   [2:0] grp_update_indata_fu_616_m_axi_input00_V_ARSIZE;
wire   [1:0] grp_update_indata_fu_616_m_axi_input00_V_ARBURST;
wire   [1:0] grp_update_indata_fu_616_m_axi_input00_V_ARLOCK;
wire   [3:0] grp_update_indata_fu_616_m_axi_input00_V_ARCACHE;
wire   [2:0] grp_update_indata_fu_616_m_axi_input00_V_ARPROT;
wire   [3:0] grp_update_indata_fu_616_m_axi_input00_V_ARQOS;
wire   [3:0] grp_update_indata_fu_616_m_axi_input00_V_ARREGION;
wire   [0:0] grp_update_indata_fu_616_m_axi_input00_V_ARUSER;
wire    grp_update_indata_fu_616_m_axi_input00_V_RREADY;
wire    grp_update_indata_fu_616_m_axi_input00_V_BREADY;
wire    grp_update_indata_fu_616_m_axi_input01_V_AWVALID;
wire   [31:0] grp_update_indata_fu_616_m_axi_input01_V_AWADDR;
wire   [0:0] grp_update_indata_fu_616_m_axi_input01_V_AWID;
wire   [31:0] grp_update_indata_fu_616_m_axi_input01_V_AWLEN;
wire   [2:0] grp_update_indata_fu_616_m_axi_input01_V_AWSIZE;
wire   [1:0] grp_update_indata_fu_616_m_axi_input01_V_AWBURST;
wire   [1:0] grp_update_indata_fu_616_m_axi_input01_V_AWLOCK;
wire   [3:0] grp_update_indata_fu_616_m_axi_input01_V_AWCACHE;
wire   [2:0] grp_update_indata_fu_616_m_axi_input01_V_AWPROT;
wire   [3:0] grp_update_indata_fu_616_m_axi_input01_V_AWQOS;
wire   [3:0] grp_update_indata_fu_616_m_axi_input01_V_AWREGION;
wire   [0:0] grp_update_indata_fu_616_m_axi_input01_V_AWUSER;
wire    grp_update_indata_fu_616_m_axi_input01_V_WVALID;
wire   [1023:0] grp_update_indata_fu_616_m_axi_input01_V_WDATA;
wire   [127:0] grp_update_indata_fu_616_m_axi_input01_V_WSTRB;
wire    grp_update_indata_fu_616_m_axi_input01_V_WLAST;
wire   [0:0] grp_update_indata_fu_616_m_axi_input01_V_WID;
wire   [0:0] grp_update_indata_fu_616_m_axi_input01_V_WUSER;
wire    grp_update_indata_fu_616_m_axi_input01_V_ARVALID;
wire   [31:0] grp_update_indata_fu_616_m_axi_input01_V_ARADDR;
wire   [0:0] grp_update_indata_fu_616_m_axi_input01_V_ARID;
wire   [31:0] grp_update_indata_fu_616_m_axi_input01_V_ARLEN;
wire   [2:0] grp_update_indata_fu_616_m_axi_input01_V_ARSIZE;
wire   [1:0] grp_update_indata_fu_616_m_axi_input01_V_ARBURST;
wire   [1:0] grp_update_indata_fu_616_m_axi_input01_V_ARLOCK;
wire   [3:0] grp_update_indata_fu_616_m_axi_input01_V_ARCACHE;
wire   [2:0] grp_update_indata_fu_616_m_axi_input01_V_ARPROT;
wire   [3:0] grp_update_indata_fu_616_m_axi_input01_V_ARQOS;
wire   [3:0] grp_update_indata_fu_616_m_axi_input01_V_ARREGION;
wire   [0:0] grp_update_indata_fu_616_m_axi_input01_V_ARUSER;
wire    grp_update_indata_fu_616_m_axi_input01_V_RREADY;
wire    grp_update_indata_fu_616_m_axi_input01_V_BREADY;
reg    grp_update_indata_fu_616_ap_ce;
reg   [29:0] grp_update_indata_fu_616_i;
reg   [24:0] grp_update_indata_fu_616_input00_V_offset;
reg   [24:0] grp_update_indata_fu_616_input01_V_offset;
wire   [255:0] grp_update_indata_fu_616_ap_return_0;
wire   [255:0] grp_update_indata_fu_616_ap_return_1;
wire   [255:0] grp_update_indata_fu_616_ap_return_2;
wire   [255:0] grp_update_indata_fu_616_ap_return_3;
wire   [255:0] grp_update_indata_fu_616_ap_return_4;
wire   [255:0] grp_update_indata_fu_616_ap_return_5;
wire   [255:0] grp_update_indata_fu_616_ap_return_6;
reg    ap_block_state3;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    grp_update_outdata_fu_629_ap_start;
wire    grp_update_outdata_fu_629_ap_done;
wire    grp_update_outdata_fu_629_ap_idle;
wire    grp_update_outdata_fu_629_ap_ready;
wire    grp_update_outdata_fu_629_m_axi_input01_V_AWVALID;
wire   [31:0] grp_update_outdata_fu_629_m_axi_input01_V_AWADDR;
wire   [0:0] grp_update_outdata_fu_629_m_axi_input01_V_AWID;
wire   [31:0] grp_update_outdata_fu_629_m_axi_input01_V_AWLEN;
wire   [2:0] grp_update_outdata_fu_629_m_axi_input01_V_AWSIZE;
wire   [1:0] grp_update_outdata_fu_629_m_axi_input01_V_AWBURST;
wire   [1:0] grp_update_outdata_fu_629_m_axi_input01_V_AWLOCK;
wire   [3:0] grp_update_outdata_fu_629_m_axi_input01_V_AWCACHE;
wire   [2:0] grp_update_outdata_fu_629_m_axi_input01_V_AWPROT;
wire   [3:0] grp_update_outdata_fu_629_m_axi_input01_V_AWQOS;
wire   [3:0] grp_update_outdata_fu_629_m_axi_input01_V_AWREGION;
wire   [0:0] grp_update_outdata_fu_629_m_axi_input01_V_AWUSER;
wire    grp_update_outdata_fu_629_m_axi_input01_V_WVALID;
wire   [1023:0] grp_update_outdata_fu_629_m_axi_input01_V_WDATA;
wire   [127:0] grp_update_outdata_fu_629_m_axi_input01_V_WSTRB;
wire    grp_update_outdata_fu_629_m_axi_input01_V_WLAST;
wire   [0:0] grp_update_outdata_fu_629_m_axi_input01_V_WID;
wire   [0:0] grp_update_outdata_fu_629_m_axi_input01_V_WUSER;
wire    grp_update_outdata_fu_629_m_axi_input01_V_ARVALID;
wire   [31:0] grp_update_outdata_fu_629_m_axi_input01_V_ARADDR;
wire   [0:0] grp_update_outdata_fu_629_m_axi_input01_V_ARID;
wire   [31:0] grp_update_outdata_fu_629_m_axi_input01_V_ARLEN;
wire   [2:0] grp_update_outdata_fu_629_m_axi_input01_V_ARSIZE;
wire   [1:0] grp_update_outdata_fu_629_m_axi_input01_V_ARBURST;
wire   [1:0] grp_update_outdata_fu_629_m_axi_input01_V_ARLOCK;
wire   [3:0] grp_update_outdata_fu_629_m_axi_input01_V_ARCACHE;
wire   [2:0] grp_update_outdata_fu_629_m_axi_input01_V_ARPROT;
wire   [3:0] grp_update_outdata_fu_629_m_axi_input01_V_ARQOS;
wire   [3:0] grp_update_outdata_fu_629_m_axi_input01_V_ARREGION;
wire   [0:0] grp_update_outdata_fu_629_m_axi_input01_V_ARUSER;
wire    grp_update_outdata_fu_629_m_axi_input01_V_RREADY;
wire    grp_update_outdata_fu_629_m_axi_input01_V_BREADY;
reg    grp_update_outdata_fu_629_ap_ce;
reg   [29:0] ap_phi_mux_i_phi_fu_466_p4;
reg   [255:0] ap_phi_mux_num_o_phi_fu_478_p4;
wire   [255:0] ap_phi_reg_pp0_iter0_signal_1_1_reg_486;
reg   [255:0] ap_phi_reg_pp0_iter1_signal_1_1_reg_486;
reg   [255:0] ap_phi_reg_pp0_iter2_signal_1_1_reg_486;
reg   [255:0] ap_phi_reg_pp0_iter3_signal_1_1_reg_486;
reg   [255:0] ap_phi_reg_pp0_iter4_signal_1_1_reg_486;
reg   [255:0] ap_phi_reg_pp0_iter5_signal_1_1_reg_486;
reg   [255:0] ap_phi_reg_pp0_iter6_signal_1_1_reg_486;
reg   [255:0] ap_phi_reg_pp0_iter7_signal_1_1_reg_486;
reg   [255:0] ap_phi_reg_pp0_iter8_signal_1_1_reg_486;
reg   [255:0] ap_phi_reg_pp0_iter9_signal_1_1_reg_486;
reg   [255:0] ap_phi_reg_pp0_iter10_signal_1_1_reg_486;
wire   [255:0] ap_phi_reg_pp0_iter0_signal_1_18_reg_495;
reg   [255:0] ap_phi_reg_pp0_iter1_signal_1_18_reg_495;
reg   [255:0] ap_phi_reg_pp0_iter2_signal_1_18_reg_495;
reg   [255:0] ap_phi_reg_pp0_iter3_signal_1_18_reg_495;
reg   [255:0] ap_phi_reg_pp0_iter4_signal_1_18_reg_495;
reg   [255:0] ap_phi_reg_pp0_iter5_signal_1_18_reg_495;
reg   [255:0] ap_phi_reg_pp0_iter6_signal_1_18_reg_495;
reg   [255:0] ap_phi_reg_pp0_iter7_signal_1_18_reg_495;
reg   [255:0] ap_phi_reg_pp0_iter8_signal_1_18_reg_495;
reg   [255:0] ap_phi_reg_pp0_iter9_signal_1_18_reg_495;
reg   [255:0] ap_phi_reg_pp0_iter10_signal_1_18_reg_495;
wire   [255:0] ap_phi_reg_pp0_iter0_r_ref_r_1_reg_504;
reg   [255:0] ap_phi_reg_pp0_iter1_r_ref_r_1_reg_504;
reg   [255:0] ap_phi_reg_pp0_iter2_r_ref_r_1_reg_504;
reg   [255:0] ap_phi_reg_pp0_iter3_r_ref_r_1_reg_504;
reg   [255:0] ap_phi_reg_pp0_iter4_r_ref_r_1_reg_504;
reg   [255:0] ap_phi_reg_pp0_iter5_r_ref_r_1_reg_504;
reg   [255:0] ap_phi_reg_pp0_iter6_r_ref_r_1_reg_504;
reg   [255:0] ap_phi_reg_pp0_iter7_r_ref_r_1_reg_504;
reg   [255:0] ap_phi_reg_pp0_iter8_r_ref_r_1_reg_504;
reg   [255:0] ap_phi_reg_pp0_iter9_r_ref_r_1_reg_504;
reg   [255:0] ap_phi_reg_pp0_iter10_r_ref_r_1_reg_504;
wire   [255:0] ap_phi_reg_pp0_iter0_i_syn_in_rr_1_reg_514;
reg   [255:0] ap_phi_reg_pp0_iter1_i_syn_in_rr_1_reg_514;
reg   [255:0] ap_phi_reg_pp0_iter2_i_syn_in_rr_1_reg_514;
reg   [255:0] ap_phi_reg_pp0_iter3_i_syn_in_rr_1_reg_514;
reg   [255:0] ap_phi_reg_pp0_iter4_i_syn_in_rr_1_reg_514;
reg   [255:0] ap_phi_reg_pp0_iter5_i_syn_in_rr_1_reg_514;
reg   [255:0] ap_phi_reg_pp0_iter6_i_syn_in_rr_1_reg_514;
reg   [255:0] ap_phi_reg_pp0_iter7_i_syn_in_rr_1_reg_514;
reg   [255:0] ap_phi_reg_pp0_iter8_i_syn_in_rr_1_reg_514;
reg   [255:0] ap_phi_reg_pp0_iter9_i_syn_in_rr_1_reg_514;
reg   [255:0] ap_phi_reg_pp0_iter10_i_syn_in_rr_1_reg_514;
wire   [255:0] ap_phi_reg_pp0_iter0_i_syn_ex_rr_1_reg_524;
reg   [255:0] ap_phi_reg_pp0_iter1_i_syn_ex_rr_1_reg_524;
reg   [255:0] ap_phi_reg_pp0_iter2_i_syn_ex_rr_1_reg_524;
reg   [255:0] ap_phi_reg_pp0_iter3_i_syn_ex_rr_1_reg_524;
reg   [255:0] ap_phi_reg_pp0_iter4_i_syn_ex_rr_1_reg_524;
reg   [255:0] ap_phi_reg_pp0_iter5_i_syn_ex_rr_1_reg_524;
reg   [255:0] ap_phi_reg_pp0_iter6_i_syn_ex_rr_1_reg_524;
reg   [255:0] ap_phi_reg_pp0_iter7_i_syn_ex_rr_1_reg_524;
reg   [255:0] ap_phi_reg_pp0_iter8_i_syn_ex_rr_1_reg_524;
reg   [255:0] ap_phi_reg_pp0_iter9_i_syn_ex_rr_1_reg_524;
reg   [255:0] ap_phi_reg_pp0_iter10_i_syn_ex_rr_1_reg_524;
wire   [255:0] ap_phi_reg_pp0_iter0_V_m_r_1_reg_534;
reg   [255:0] ap_phi_reg_pp0_iter1_V_m_r_1_reg_534;
reg   [255:0] ap_phi_reg_pp0_iter2_V_m_r_1_reg_534;
reg   [255:0] ap_phi_reg_pp0_iter3_V_m_r_1_reg_534;
reg   [255:0] ap_phi_reg_pp0_iter4_V_m_r_1_reg_534;
reg   [255:0] ap_phi_reg_pp0_iter5_V_m_r_1_reg_534;
reg   [255:0] ap_phi_reg_pp0_iter6_V_m_r_1_reg_534;
reg   [255:0] ap_phi_reg_pp0_iter7_V_m_r_1_reg_534;
reg   [255:0] ap_phi_reg_pp0_iter8_V_m_r_1_reg_534;
reg   [255:0] ap_phi_reg_pp0_iter9_V_m_r_1_reg_534;
reg   [255:0] ap_phi_reg_pp0_iter10_V_m_r_1_reg_534;
reg   [255:0] ap_phi_mux_num_o_1_phi_fu_547_p4;
wire   [255:0] ap_phi_reg_pp0_iter10_num_o_1_reg_544;
wire   [255:0] num_o_2_fu_1411_p5;
reg   [255:0] ap_phi_mux_num_o_3_phi_fu_557_p6;
wire   [255:0] num_o_4_fu_1459_p5;
wire   [255:0] ap_phi_reg_pp0_iter10_num_o_3_reg_554;
wire   [255:0] num_o_6_fu_1507_p5;
wire   [255:0] ap_phi_reg_pp0_iter0_num_o_5_reg_567;
reg   [255:0] ap_phi_reg_pp0_iter1_num_o_5_reg_567;
reg   [255:0] ap_phi_reg_pp0_iter2_num_o_5_reg_567;
reg   [255:0] ap_phi_reg_pp0_iter3_num_o_5_reg_567;
reg   [255:0] ap_phi_reg_pp0_iter4_num_o_5_reg_567;
reg   [255:0] ap_phi_reg_pp0_iter5_num_o_5_reg_567;
reg   [255:0] ap_phi_reg_pp0_iter6_num_o_5_reg_567;
reg   [255:0] ap_phi_reg_pp0_iter7_num_o_5_reg_567;
reg   [255:0] ap_phi_reg_pp0_iter8_num_o_5_reg_567;
reg   [255:0] ap_phi_reg_pp0_iter9_num_o_5_reg_567;
reg   [255:0] ap_phi_reg_pp0_iter10_num_o_5_reg_567;
reg   [255:0] ap_phi_reg_pp0_iter11_num_o_5_reg_567;
wire   [255:0] ap_phi_reg_pp0_iter11_num_o_7_reg_579;
wire   [255:0] num_o_10_fu_1691_p5;
reg    grp_update_indata_fu_616_ap_start_reg;
reg   [20:0] ap_NS_fsm;
wire    ap_NS_fsm_state2;
reg    grp_update_outdata_fu_629_ap_start_reg;
wire   [63:0] tmp_30_fu_1043_p1;
wire   [63:0] tmp_9_fu_1053_p1;
wire   [63:0] tmp_25_fu_1065_p1;
wire   [63:0] tmp_26_fu_1077_p1;
wire   [63:0] tmp_27_fu_1089_p1;
wire  signed [63:0] output0_8_sum_cast_fu_1395_p1;
wire  signed [63:0] output1_10_sum_cast_fu_1449_p1;
wire  signed [63:0] output1_10_sum1_cast_fu_1497_p1;
wire  signed [63:0] output2_12_sum_cast_fu_1566_p1;
wire  signed [63:0] output2_12_sum1_cast_fu_1597_p1;
wire  signed [63:0] output3_14_sum_cast_fu_1675_p1;
reg    ap_reg_ioackin_stable_para_ARREADY;
reg    ap_reg_ioackin_output0_s_AWREADY;
reg    ap_block_pp0_stage0_01001;
reg    ap_reg_ioackin_output1_s_AWREADY;
reg    ap_reg_ioackin_output0_s_WREADY;
reg    ap_block_pp0_stage1_01001;
reg    ap_reg_ioackin_output1_s_WREADY;
reg    ap_block_state43_io;
reg    ap_block_state49;
reg    ap_block_state48;
reg    ap_block_state44_io;
reg   [255:0] weighted_spikes_ex_1_fu_178;
reg   [255:0] weighted_spikes_in_1_fu_182;
reg   [255:0] I_e_1_fu_186;
reg   [255:0] i_syn_ex_1_fu_190;
reg   [255:0] i_syn_in_1_fu_194;
reg   [255:0] r_ref_1_fu_198;
reg   [255:0] V_m_1_fu_202;
reg   [255:0] weighted_spikes_ex_2_fu_206;
reg   [255:0] weighted_spikes_in_2_fu_210;
reg   [255:0] I_e_2_fu_214;
reg   [255:0] i_syn_ex_2_fu_218;
reg   [255:0] i_syn_in_2_fu_222;
reg   [255:0] r_ref_2_fu_226;
reg   [255:0] V_m_2_fu_230;
wire  signed [31:0] grp_fu_708_p4;
wire  signed [31:0] grp_fu_734_p4;
wire   [31:0] p_neg_fu_915_p2;
wire   [28:0] tmp_32_fu_921_p4;
wire   [29:0] p_lshr_cast_fu_931_p1;
wire   [28:0] tmp_33_fu_941_p4;
wire   [0:0] tmp_12_fu_907_p3;
wire   [29:0] p_neg_t_fu_935_p2;
wire   [29:0] p_lshr_f_cast_fu_951_p1;
wire   [2:0] tmp_17_fu_963_p1;
wire   [2:0] tmp_19_fu_975_p1;
wire   [31:0] p_and_t_fu_979_p3;
wire   [31:0] p_neg_t1_fu_987_p2;
wire   [31:0] p_and_f_fu_967_p3;
wire   [31:0] rmd_fu_993_p3;
wire   [3:0] tmp_28_fu_1005_p1;
wire   [4:0] tmp_23_fu_1001_p1;
wire   [4:0] rmd_0_off_fu_1015_p2;
wire   [3:0] tmp_29_fu_1027_p4;
wire   [31:0] tmp_10_fu_1101_p1;
wire   [31:0] tmp_s_fu_1109_p4;
wire   [31:0] tmp_34_fu_1123_p4;
wire   [31:0] tmp_35_fu_1137_p4;
wire   [31:0] tmp_36_fu_1151_p4;
wire   [31:0] tmp_37_fu_1165_p4;
wire   [31:0] tmp_38_fu_1179_p4;
wire   [31:0] tmp_39_fu_1193_p4;
wire   [31:0] tmp_40_fu_1207_p4;
wire  signed [30:0] time_cast_fu_1221_p1;
wire   [30:0] time_1_fu_1224_p2;
wire   [30:0] i_cast_fu_1243_p1;
wire   [0:0] p_not_fu_1252_p2;
wire   [31:0] tmp_48_fu_1368_p1;
wire  signed [31:0] tmp_67_fu_1382_p1;
wire  signed [32:0] tmp_2_cast_fu_1386_p1;
wire   [32:0] output0_8_sum_fu_1390_p2;
wire   [31:0] tmp_3_fu_1405_p2;
wire   [31:0] tmp_50_fu_1424_p4;
wire  signed [32:0] tmp_10_cast_fu_1440_p1;
wire   [32:0] output1_10_sum_fu_1444_p2;
wire   [31:0] grp_fu_718_p2;
wire   [31:0] tmp_51_fu_1472_p4;
wire  signed [32:0] tmp_12_cast_fu_1488_p1;
wire   [32:0] output1_10_sum1_fu_1492_p2;
wire   [31:0] tmp_56_fu_1520_p4;
wire   [0:0] tmp_15_fu_1530_p2;
wire   [31:0] tmp_57_fu_1541_p4;
wire  signed [32:0] tmp_19_cast_fu_1557_p1;
wire   [32:0] output2_12_sum_fu_1561_p2;
wire   [31:0] grp_fu_744_p2;
wire  signed [32:0] tmp_17_cast_fu_1588_p1;
wire   [32:0] output2_12_sum1_fu_1592_p2;
wire   [31:0] tmp_62_fu_1619_p4;
wire   [0:0] tmp_21_fu_1629_p2;
wire   [31:0] tmp_63_fu_1640_p4;
wire  signed [31:0] tmp_23_cast_fu_1666_p0;
wire  signed [32:0] tmp_23_cast_fu_1666_p1;
wire   [32:0] output3_14_sum_fu_1670_p2;
wire  signed [31:0] tmp_24_fu_1685_p0;
wire   [31:0] tmp_24_fu_1685_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_2404;
reg    ap_condition_1417;
reg    ap_condition_2314;
reg    ap_condition_1429;
reg    ap_condition_2301;
reg    ap_condition_1444;
reg    ap_condition_2336;
reg    ap_condition_1441;
reg    ap_condition_1411;
reg    ap_condition_3399;
reg    ap_condition_3402;
reg    ap_condition_2455;
reg    ap_condition_2497;
reg    ap_condition_2507;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
#0 num_0_data_reg = 32'd0;
#0 num_0_vld_reg = 1'b0;
#0 stable_para_offset_0_data_reg = 32'd0;
#0 stable_para_offset_0_vld_reg = 1'b0;
#0 input00_V_0_data_reg = 32'd0;
#0 input00_V_0_vld_reg = 1'b0;
#0 input01_V_0_data_reg = 32'd0;
#0 input01_V_0_vld_reg = 1'b0;
#0 output0_offset_0_data_reg = 32'd0;
#0 output0_offset_0_vld_reg = 1'b0;
#0 output1_offset_0_data_reg = 32'd0;
#0 output1_offset_0_vld_reg = 1'b0;
#0 output2_s_0_data_reg = 32'd0;
#0 output2_s_0_vld_reg = 1'b0;
#0 output3_s_0_data_reg = 32'd0;
#0 output3_s_0_vld_reg = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 grp_update_indata_fu_616_ap_start_reg = 1'b0;
#0 grp_update_outdata_fu_629_ap_start_reg = 1'b0;
#0 ap_reg_ioackin_stable_para_ARREADY = 1'b0;
#0 ap_reg_ioackin_output0_s_AWREADY = 1'b0;
#0 ap_reg_ioackin_output1_s_AWREADY = 1'b0;
#0 ap_reg_ioackin_output0_s_WREADY = 1'b0;
#0 ap_reg_ioackin_output1_s_WREADY = 1'b0;
end

update_n_ctrl_bus_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
update_n_ctrl_bus_s_axi_U(
    .AWVALID(s_axi_ctrl_bus_AWVALID),
    .AWREADY(s_axi_ctrl_bus_AWREADY),
    .AWADDR(s_axi_ctrl_bus_AWADDR),
    .WVALID(s_axi_ctrl_bus_WVALID),
    .WREADY(s_axi_ctrl_bus_WREADY),
    .WDATA(s_axi_ctrl_bus_WDATA),
    .WSTRB(s_axi_ctrl_bus_WSTRB),
    .ARVALID(s_axi_ctrl_bus_ARVALID),
    .ARREADY(s_axi_ctrl_bus_ARREADY),
    .ARADDR(s_axi_ctrl_bus_ARADDR),
    .RVALID(s_axi_ctrl_bus_RVALID),
    .RREADY(s_axi_ctrl_bus_RREADY),
    .RDATA(s_axi_ctrl_bus_RDATA),
    .RRESP(s_axi_ctrl_bus_RRESP),
    .BVALID(s_axi_ctrl_bus_BVALID),
    .BREADY(s_axi_ctrl_bus_BREADY),
    .BRESP(s_axi_ctrl_bus_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .num(num),
    .stable_para_offset(stable_para_offset),
    .input00_V(input00_V),
    .input01_V(input01_V),
    .output0_offset(output0_offset),
    .output1_offset(output1_offset),
    .output2_s(output2_s),
    .output3_s(output3_s)
);

update_n_stable_para_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 512 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_STABLE_PARA_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_STABLE_PARA_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_STABLE_PARA_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_STABLE_PARA_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_STABLE_PARA_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_STABLE_PARA_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_STABLE_PARA_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_STABLE_PARA_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_STABLE_PARA_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_STABLE_PARA_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_STABLE_PARA_CACHE_VALUE ))
update_n_stable_para_m_axi_U(
    .AWVALID(m_axi_stable_para_AWVALID),
    .AWREADY(m_axi_stable_para_AWREADY),
    .AWADDR(m_axi_stable_para_AWADDR),
    .AWID(m_axi_stable_para_AWID),
    .AWLEN(m_axi_stable_para_AWLEN),
    .AWSIZE(m_axi_stable_para_AWSIZE),
    .AWBURST(m_axi_stable_para_AWBURST),
    .AWLOCK(m_axi_stable_para_AWLOCK),
    .AWCACHE(m_axi_stable_para_AWCACHE),
    .AWPROT(m_axi_stable_para_AWPROT),
    .AWQOS(m_axi_stable_para_AWQOS),
    .AWREGION(m_axi_stable_para_AWREGION),
    .AWUSER(m_axi_stable_para_AWUSER),
    .WVALID(m_axi_stable_para_WVALID),
    .WREADY(m_axi_stable_para_WREADY),
    .WDATA(m_axi_stable_para_WDATA),
    .WSTRB(m_axi_stable_para_WSTRB),
    .WLAST(m_axi_stable_para_WLAST),
    .WID(m_axi_stable_para_WID),
    .WUSER(m_axi_stable_para_WUSER),
    .ARVALID(m_axi_stable_para_ARVALID),
    .ARREADY(m_axi_stable_para_ARREADY),
    .ARADDR(m_axi_stable_para_ARADDR),
    .ARID(m_axi_stable_para_ARID),
    .ARLEN(m_axi_stable_para_ARLEN),
    .ARSIZE(m_axi_stable_para_ARSIZE),
    .ARBURST(m_axi_stable_para_ARBURST),
    .ARLOCK(m_axi_stable_para_ARLOCK),
    .ARCACHE(m_axi_stable_para_ARCACHE),
    .ARPROT(m_axi_stable_para_ARPROT),
    .ARQOS(m_axi_stable_para_ARQOS),
    .ARREGION(m_axi_stable_para_ARREGION),
    .ARUSER(m_axi_stable_para_ARUSER),
    .RVALID(m_axi_stable_para_RVALID),
    .RREADY(m_axi_stable_para_RREADY),
    .RDATA(m_axi_stable_para_RDATA),
    .RLAST(m_axi_stable_para_RLAST),
    .RID(m_axi_stable_para_RID),
    .RUSER(m_axi_stable_para_RUSER),
    .RRESP(m_axi_stable_para_RRESP),
    .BVALID(m_axi_stable_para_BVALID),
    .BREADY(m_axi_stable_para_BREADY),
    .BRESP(m_axi_stable_para_BRESP),
    .BID(m_axi_stable_para_BID),
    .BUSER(m_axi_stable_para_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(stable_para_ARVALID),
    .I_ARREADY(stable_para_ARREADY),
    .I_ARADDR(stable_para_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(stable_para_RVALID),
    .I_RREADY(stable_para_RREADY),
    .I_RDATA(stable_para_RDATA),
    .I_RID(stable_para_RID),
    .I_RUSER(stable_para_RUSER),
    .I_RRESP(stable_para_RRESP),
    .I_RLAST(stable_para_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(stable_para_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(stable_para_WREADY),
    .I_WDATA(512'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(64'd0),
    .I_BVALID(stable_para_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(stable_para_BRESP),
    .I_BID(stable_para_BID),
    .I_BUSER(stable_para_BUSER)
);

update_n_input01_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 1024 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_INPUT01_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_INPUT01_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_INPUT01_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_INPUT01_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_INPUT01_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_INPUT01_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_INPUT01_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_INPUT01_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_INPUT01_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_INPUT01_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_INPUT01_CACHE_VALUE ))
update_n_input01_m_axi_U(
    .AWVALID(m_axi_input01_AWVALID),
    .AWREADY(m_axi_input01_AWREADY),
    .AWADDR(m_axi_input01_AWADDR),
    .AWID(m_axi_input01_AWID),
    .AWLEN(m_axi_input01_AWLEN),
    .AWSIZE(m_axi_input01_AWSIZE),
    .AWBURST(m_axi_input01_AWBURST),
    .AWLOCK(m_axi_input01_AWLOCK),
    .AWCACHE(m_axi_input01_AWCACHE),
    .AWPROT(m_axi_input01_AWPROT),
    .AWQOS(m_axi_input01_AWQOS),
    .AWREGION(m_axi_input01_AWREGION),
    .AWUSER(m_axi_input01_AWUSER),
    .WVALID(m_axi_input01_WVALID),
    .WREADY(m_axi_input01_WREADY),
    .WDATA(m_axi_input01_WDATA),
    .WSTRB(m_axi_input01_WSTRB),
    .WLAST(m_axi_input01_WLAST),
    .WID(m_axi_input01_WID),
    .WUSER(m_axi_input01_WUSER),
    .ARVALID(m_axi_input01_ARVALID),
    .ARREADY(m_axi_input01_ARREADY),
    .ARADDR(m_axi_input01_ARADDR),
    .ARID(m_axi_input01_ARID),
    .ARLEN(m_axi_input01_ARLEN),
    .ARSIZE(m_axi_input01_ARSIZE),
    .ARBURST(m_axi_input01_ARBURST),
    .ARLOCK(m_axi_input01_ARLOCK),
    .ARCACHE(m_axi_input01_ARCACHE),
    .ARPROT(m_axi_input01_ARPROT),
    .ARQOS(m_axi_input01_ARQOS),
    .ARREGION(m_axi_input01_ARREGION),
    .ARUSER(m_axi_input01_ARUSER),
    .RVALID(m_axi_input01_RVALID),
    .RREADY(m_axi_input01_RREADY),
    .RDATA(m_axi_input01_RDATA),
    .RLAST(m_axi_input01_RLAST),
    .RID(m_axi_input01_RID),
    .RUSER(m_axi_input01_RUSER),
    .RRESP(m_axi_input01_RRESP),
    .BVALID(m_axi_input01_BVALID),
    .BREADY(m_axi_input01_BREADY),
    .BRESP(m_axi_input01_BRESP),
    .BID(m_axi_input01_BID),
    .BUSER(m_axi_input01_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(input01_ARVALID),
    .I_ARREADY(input01_ARREADY),
    .I_ARADDR(grp_update_indata_fu_616_m_axi_input00_V_ARADDR),
    .I_ARID(grp_update_indata_fu_616_m_axi_input00_V_ARID),
    .I_ARLEN(grp_update_indata_fu_616_m_axi_input00_V_ARLEN),
    .I_ARSIZE(grp_update_indata_fu_616_m_axi_input00_V_ARSIZE),
    .I_ARLOCK(grp_update_indata_fu_616_m_axi_input00_V_ARLOCK),
    .I_ARCACHE(grp_update_indata_fu_616_m_axi_input00_V_ARCACHE),
    .I_ARQOS(grp_update_indata_fu_616_m_axi_input00_V_ARQOS),
    .I_ARPROT(grp_update_indata_fu_616_m_axi_input00_V_ARPROT),
    .I_ARUSER(grp_update_indata_fu_616_m_axi_input00_V_ARUSER),
    .I_ARBURST(grp_update_indata_fu_616_m_axi_input00_V_ARBURST),
    .I_ARREGION(grp_update_indata_fu_616_m_axi_input00_V_ARREGION),
    .I_RVALID(input01_RVALID),
    .I_RREADY(input01_RREADY),
    .I_RDATA(input01_RDATA),
    .I_RID(input01_RID),
    .I_RUSER(input01_RUSER),
    .I_RRESP(input01_RRESP),
    .I_RLAST(input01_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(input01_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(input01_WREADY),
    .I_WDATA(1024'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(128'd0),
    .I_BVALID(input01_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(input01_BRESP),
    .I_BID(input01_BID),
    .I_BUSER(input01_BUSER)
);

update_n_input00_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 1024 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_INPUT00_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_INPUT00_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_INPUT00_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_INPUT00_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_INPUT00_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_INPUT00_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_INPUT00_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_INPUT00_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_INPUT00_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_INPUT00_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_INPUT00_CACHE_VALUE ))
update_n_input00_m_axi_U(
    .AWVALID(m_axi_input00_AWVALID),
    .AWREADY(m_axi_input00_AWREADY),
    .AWADDR(m_axi_input00_AWADDR),
    .AWID(m_axi_input00_AWID),
    .AWLEN(m_axi_input00_AWLEN),
    .AWSIZE(m_axi_input00_AWSIZE),
    .AWBURST(m_axi_input00_AWBURST),
    .AWLOCK(m_axi_input00_AWLOCK),
    .AWCACHE(m_axi_input00_AWCACHE),
    .AWPROT(m_axi_input00_AWPROT),
    .AWQOS(m_axi_input00_AWQOS),
    .AWREGION(m_axi_input00_AWREGION),
    .AWUSER(m_axi_input00_AWUSER),
    .WVALID(m_axi_input00_WVALID),
    .WREADY(m_axi_input00_WREADY),
    .WDATA(m_axi_input00_WDATA),
    .WSTRB(m_axi_input00_WSTRB),
    .WLAST(m_axi_input00_WLAST),
    .WID(m_axi_input00_WID),
    .WUSER(m_axi_input00_WUSER),
    .ARVALID(m_axi_input00_ARVALID),
    .ARREADY(m_axi_input00_ARREADY),
    .ARADDR(m_axi_input00_ARADDR),
    .ARID(m_axi_input00_ARID),
    .ARLEN(m_axi_input00_ARLEN),
    .ARSIZE(m_axi_input00_ARSIZE),
    .ARBURST(m_axi_input00_ARBURST),
    .ARLOCK(m_axi_input00_ARLOCK),
    .ARCACHE(m_axi_input00_ARCACHE),
    .ARPROT(m_axi_input00_ARPROT),
    .ARQOS(m_axi_input00_ARQOS),
    .ARREGION(m_axi_input00_ARREGION),
    .ARUSER(m_axi_input00_ARUSER),
    .RVALID(m_axi_input00_RVALID),
    .RREADY(m_axi_input00_RREADY),
    .RDATA(m_axi_input00_RDATA),
    .RLAST(m_axi_input00_RLAST),
    .RID(m_axi_input00_RID),
    .RUSER(m_axi_input00_RUSER),
    .RRESP(m_axi_input00_RRESP),
    .BVALID(m_axi_input00_BVALID),
    .BREADY(m_axi_input00_BREADY),
    .BRESP(m_axi_input00_BRESP),
    .BID(m_axi_input00_BID),
    .BUSER(m_axi_input00_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(input00_ARVALID),
    .I_ARREADY(input00_ARREADY),
    .I_ARADDR(grp_update_indata_fu_616_m_axi_input01_V_ARADDR),
    .I_ARID(grp_update_indata_fu_616_m_axi_input01_V_ARID),
    .I_ARLEN(grp_update_indata_fu_616_m_axi_input01_V_ARLEN),
    .I_ARSIZE(grp_update_indata_fu_616_m_axi_input01_V_ARSIZE),
    .I_ARLOCK(grp_update_indata_fu_616_m_axi_input01_V_ARLOCK),
    .I_ARCACHE(grp_update_indata_fu_616_m_axi_input01_V_ARCACHE),
    .I_ARQOS(grp_update_indata_fu_616_m_axi_input01_V_ARQOS),
    .I_ARPROT(grp_update_indata_fu_616_m_axi_input01_V_ARPROT),
    .I_ARUSER(grp_update_indata_fu_616_m_axi_input01_V_ARUSER),
    .I_ARBURST(grp_update_indata_fu_616_m_axi_input01_V_ARBURST),
    .I_ARREGION(grp_update_indata_fu_616_m_axi_input01_V_ARREGION),
    .I_RVALID(input00_RVALID),
    .I_RREADY(input00_RREADY),
    .I_RDATA(input00_RDATA),
    .I_RID(input00_RID),
    .I_RUSER(input00_RUSER),
    .I_RRESP(input00_RRESP),
    .I_RLAST(input00_RLAST),
    .I_AWVALID(input00_AWVALID),
    .I_AWREADY(input00_AWREADY),
    .I_AWADDR(grp_update_outdata_fu_629_m_axi_input01_V_AWADDR),
    .I_AWID(grp_update_outdata_fu_629_m_axi_input01_V_AWID),
    .I_AWLEN(grp_update_outdata_fu_629_m_axi_input01_V_AWLEN),
    .I_AWSIZE(grp_update_outdata_fu_629_m_axi_input01_V_AWSIZE),
    .I_AWLOCK(grp_update_outdata_fu_629_m_axi_input01_V_AWLOCK),
    .I_AWCACHE(grp_update_outdata_fu_629_m_axi_input01_V_AWCACHE),
    .I_AWQOS(grp_update_outdata_fu_629_m_axi_input01_V_AWQOS),
    .I_AWPROT(grp_update_outdata_fu_629_m_axi_input01_V_AWPROT),
    .I_AWUSER(grp_update_outdata_fu_629_m_axi_input01_V_AWUSER),
    .I_AWBURST(grp_update_outdata_fu_629_m_axi_input01_V_AWBURST),
    .I_AWREGION(grp_update_outdata_fu_629_m_axi_input01_V_AWREGION),
    .I_WVALID(input00_WVALID),
    .I_WREADY(input00_WREADY),
    .I_WDATA(grp_update_outdata_fu_629_m_axi_input01_V_WDATA),
    .I_WID(grp_update_outdata_fu_629_m_axi_input01_V_WID),
    .I_WUSER(grp_update_outdata_fu_629_m_axi_input01_V_WUSER),
    .I_WLAST(grp_update_outdata_fu_629_m_axi_input01_V_WLAST),
    .I_WSTRB(grp_update_outdata_fu_629_m_axi_input01_V_WSTRB),
    .I_BVALID(input00_BVALID),
    .I_BREADY(input00_BREADY),
    .I_BRESP(input00_BRESP),
    .I_BID(input00_BID),
    .I_BUSER(input00_BUSER)
);

update_n_output0_s_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUTPUT0_S_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUTPUT0_S_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUTPUT0_S_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUTPUT0_S_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUTPUT0_S_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUTPUT0_S_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUTPUT0_S_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUTPUT0_S_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_OUTPUT0_S_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUTPUT0_S_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUTPUT0_S_CACHE_VALUE ))
update_n_output0_s_m_axi_U(
    .AWVALID(m_axi_output0_s_AWVALID),
    .AWREADY(m_axi_output0_s_AWREADY),
    .AWADDR(m_axi_output0_s_AWADDR),
    .AWID(m_axi_output0_s_AWID),
    .AWLEN(m_axi_output0_s_AWLEN),
    .AWSIZE(m_axi_output0_s_AWSIZE),
    .AWBURST(m_axi_output0_s_AWBURST),
    .AWLOCK(m_axi_output0_s_AWLOCK),
    .AWCACHE(m_axi_output0_s_AWCACHE),
    .AWPROT(m_axi_output0_s_AWPROT),
    .AWQOS(m_axi_output0_s_AWQOS),
    .AWREGION(m_axi_output0_s_AWREGION),
    .AWUSER(m_axi_output0_s_AWUSER),
    .WVALID(m_axi_output0_s_WVALID),
    .WREADY(m_axi_output0_s_WREADY),
    .WDATA(m_axi_output0_s_WDATA),
    .WSTRB(m_axi_output0_s_WSTRB),
    .WLAST(m_axi_output0_s_WLAST),
    .WID(m_axi_output0_s_WID),
    .WUSER(m_axi_output0_s_WUSER),
    .ARVALID(m_axi_output0_s_ARVALID),
    .ARREADY(m_axi_output0_s_ARREADY),
    .ARADDR(m_axi_output0_s_ARADDR),
    .ARID(m_axi_output0_s_ARID),
    .ARLEN(m_axi_output0_s_ARLEN),
    .ARSIZE(m_axi_output0_s_ARSIZE),
    .ARBURST(m_axi_output0_s_ARBURST),
    .ARLOCK(m_axi_output0_s_ARLOCK),
    .ARCACHE(m_axi_output0_s_ARCACHE),
    .ARPROT(m_axi_output0_s_ARPROT),
    .ARQOS(m_axi_output0_s_ARQOS),
    .ARREGION(m_axi_output0_s_ARREGION),
    .ARUSER(m_axi_output0_s_ARUSER),
    .RVALID(m_axi_output0_s_RVALID),
    .RREADY(m_axi_output0_s_RREADY),
    .RDATA(m_axi_output0_s_RDATA),
    .RLAST(m_axi_output0_s_RLAST),
    .RID(m_axi_output0_s_RID),
    .RUSER(m_axi_output0_s_RUSER),
    .RRESP(m_axi_output0_s_RRESP),
    .BVALID(m_axi_output0_s_BVALID),
    .BREADY(m_axi_output0_s_BREADY),
    .BRESP(m_axi_output0_s_BRESP),
    .BID(m_axi_output0_s_BID),
    .BUSER(m_axi_output0_s_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(output0_s_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(output0_s_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(output0_s_RDATA),
    .I_RID(output0_s_RID),
    .I_RUSER(output0_s_RUSER),
    .I_RRESP(output0_s_RRESP),
    .I_RLAST(output0_s_RLAST),
    .I_AWVALID(output0_s_AWVALID),
    .I_AWREADY(output0_s_AWREADY),
    .I_AWADDR(output0_s_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(output0_s_WVALID),
    .I_WREADY(output0_s_WREADY),
    .I_WDATA(output0_s_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(output0_s_BVALID),
    .I_BREADY(output0_s_BREADY),
    .I_BRESP(output0_s_BRESP),
    .I_BID(output0_s_BID),
    .I_BUSER(output0_s_BUSER)
);

update_n_output1_s_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUTPUT1_S_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUTPUT1_S_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUTPUT1_S_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUTPUT1_S_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUTPUT1_S_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUTPUT1_S_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUTPUT1_S_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUTPUT1_S_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_OUTPUT1_S_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUTPUT1_S_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUTPUT1_S_CACHE_VALUE ))
update_n_output1_s_m_axi_U(
    .AWVALID(m_axi_output1_s_AWVALID),
    .AWREADY(m_axi_output1_s_AWREADY),
    .AWADDR(m_axi_output1_s_AWADDR),
    .AWID(m_axi_output1_s_AWID),
    .AWLEN(m_axi_output1_s_AWLEN),
    .AWSIZE(m_axi_output1_s_AWSIZE),
    .AWBURST(m_axi_output1_s_AWBURST),
    .AWLOCK(m_axi_output1_s_AWLOCK),
    .AWCACHE(m_axi_output1_s_AWCACHE),
    .AWPROT(m_axi_output1_s_AWPROT),
    .AWQOS(m_axi_output1_s_AWQOS),
    .AWREGION(m_axi_output1_s_AWREGION),
    .AWUSER(m_axi_output1_s_AWUSER),
    .WVALID(m_axi_output1_s_WVALID),
    .WREADY(m_axi_output1_s_WREADY),
    .WDATA(m_axi_output1_s_WDATA),
    .WSTRB(m_axi_output1_s_WSTRB),
    .WLAST(m_axi_output1_s_WLAST),
    .WID(m_axi_output1_s_WID),
    .WUSER(m_axi_output1_s_WUSER),
    .ARVALID(m_axi_output1_s_ARVALID),
    .ARREADY(m_axi_output1_s_ARREADY),
    .ARADDR(m_axi_output1_s_ARADDR),
    .ARID(m_axi_output1_s_ARID),
    .ARLEN(m_axi_output1_s_ARLEN),
    .ARSIZE(m_axi_output1_s_ARSIZE),
    .ARBURST(m_axi_output1_s_ARBURST),
    .ARLOCK(m_axi_output1_s_ARLOCK),
    .ARCACHE(m_axi_output1_s_ARCACHE),
    .ARPROT(m_axi_output1_s_ARPROT),
    .ARQOS(m_axi_output1_s_ARQOS),
    .ARREGION(m_axi_output1_s_ARREGION),
    .ARUSER(m_axi_output1_s_ARUSER),
    .RVALID(m_axi_output1_s_RVALID),
    .RREADY(m_axi_output1_s_RREADY),
    .RDATA(m_axi_output1_s_RDATA),
    .RLAST(m_axi_output1_s_RLAST),
    .RID(m_axi_output1_s_RID),
    .RUSER(m_axi_output1_s_RUSER),
    .RRESP(m_axi_output1_s_RRESP),
    .BVALID(m_axi_output1_s_BVALID),
    .BREADY(m_axi_output1_s_BREADY),
    .BRESP(m_axi_output1_s_BRESP),
    .BID(m_axi_output1_s_BID),
    .BUSER(m_axi_output1_s_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(output1_s_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(output1_s_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(output1_s_RDATA),
    .I_RID(output1_s_RID),
    .I_RUSER(output1_s_RUSER),
    .I_RRESP(output1_s_RRESP),
    .I_RLAST(output1_s_RLAST),
    .I_AWVALID(output1_s_AWVALID),
    .I_AWREADY(output1_s_AWREADY),
    .I_AWADDR(output1_s_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(output1_s_WVALID),
    .I_WREADY(output1_s_WREADY),
    .I_WDATA(output1_s_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(output1_s_BVALID),
    .I_BREADY(output1_s_BREADY),
    .I_BRESP(output1_s_BRESP),
    .I_BID(output1_s_BID),
    .I_BUSER(output1_s_BUSER)
);

execute grp_execute_fu_594(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .i(grp_execute_fu_594_i),
    .P20_s(P20_s_reg_1936),
    .P22_s(P22_s_reg_1941),
    .P11ex_s(P11ex_s_reg_1956),
    .P11in_s(P11in_s_reg_1961),
    .P21ex_s(P21ex_s_reg_1946),
    .P21in_s(P21in_s_reg_1951),
    .Theta_s(Theta_s_reg_1966),
    .RefractoryCounts_s(RefractoryCounts_s_reg_1971),
    .V_reset_s(V_reset_s_reg_1976),
    .weighted_spikes_ex_s(grp_execute_fu_594_weighted_spikes_ex_s),
    .weighted_spikes_in_s(grp_execute_fu_594_weighted_spikes_in_s),
    .I_e_read(grp_execute_fu_594_I_e_read),
    .i_syn_ex_read(grp_execute_fu_594_i_syn_ex_read),
    .i_syn_in_read(grp_execute_fu_594_i_syn_in_read),
    .r_ref_read(grp_execute_fu_594_r_ref_read),
    .V_m_read(grp_execute_fu_594_V_m_read),
    .ap_return_0(grp_execute_fu_594_ap_return_0),
    .ap_return_1(grp_execute_fu_594_ap_return_1),
    .ap_return_2(grp_execute_fu_594_ap_return_2),
    .ap_return_3(grp_execute_fu_594_ap_return_3),
    .ap_return_4(grp_execute_fu_594_ap_return_4),
    .ap_return_5(grp_execute_fu_594_ap_return_5),
    .ap_ce(grp_execute_fu_594_ap_ce)
);

update_indata grp_update_indata_fu_616(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_update_indata_fu_616_ap_start),
    .ap_done(grp_update_indata_fu_616_ap_done),
    .ap_idle(grp_update_indata_fu_616_ap_idle),
    .ap_ready(grp_update_indata_fu_616_ap_ready),
    .m_axi_input00_V_AWVALID(grp_update_indata_fu_616_m_axi_input00_V_AWVALID),
    .m_axi_input00_V_AWREADY(1'b0),
    .m_axi_input00_V_AWADDR(grp_update_indata_fu_616_m_axi_input00_V_AWADDR),
    .m_axi_input00_V_AWID(grp_update_indata_fu_616_m_axi_input00_V_AWID),
    .m_axi_input00_V_AWLEN(grp_update_indata_fu_616_m_axi_input00_V_AWLEN),
    .m_axi_input00_V_AWSIZE(grp_update_indata_fu_616_m_axi_input00_V_AWSIZE),
    .m_axi_input00_V_AWBURST(grp_update_indata_fu_616_m_axi_input00_V_AWBURST),
    .m_axi_input00_V_AWLOCK(grp_update_indata_fu_616_m_axi_input00_V_AWLOCK),
    .m_axi_input00_V_AWCACHE(grp_update_indata_fu_616_m_axi_input00_V_AWCACHE),
    .m_axi_input00_V_AWPROT(grp_update_indata_fu_616_m_axi_input00_V_AWPROT),
    .m_axi_input00_V_AWQOS(grp_update_indata_fu_616_m_axi_input00_V_AWQOS),
    .m_axi_input00_V_AWREGION(grp_update_indata_fu_616_m_axi_input00_V_AWREGION),
    .m_axi_input00_V_AWUSER(grp_update_indata_fu_616_m_axi_input00_V_AWUSER),
    .m_axi_input00_V_WVALID(grp_update_indata_fu_616_m_axi_input00_V_WVALID),
    .m_axi_input00_V_WREADY(1'b0),
    .m_axi_input00_V_WDATA(grp_update_indata_fu_616_m_axi_input00_V_WDATA),
    .m_axi_input00_V_WSTRB(grp_update_indata_fu_616_m_axi_input00_V_WSTRB),
    .m_axi_input00_V_WLAST(grp_update_indata_fu_616_m_axi_input00_V_WLAST),
    .m_axi_input00_V_WID(grp_update_indata_fu_616_m_axi_input00_V_WID),
    .m_axi_input00_V_WUSER(grp_update_indata_fu_616_m_axi_input00_V_WUSER),
    .m_axi_input00_V_ARVALID(grp_update_indata_fu_616_m_axi_input00_V_ARVALID),
    .m_axi_input00_V_ARREADY(input01_ARREADY),
    .m_axi_input00_V_ARADDR(grp_update_indata_fu_616_m_axi_input00_V_ARADDR),
    .m_axi_input00_V_ARID(grp_update_indata_fu_616_m_axi_input00_V_ARID),
    .m_axi_input00_V_ARLEN(grp_update_indata_fu_616_m_axi_input00_V_ARLEN),
    .m_axi_input00_V_ARSIZE(grp_update_indata_fu_616_m_axi_input00_V_ARSIZE),
    .m_axi_input00_V_ARBURST(grp_update_indata_fu_616_m_axi_input00_V_ARBURST),
    .m_axi_input00_V_ARLOCK(grp_update_indata_fu_616_m_axi_input00_V_ARLOCK),
    .m_axi_input00_V_ARCACHE(grp_update_indata_fu_616_m_axi_input00_V_ARCACHE),
    .m_axi_input00_V_ARPROT(grp_update_indata_fu_616_m_axi_input00_V_ARPROT),
    .m_axi_input00_V_ARQOS(grp_update_indata_fu_616_m_axi_input00_V_ARQOS),
    .m_axi_input00_V_ARREGION(grp_update_indata_fu_616_m_axi_input00_V_ARREGION),
    .m_axi_input00_V_ARUSER(grp_update_indata_fu_616_m_axi_input00_V_ARUSER),
    .m_axi_input00_V_RVALID(input01_RVALID),
    .m_axi_input00_V_RREADY(grp_update_indata_fu_616_m_axi_input00_V_RREADY),
    .m_axi_input00_V_RDATA(input01_RDATA),
    .m_axi_input00_V_RLAST(input01_RLAST),
    .m_axi_input00_V_RID(input01_RID),
    .m_axi_input00_V_RUSER(input01_RUSER),
    .m_axi_input00_V_RRESP(input01_RRESP),
    .m_axi_input00_V_BVALID(1'b0),
    .m_axi_input00_V_BREADY(grp_update_indata_fu_616_m_axi_input00_V_BREADY),
    .m_axi_input00_V_BRESP(2'd0),
    .m_axi_input00_V_BID(1'd0),
    .m_axi_input00_V_BUSER(1'd0),
    .m_axi_input01_V_AWVALID(grp_update_indata_fu_616_m_axi_input01_V_AWVALID),
    .m_axi_input01_V_AWREADY(1'b0),
    .m_axi_input01_V_AWADDR(grp_update_indata_fu_616_m_axi_input01_V_AWADDR),
    .m_axi_input01_V_AWID(grp_update_indata_fu_616_m_axi_input01_V_AWID),
    .m_axi_input01_V_AWLEN(grp_update_indata_fu_616_m_axi_input01_V_AWLEN),
    .m_axi_input01_V_AWSIZE(grp_update_indata_fu_616_m_axi_input01_V_AWSIZE),
    .m_axi_input01_V_AWBURST(grp_update_indata_fu_616_m_axi_input01_V_AWBURST),
    .m_axi_input01_V_AWLOCK(grp_update_indata_fu_616_m_axi_input01_V_AWLOCK),
    .m_axi_input01_V_AWCACHE(grp_update_indata_fu_616_m_axi_input01_V_AWCACHE),
    .m_axi_input01_V_AWPROT(grp_update_indata_fu_616_m_axi_input01_V_AWPROT),
    .m_axi_input01_V_AWQOS(grp_update_indata_fu_616_m_axi_input01_V_AWQOS),
    .m_axi_input01_V_AWREGION(grp_update_indata_fu_616_m_axi_input01_V_AWREGION),
    .m_axi_input01_V_AWUSER(grp_update_indata_fu_616_m_axi_input01_V_AWUSER),
    .m_axi_input01_V_WVALID(grp_update_indata_fu_616_m_axi_input01_V_WVALID),
    .m_axi_input01_V_WREADY(1'b0),
    .m_axi_input01_V_WDATA(grp_update_indata_fu_616_m_axi_input01_V_WDATA),
    .m_axi_input01_V_WSTRB(grp_update_indata_fu_616_m_axi_input01_V_WSTRB),
    .m_axi_input01_V_WLAST(grp_update_indata_fu_616_m_axi_input01_V_WLAST),
    .m_axi_input01_V_WID(grp_update_indata_fu_616_m_axi_input01_V_WID),
    .m_axi_input01_V_WUSER(grp_update_indata_fu_616_m_axi_input01_V_WUSER),
    .m_axi_input01_V_ARVALID(grp_update_indata_fu_616_m_axi_input01_V_ARVALID),
    .m_axi_input01_V_ARREADY(input00_ARREADY),
    .m_axi_input01_V_ARADDR(grp_update_indata_fu_616_m_axi_input01_V_ARADDR),
    .m_axi_input01_V_ARID(grp_update_indata_fu_616_m_axi_input01_V_ARID),
    .m_axi_input01_V_ARLEN(grp_update_indata_fu_616_m_axi_input01_V_ARLEN),
    .m_axi_input01_V_ARSIZE(grp_update_indata_fu_616_m_axi_input01_V_ARSIZE),
    .m_axi_input01_V_ARBURST(grp_update_indata_fu_616_m_axi_input01_V_ARBURST),
    .m_axi_input01_V_ARLOCK(grp_update_indata_fu_616_m_axi_input01_V_ARLOCK),
    .m_axi_input01_V_ARCACHE(grp_update_indata_fu_616_m_axi_input01_V_ARCACHE),
    .m_axi_input01_V_ARPROT(grp_update_indata_fu_616_m_axi_input01_V_ARPROT),
    .m_axi_input01_V_ARQOS(grp_update_indata_fu_616_m_axi_input01_V_ARQOS),
    .m_axi_input01_V_ARREGION(grp_update_indata_fu_616_m_axi_input01_V_ARREGION),
    .m_axi_input01_V_ARUSER(grp_update_indata_fu_616_m_axi_input01_V_ARUSER),
    .m_axi_input01_V_RVALID(input00_RVALID),
    .m_axi_input01_V_RREADY(grp_update_indata_fu_616_m_axi_input01_V_RREADY),
    .m_axi_input01_V_RDATA(input00_RDATA),
    .m_axi_input01_V_RLAST(input00_RLAST),
    .m_axi_input01_V_RID(input00_RID),
    .m_axi_input01_V_RUSER(input00_RUSER),
    .m_axi_input01_V_RRESP(input00_RRESP),
    .m_axi_input01_V_BVALID(1'b0),
    .m_axi_input01_V_BREADY(grp_update_indata_fu_616_m_axi_input01_V_BREADY),
    .m_axi_input01_V_BRESP(2'd0),
    .m_axi_input01_V_BID(1'd0),
    .m_axi_input01_V_BUSER(1'd0),
    .ap_ce(grp_update_indata_fu_616_ap_ce),
    .i(grp_update_indata_fu_616_i),
    .input00_V_offset(grp_update_indata_fu_616_input00_V_offset),
    .input01_V_offset(grp_update_indata_fu_616_input01_V_offset),
    .ap_return_0(grp_update_indata_fu_616_ap_return_0),
    .ap_return_1(grp_update_indata_fu_616_ap_return_1),
    .ap_return_2(grp_update_indata_fu_616_ap_return_2),
    .ap_return_3(grp_update_indata_fu_616_ap_return_3),
    .ap_return_4(grp_update_indata_fu_616_ap_return_4),
    .ap_return_5(grp_update_indata_fu_616_ap_return_5),
    .ap_return_6(grp_update_indata_fu_616_ap_return_6),
    .input00_V_blk_n_AR(grp_update_indata_fu_616_input00_V_blk_n_AR),
    .input00_V_blk_n_R(grp_update_indata_fu_616_input00_V_blk_n_R),
    .input01_V_blk_n_AR(grp_update_indata_fu_616_input01_V_blk_n_AR),
    .input01_V_blk_n_R(grp_update_indata_fu_616_input01_V_blk_n_R)
);

update_outdata grp_update_outdata_fu_629(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_update_outdata_fu_629_ap_start),
    .ap_done(grp_update_outdata_fu_629_ap_done),
    .ap_idle(grp_update_outdata_fu_629_ap_idle),
    .ap_ready(grp_update_outdata_fu_629_ap_ready),
    .m_axi_input01_V_AWVALID(grp_update_outdata_fu_629_m_axi_input01_V_AWVALID),
    .m_axi_input01_V_AWREADY(input00_AWREADY),
    .m_axi_input01_V_AWADDR(grp_update_outdata_fu_629_m_axi_input01_V_AWADDR),
    .m_axi_input01_V_AWID(grp_update_outdata_fu_629_m_axi_input01_V_AWID),
    .m_axi_input01_V_AWLEN(grp_update_outdata_fu_629_m_axi_input01_V_AWLEN),
    .m_axi_input01_V_AWSIZE(grp_update_outdata_fu_629_m_axi_input01_V_AWSIZE),
    .m_axi_input01_V_AWBURST(grp_update_outdata_fu_629_m_axi_input01_V_AWBURST),
    .m_axi_input01_V_AWLOCK(grp_update_outdata_fu_629_m_axi_input01_V_AWLOCK),
    .m_axi_input01_V_AWCACHE(grp_update_outdata_fu_629_m_axi_input01_V_AWCACHE),
    .m_axi_input01_V_AWPROT(grp_update_outdata_fu_629_m_axi_input01_V_AWPROT),
    .m_axi_input01_V_AWQOS(grp_update_outdata_fu_629_m_axi_input01_V_AWQOS),
    .m_axi_input01_V_AWREGION(grp_update_outdata_fu_629_m_axi_input01_V_AWREGION),
    .m_axi_input01_V_AWUSER(grp_update_outdata_fu_629_m_axi_input01_V_AWUSER),
    .m_axi_input01_V_WVALID(grp_update_outdata_fu_629_m_axi_input01_V_WVALID),
    .m_axi_input01_V_WREADY(input00_WREADY),
    .m_axi_input01_V_WDATA(grp_update_outdata_fu_629_m_axi_input01_V_WDATA),
    .m_axi_input01_V_WSTRB(grp_update_outdata_fu_629_m_axi_input01_V_WSTRB),
    .m_axi_input01_V_WLAST(grp_update_outdata_fu_629_m_axi_input01_V_WLAST),
    .m_axi_input01_V_WID(grp_update_outdata_fu_629_m_axi_input01_V_WID),
    .m_axi_input01_V_WUSER(grp_update_outdata_fu_629_m_axi_input01_V_WUSER),
    .m_axi_input01_V_ARVALID(grp_update_outdata_fu_629_m_axi_input01_V_ARVALID),
    .m_axi_input01_V_ARREADY(1'b0),
    .m_axi_input01_V_ARADDR(grp_update_outdata_fu_629_m_axi_input01_V_ARADDR),
    .m_axi_input01_V_ARID(grp_update_outdata_fu_629_m_axi_input01_V_ARID),
    .m_axi_input01_V_ARLEN(grp_update_outdata_fu_629_m_axi_input01_V_ARLEN),
    .m_axi_input01_V_ARSIZE(grp_update_outdata_fu_629_m_axi_input01_V_ARSIZE),
    .m_axi_input01_V_ARBURST(grp_update_outdata_fu_629_m_axi_input01_V_ARBURST),
    .m_axi_input01_V_ARLOCK(grp_update_outdata_fu_629_m_axi_input01_V_ARLOCK),
    .m_axi_input01_V_ARCACHE(grp_update_outdata_fu_629_m_axi_input01_V_ARCACHE),
    .m_axi_input01_V_ARPROT(grp_update_outdata_fu_629_m_axi_input01_V_ARPROT),
    .m_axi_input01_V_ARQOS(grp_update_outdata_fu_629_m_axi_input01_V_ARQOS),
    .m_axi_input01_V_ARREGION(grp_update_outdata_fu_629_m_axi_input01_V_ARREGION),
    .m_axi_input01_V_ARUSER(grp_update_outdata_fu_629_m_axi_input01_V_ARUSER),
    .m_axi_input01_V_RVALID(1'b0),
    .m_axi_input01_V_RREADY(grp_update_outdata_fu_629_m_axi_input01_V_RREADY),
    .m_axi_input01_V_RDATA(1024'd0),
    .m_axi_input01_V_RLAST(1'b0),
    .m_axi_input01_V_RID(1'd0),
    .m_axi_input01_V_RUSER(1'd0),
    .m_axi_input01_V_RRESP(2'd0),
    .m_axi_input01_V_BVALID(input00_BVALID),
    .m_axi_input01_V_BREADY(grp_update_outdata_fu_629_m_axi_input01_V_BREADY),
    .m_axi_input01_V_BRESP(input00_BRESP),
    .m_axi_input01_V_BID(input00_BID),
    .m_axi_input01_V_BUSER(input00_BUSER),
    .ap_ce(grp_update_outdata_fu_629_ap_ce),
    .num(i_reg_462_pp0_iter10_reg),
    .V_m_r_read(ap_phi_reg_pp0_iter10_V_m_r_1_reg_534),
    .i_syn_ex_rr_read(ap_phi_reg_pp0_iter10_i_syn_ex_rr_1_reg_524),
    .i_syn_in_rr_read(ap_phi_reg_pp0_iter10_i_syn_in_rr_1_reg_514),
    .r_ref_r_read(ap_phi_reg_pp0_iter10_r_ref_r_1_reg_504),
    .input01_V_offset(input01_V5_reg_1846),
    .input01_V_blk_n_AW(grp_update_outdata_fu_629_input01_V_blk_n_AW),
    .input01_V_blk_n_W(grp_update_outdata_fu_629_input01_V_blk_n_W),
    .input01_V_blk_n_B(grp_update_outdata_fu_629_input01_V_blk_n_B)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((tmp_8_reg_1992 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((stable_para_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter10_state33)) begin
                ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter9;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end else if (((stable_para_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp0_iter14 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_output0_s_AWREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state42) & (1'b0 == ap_block_state42_io)) | ((1'b0 == ap_block_state43_io) & (1'b1 == ap_CS_fsm_state43)) | ((ap_predicate_op395_writereq_state35 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op394_writereq_state35 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op374_writereq_state34 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            ap_reg_ioackin_output0_s_AWREADY <= 1'b0;
        end else if ((((1'b1 == ap_CS_fsm_state42) & (output0_s_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state43) & (output0_s_AWREADY == 1'b1)) | ((ap_predicate_op395_writereq_state35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (output0_s_AWREADY == 1'b1)) | ((ap_predicate_op394_writereq_state35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (output0_s_AWREADY == 1'b1)) | ((ap_predicate_op374_writereq_state34 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (output0_s_AWREADY == 1'b1)))) begin
            ap_reg_ioackin_output0_s_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_output0_s_WREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_state44_io) & (1'b1 == ap_CS_fsm_state44)) | ((1'b0 == ap_block_state43_io) & (1'b1 == ap_CS_fsm_state43)) | ((ap_predicate_op393_write_state35 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op403_write_state36 == 1'b1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op402_write_state36 == 1'b1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            ap_reg_ioackin_output0_s_WREADY <= 1'b0;
        end else if ((((1'b1 == ap_CS_fsm_state44) & (output0_s_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state43) & (output0_s_WREADY == 1'b1)) | ((ap_predicate_op393_write_state35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (output0_s_WREADY == 1'b1)) | ((ap_predicate_op403_write_state36 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (output0_s_WREADY == 1'b1)) | ((ap_predicate_op402_write_state36 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (output0_s_WREADY == 1'b1)))) begin
            ap_reg_ioackin_output0_s_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_output1_s_AWREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state42) & (1'b0 == ap_block_state42_io)) | ((1'b0 == ap_block_state43_io) & (1'b1 == ap_CS_fsm_state43)) | ((ap_predicate_op399_writereq_state35 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op398_writereq_state35 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op376_writereq_state34 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op375_writereq_state34 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            ap_reg_ioackin_output1_s_AWREADY <= 1'b0;
        end else if ((((1'b1 == ap_CS_fsm_state42) & (output1_s_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state43) & (output1_s_AWREADY == 1'b1)) | ((ap_predicate_op399_writereq_state35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (output1_s_AWREADY == 1'b1)) | ((ap_predicate_op398_writereq_state35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (output1_s_AWREADY == 1'b1)) | ((ap_predicate_op376_writereq_state34 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (output1_s_AWREADY == 1'b1)) | ((ap_predicate_op375_writereq_state34 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (output1_s_AWREADY == 1'b1)))) begin
            ap_reg_ioackin_output1_s_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_output1_s_WREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_state44_io) & (1'b1 == ap_CS_fsm_state44)) | ((1'b0 == ap_block_state43_io) & (1'b1 == ap_CS_fsm_state43)) | ((ap_predicate_op397_write_state35 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op396_write_state35 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op407_write_state36 == 1'b1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op406_write_state36 == 1'b1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            ap_reg_ioackin_output1_s_WREADY <= 1'b0;
        end else if ((((1'b1 == ap_CS_fsm_state44) & (output1_s_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state43) & (output1_s_WREADY == 1'b1)) | ((ap_predicate_op397_write_state35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (output1_s_WREADY == 1'b1)) | ((ap_predicate_op396_write_state35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (output1_s_WREADY == 1'b1)) | ((ap_predicate_op407_write_state36 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (output1_s_WREADY == 1'b1)) | ((ap_predicate_op406_write_state36 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (output1_s_WREADY == 1'b1)))) begin
            ap_reg_ioackin_output1_s_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_stable_para_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            if ((ap_sig_ioackin_stable_para_ARREADY == 1'b1)) begin
                ap_reg_ioackin_stable_para_ARREADY <= 1'b0;
            end else if ((stable_para_ARREADY == 1'b1)) begin
                ap_reg_ioackin_stable_para_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_update_indata_fu_616_ap_start_reg <= 1'b0;
    end else begin
        if ((((tmp_8_fu_1247_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_state1) & (1'b1 == ap_NS_fsm_state2)))) begin
            grp_update_indata_fu_616_ap_start_reg <= 1'b1;
        end else if ((grp_update_indata_fu_616_ap_ready == 1'b1)) begin
            grp_update_indata_fu_616_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_update_outdata_fu_629_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_8_reg_1992_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_update_outdata_fu_629_ap_start_reg <= 1'b1;
        end else if ((grp_update_outdata_fu_629_ap_ready == 1'b1)) begin
            grp_update_outdata_fu_629_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_41_reg_2009_pp0_iter9_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((tmp_41_reg_2009_pp0_iter9_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter10_V_m_r_1_reg_534 <= grp_execute_fu_594_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter10_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter9_V_m_r_1_reg_534;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_41_reg_2009_pp0_iter9_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((tmp_41_reg_2009_pp0_iter9_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter10_i_syn_ex_rr_1_reg_524 <= grp_execute_fu_594_ap_return_1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter10_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter9_i_syn_ex_rr_1_reg_524;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_41_reg_2009_pp0_iter9_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((tmp_41_reg_2009_pp0_iter9_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter10_i_syn_in_rr_1_reg_514 <= grp_execute_fu_594_ap_return_2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter10_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter9_i_syn_in_rr_1_reg_514;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_41_reg_2009_pp0_iter9_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((tmp_41_reg_2009_pp0_iter9_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter10_r_ref_r_1_reg_504 <= grp_execute_fu_594_ap_return_3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter10_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter9_r_ref_r_1_reg_504;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_41_reg_2009_pp0_iter9_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((tmp_41_reg_2009_pp0_iter9_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter10_signal_1_18_reg_495 <= grp_execute_fu_594_ap_return_4;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter10_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter9_signal_1_18_reg_495;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_41_reg_2009_pp0_iter9_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((tmp_41_reg_2009_pp0_iter9_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter10_signal_1_1_reg_486 <= grp_execute_fu_594_ap_return_5;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter10_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter9_signal_1_1_reg_486;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1411)) begin
        if ((1'b1 == ap_condition_1441)) begin
            ap_phi_reg_pp0_iter11_num_o_5_reg_567 <= num_o_9_fu_1576_p5;
        end else if ((1'b1 == ap_condition_2336)) begin
            ap_phi_reg_pp0_iter11_num_o_5_reg_567 <= ap_phi_mux_num_o_3_phi_fu_557_p6;
        end else if ((1'b1 == ap_condition_1444)) begin
            ap_phi_reg_pp0_iter11_num_o_5_reg_567 <= num_o_8_fu_1607_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter11_num_o_5_reg_567 <= ap_phi_reg_pp0_iter10_num_o_5_reg_567;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1992 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_462 <= i_1_reg_2004;
    end else if (((stable_para_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        i_reg_462 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((tmp_22_reg_2212 == 1'd0) & (or_cond2_reg_2208 == 1'd1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)) | ((tmp_22_reg_2212 == 1'd0) & (tmp_14_reg_2000_pp0_iter10_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1))))) begin
        num_o_7_reg_579 <= num_o_10_fu_1691_p5;
    end else if ((((or_cond2_reg_2208 == 1'd0) & (tmp_14_reg_2000_pp0_iter10_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((tmp_22_reg_2212 == 1'd1) & (or_cond2_reg_2208 == 1'd1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)) | ((tmp_14_reg_2000_pp0_iter10_reg == 1'd0) & (tmp_22_reg_2212 == 1'd1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)))))) begin
        num_o_7_reg_579 <= ap_phi_reg_pp0_iter11_num_o_5_reg_567;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        num_o_7_reg_579 <= ap_phi_reg_pp0_iter11_num_o_7_reg_579;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        num_o_reg_474 <= num_o_7_reg_579;
    end else if (((stable_para_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        num_o_reg_474 <= 256'd79228162532711081671548469249;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_predicate_op253_call_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((stable_para_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        I_e_1_fu_186 <= reg_768;
        V_m_1_fu_202 <= reg_784;
        i_syn_ex_1_fu_190 <= reg_772;
        i_syn_in_1_fu_194 <= reg_776;
        r_ref_1_fu_198 <= reg_780;
        weighted_spikes_ex_1_fu_178 <= reg_760;
        weighted_spikes_in_1_fu_182 <= reg_764;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op243_call_state21 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        I_e_2_fu_214 <= grp_update_indata_fu_616_ap_return_2;
        V_m_2_fu_230 <= grp_update_indata_fu_616_ap_return_6;
        i_syn_ex_2_fu_218 <= grp_update_indata_fu_616_ap_return_3;
        i_syn_in_2_fu_222 <= grp_update_indata_fu_616_ap_return_4;
        r_ref_2_fu_226 <= grp_update_indata_fu_616_ap_return_5;
        weighted_spikes_ex_2_fu_206 <= grp_update_indata_fu_616_ap_return_0;
        weighted_spikes_in_2_fu_210 <= grp_update_indata_fu_616_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((stable_para_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        P11ex_s_reg_1956 <= P11ex_s_fu_1161_p1;
        P11in_s_reg_1961 <= P11in_s_fu_1175_p1;
        P20_s_reg_1936 <= P20_s_fu_1105_p1;
        P21ex_s_reg_1946 <= P21ex_s_fu_1133_p1;
        P21in_s_reg_1951 <= P21in_s_fu_1147_p1;
        P22_s_reg_1941 <= P22_s_fu_1119_p1;
        RefractoryCounts_s_reg_1971 <= RefractoryCounts_s_fu_1203_p1;
        Theta_s_reg_1966 <= Theta_s_fu_1189_p1;
        V_reset_s_reg_1976 <= V_reset_s_fu_1217_p1;
        output0_addr_1_reg_1930[29 : 0] <= tmp_27_fu_1089_p1[29 : 0];
        output0_addr_reg_1919[29 : 0] <= tmp_26_fu_1077_p1[29 : 0];
        output1_addr_1_reg_1907[29 : 0] <= tmp_25_fu_1065_p1[29 : 0];
        output1_addr_reg_1894[29 : 0] <= tmp_9_fu_1053_p1[29 : 0];
        time_2_reg_1981 <= time_2_fu_1230_p3;
        tmp_25_cast_reg_1901[29 : 0] <= tmp_25_cast_fu_1068_p1[29 : 0];
        tmp_26_cast_reg_1913[29 : 0] <= tmp_26_cast_fu_1080_p1[29 : 0];
        tmp_27_cast_reg_1925[29 : 0] <= tmp_27_cast_fu_1092_p1[29 : 0];
        tmp_6_reg_1986 <= tmp_6_fu_1237_p2;
        tmp_9_cast_reg_1889[29 : 0] <= tmp_9_cast_fu_1056_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter10_num_o_5_reg_567 <= ap_phi_reg_pp0_iter9_num_o_5_reg_567;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter1_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter0_V_m_r_1_reg_534;
        ap_phi_reg_pp0_iter1_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter0_i_syn_ex_rr_1_reg_524;
        ap_phi_reg_pp0_iter1_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter0_i_syn_in_rr_1_reg_514;
        ap_phi_reg_pp0_iter1_num_o_5_reg_567 <= ap_phi_reg_pp0_iter0_num_o_5_reg_567;
        ap_phi_reg_pp0_iter1_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter0_r_ref_r_1_reg_504;
        ap_phi_reg_pp0_iter1_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter0_signal_1_18_reg_495;
        ap_phi_reg_pp0_iter1_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter0_signal_1_1_reg_486;
        i_1_reg_2004 <= i_1_fu_1267_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter2_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter1_V_m_r_1_reg_534;
        ap_phi_reg_pp0_iter2_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter1_i_syn_ex_rr_1_reg_524;
        ap_phi_reg_pp0_iter2_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter1_i_syn_in_rr_1_reg_514;
        ap_phi_reg_pp0_iter2_num_o_5_reg_567 <= ap_phi_reg_pp0_iter1_num_o_5_reg_567;
        ap_phi_reg_pp0_iter2_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter1_r_ref_r_1_reg_504;
        ap_phi_reg_pp0_iter2_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter1_signal_1_18_reg_495;
        ap_phi_reg_pp0_iter2_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter1_signal_1_1_reg_486;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter3_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter2_V_m_r_1_reg_534;
        ap_phi_reg_pp0_iter3_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter2_i_syn_ex_rr_1_reg_524;
        ap_phi_reg_pp0_iter3_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter2_i_syn_in_rr_1_reg_514;
        ap_phi_reg_pp0_iter3_num_o_5_reg_567 <= ap_phi_reg_pp0_iter2_num_o_5_reg_567;
        ap_phi_reg_pp0_iter3_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter2_r_ref_r_1_reg_504;
        ap_phi_reg_pp0_iter3_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter2_signal_1_18_reg_495;
        ap_phi_reg_pp0_iter3_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter2_signal_1_1_reg_486;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter4_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter3_V_m_r_1_reg_534;
        ap_phi_reg_pp0_iter4_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter3_i_syn_ex_rr_1_reg_524;
        ap_phi_reg_pp0_iter4_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter3_i_syn_in_rr_1_reg_514;
        ap_phi_reg_pp0_iter4_num_o_5_reg_567 <= ap_phi_reg_pp0_iter3_num_o_5_reg_567;
        ap_phi_reg_pp0_iter4_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter3_r_ref_r_1_reg_504;
        ap_phi_reg_pp0_iter4_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter3_signal_1_18_reg_495;
        ap_phi_reg_pp0_iter4_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter3_signal_1_1_reg_486;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter5_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter4_V_m_r_1_reg_534;
        ap_phi_reg_pp0_iter5_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter4_i_syn_ex_rr_1_reg_524;
        ap_phi_reg_pp0_iter5_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter4_i_syn_in_rr_1_reg_514;
        ap_phi_reg_pp0_iter5_num_o_5_reg_567 <= ap_phi_reg_pp0_iter4_num_o_5_reg_567;
        ap_phi_reg_pp0_iter5_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter4_r_ref_r_1_reg_504;
        ap_phi_reg_pp0_iter5_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter4_signal_1_18_reg_495;
        ap_phi_reg_pp0_iter5_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter4_signal_1_1_reg_486;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter6_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter5_V_m_r_1_reg_534;
        ap_phi_reg_pp0_iter6_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter5_i_syn_ex_rr_1_reg_524;
        ap_phi_reg_pp0_iter6_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter5_i_syn_in_rr_1_reg_514;
        ap_phi_reg_pp0_iter6_num_o_5_reg_567 <= ap_phi_reg_pp0_iter5_num_o_5_reg_567;
        ap_phi_reg_pp0_iter6_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter5_r_ref_r_1_reg_504;
        ap_phi_reg_pp0_iter6_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter5_signal_1_18_reg_495;
        ap_phi_reg_pp0_iter6_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter5_signal_1_1_reg_486;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter7_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter6_V_m_r_1_reg_534;
        ap_phi_reg_pp0_iter7_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter6_i_syn_ex_rr_1_reg_524;
        ap_phi_reg_pp0_iter7_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter6_i_syn_in_rr_1_reg_514;
        ap_phi_reg_pp0_iter7_num_o_5_reg_567 <= ap_phi_reg_pp0_iter6_num_o_5_reg_567;
        ap_phi_reg_pp0_iter7_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter6_r_ref_r_1_reg_504;
        ap_phi_reg_pp0_iter7_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter6_signal_1_18_reg_495;
        ap_phi_reg_pp0_iter7_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter6_signal_1_1_reg_486;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter8_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter7_V_m_r_1_reg_534;
        ap_phi_reg_pp0_iter8_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter7_i_syn_ex_rr_1_reg_524;
        ap_phi_reg_pp0_iter8_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter7_i_syn_in_rr_1_reg_514;
        ap_phi_reg_pp0_iter8_num_o_5_reg_567 <= ap_phi_reg_pp0_iter7_num_o_5_reg_567;
        ap_phi_reg_pp0_iter8_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter7_r_ref_r_1_reg_504;
        ap_phi_reg_pp0_iter8_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter7_signal_1_18_reg_495;
        ap_phi_reg_pp0_iter8_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter7_signal_1_1_reg_486;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter9_V_m_r_1_reg_534 <= ap_phi_reg_pp0_iter8_V_m_r_1_reg_534;
        ap_phi_reg_pp0_iter9_i_syn_ex_rr_1_reg_524 <= ap_phi_reg_pp0_iter8_i_syn_ex_rr_1_reg_524;
        ap_phi_reg_pp0_iter9_i_syn_in_rr_1_reg_514 <= ap_phi_reg_pp0_iter8_i_syn_in_rr_1_reg_514;
        ap_phi_reg_pp0_iter9_num_o_5_reg_567 <= ap_phi_reg_pp0_iter8_num_o_5_reg_567;
        ap_phi_reg_pp0_iter9_r_ref_r_1_reg_504 <= ap_phi_reg_pp0_iter8_r_ref_r_1_reg_504;
        ap_phi_reg_pp0_iter9_signal_1_18_reg_495 <= ap_phi_reg_pp0_iter8_signal_1_18_reg_495;
        ap_phi_reg_pp0_iter9_signal_1_1_reg_486 <= ap_phi_reg_pp0_iter8_signal_1_1_reg_486;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_fu_1247_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1996 <= brmerge_fu_1257_p2;
        tmp_14_reg_2000 <= tmp_14_fu_1262_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1996_pp0_iter10_reg <= brmerge_reg_1996_pp0_iter9_reg;
        brmerge_reg_1996_pp0_iter11_reg <= brmerge_reg_1996_pp0_iter10_reg;
        brmerge_reg_1996_pp0_iter12_reg <= brmerge_reg_1996_pp0_iter11_reg;
        brmerge_reg_1996_pp0_iter13_reg <= brmerge_reg_1996_pp0_iter12_reg;
        brmerge_reg_1996_pp0_iter14_reg <= brmerge_reg_1996_pp0_iter13_reg;
        brmerge_reg_1996_pp0_iter1_reg <= brmerge_reg_1996;
        brmerge_reg_1996_pp0_iter2_reg <= brmerge_reg_1996_pp0_iter1_reg;
        brmerge_reg_1996_pp0_iter3_reg <= brmerge_reg_1996_pp0_iter2_reg;
        brmerge_reg_1996_pp0_iter4_reg <= brmerge_reg_1996_pp0_iter3_reg;
        brmerge_reg_1996_pp0_iter5_reg <= brmerge_reg_1996_pp0_iter4_reg;
        brmerge_reg_1996_pp0_iter6_reg <= brmerge_reg_1996_pp0_iter5_reg;
        brmerge_reg_1996_pp0_iter7_reg <= brmerge_reg_1996_pp0_iter6_reg;
        brmerge_reg_1996_pp0_iter8_reg <= brmerge_reg_1996_pp0_iter7_reg;
        brmerge_reg_1996_pp0_iter9_reg <= brmerge_reg_1996_pp0_iter8_reg;
        i_reg_462_pp0_iter10_reg <= i_reg_462_pp0_iter9_reg;
        i_reg_462_pp0_iter1_reg <= i_reg_462;
        i_reg_462_pp0_iter2_reg <= i_reg_462_pp0_iter1_reg;
        i_reg_462_pp0_iter3_reg <= i_reg_462_pp0_iter2_reg;
        i_reg_462_pp0_iter4_reg <= i_reg_462_pp0_iter3_reg;
        i_reg_462_pp0_iter5_reg <= i_reg_462_pp0_iter4_reg;
        i_reg_462_pp0_iter6_reg <= i_reg_462_pp0_iter5_reg;
        i_reg_462_pp0_iter7_reg <= i_reg_462_pp0_iter6_reg;
        i_reg_462_pp0_iter8_reg <= i_reg_462_pp0_iter7_reg;
        i_reg_462_pp0_iter9_reg <= i_reg_462_pp0_iter8_reg;
        tmp_14_reg_2000_pp0_iter10_reg <= tmp_14_reg_2000_pp0_iter9_reg;
        tmp_14_reg_2000_pp0_iter11_reg <= tmp_14_reg_2000_pp0_iter10_reg;
        tmp_14_reg_2000_pp0_iter12_reg <= tmp_14_reg_2000_pp0_iter11_reg;
        tmp_14_reg_2000_pp0_iter13_reg <= tmp_14_reg_2000_pp0_iter12_reg;
        tmp_14_reg_2000_pp0_iter14_reg <= tmp_14_reg_2000_pp0_iter13_reg;
        tmp_14_reg_2000_pp0_iter1_reg <= tmp_14_reg_2000;
        tmp_14_reg_2000_pp0_iter2_reg <= tmp_14_reg_2000_pp0_iter1_reg;
        tmp_14_reg_2000_pp0_iter3_reg <= tmp_14_reg_2000_pp0_iter2_reg;
        tmp_14_reg_2000_pp0_iter4_reg <= tmp_14_reg_2000_pp0_iter3_reg;
        tmp_14_reg_2000_pp0_iter5_reg <= tmp_14_reg_2000_pp0_iter4_reg;
        tmp_14_reg_2000_pp0_iter6_reg <= tmp_14_reg_2000_pp0_iter5_reg;
        tmp_14_reg_2000_pp0_iter7_reg <= tmp_14_reg_2000_pp0_iter6_reg;
        tmp_14_reg_2000_pp0_iter8_reg <= tmp_14_reg_2000_pp0_iter7_reg;
        tmp_14_reg_2000_pp0_iter9_reg <= tmp_14_reg_2000_pp0_iter8_reg;
        tmp_41_reg_2009_pp0_iter5_reg <= tmp_41_reg_2009;
        tmp_41_reg_2009_pp0_iter6_reg <= tmp_41_reg_2009_pp0_iter5_reg;
        tmp_41_reg_2009_pp0_iter7_reg <= tmp_41_reg_2009_pp0_iter6_reg;
        tmp_41_reg_2009_pp0_iter8_reg <= tmp_41_reg_2009_pp0_iter7_reg;
        tmp_41_reg_2009_pp0_iter9_reg <= tmp_41_reg_2009_pp0_iter8_reg;
        tmp_8_reg_1992 <= tmp_8_fu_1247_p2;
        tmp_8_reg_1992_pp0_iter10_reg <= tmp_8_reg_1992_pp0_iter9_reg;
        tmp_8_reg_1992_pp0_iter11_reg <= tmp_8_reg_1992_pp0_iter10_reg;
        tmp_8_reg_1992_pp0_iter12_reg <= tmp_8_reg_1992_pp0_iter11_reg;
        tmp_8_reg_1992_pp0_iter13_reg <= tmp_8_reg_1992_pp0_iter12_reg;
        tmp_8_reg_1992_pp0_iter14_reg <= tmp_8_reg_1992_pp0_iter13_reg;
        tmp_8_reg_1992_pp0_iter1_reg <= tmp_8_reg_1992;
        tmp_8_reg_1992_pp0_iter2_reg <= tmp_8_reg_1992_pp0_iter1_reg;
        tmp_8_reg_1992_pp0_iter3_reg <= tmp_8_reg_1992_pp0_iter2_reg;
        tmp_8_reg_1992_pp0_iter4_reg <= tmp_8_reg_1992_pp0_iter3_reg;
        tmp_8_reg_1992_pp0_iter5_reg <= tmp_8_reg_1992_pp0_iter4_reg;
        tmp_8_reg_1992_pp0_iter6_reg <= tmp_8_reg_1992_pp0_iter5_reg;
        tmp_8_reg_1992_pp0_iter7_reg <= tmp_8_reg_1992_pp0_iter6_reg;
        tmp_8_reg_1992_pp0_iter8_reg <= tmp_8_reg_1992_pp0_iter7_reg;
        tmp_8_reg_1992_pp0_iter9_reg <= tmp_8_reg_1992_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_reg_1878 <= icmp_fu_1037_p2;
        input00_V3_reg_1852 <= {{input00_V_0_data_reg[31:7]}};
        input01_V5_reg_1846 <= {{input01_V_0_data_reg[31:7]}};
        output0_offset7_reg_1840 <= {{output0_offset_0_data_reg[31:2]}};
        output1_offset9_reg_1834 <= {{output1_offset_0_data_reg[31:2]}};
        output2_1_reg_1828 <= {{output2_s_0_data_reg[31:2]}};
        output3_1_reg_1822 <= {{output3_s_0_data_reg[31:2]}};
        stable_para_offset1_reg_1857 <= {{stable_para_offset_0_data_reg[31:6]}};
        time_s_reg_1862 <= time_s_fu_955_p3;
        tmp_7_reg_1873 <= tmp_7_fu_1021_p2;
        tmp_reg_1867 <= tmp_fu_1009_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (input00_V_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (input00_V_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (input00_V_0_vld_reg == 1'b1)))) begin
        input00_V_0_data_reg <= input00_V;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (input01_V_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (input01_V_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (input01_V_0_vld_reg == 1'b1)))) begin
        input01_V_0_data_reg <= input01_V;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (num_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (num_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (num_0_vld_reg == 1'b1)))) begin
        num_0_data_reg <= num;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_14_reg_2000_pp0_iter10_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        or_cond1_reg_2178 <= or_cond1_fu_1536_p2;
        or_cond2_reg_2208 <= or_cond2_fu_1635_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        or_cond1_reg_2178_pp0_iter11_reg <= or_cond1_reg_2178;
        or_cond1_reg_2178_pp0_iter12_reg <= or_cond1_reg_2178_pp0_iter11_reg;
        or_cond1_reg_2178_pp0_iter13_reg <= or_cond1_reg_2178_pp0_iter12_reg;
        or_cond2_reg_2208_pp0_iter11_reg <= or_cond2_reg_2208;
        or_cond2_reg_2208_pp0_iter12_reg <= or_cond2_reg_2208_pp0_iter11_reg;
        or_cond2_reg_2208_pp0_iter13_reg <= or_cond2_reg_2208_pp0_iter12_reg;
        reg_788_pp0_iter11_reg <= reg_788;
        tmp_16_reg_2182_pp0_iter11_reg <= tmp_16_reg_2182;
        tmp_16_reg_2182_pp0_iter12_reg <= tmp_16_reg_2182_pp0_iter11_reg;
        tmp_16_reg_2182_pp0_iter13_reg <= tmp_16_reg_2182_pp0_iter12_reg;
        tmp_1_reg_2143_pp0_iter11_reg <= tmp_1_reg_2143;
        tmp_1_reg_2143_pp0_iter12_reg <= tmp_1_reg_2143_pp0_iter11_reg;
        tmp_1_reg_2143_pp0_iter13_reg <= tmp_1_reg_2143_pp0_iter12_reg;
        tmp_22_reg_2212_pp0_iter11_reg <= tmp_22_reg_2212;
        tmp_22_reg_2212_pp0_iter12_reg <= tmp_22_reg_2212_pp0_iter11_reg;
        tmp_22_reg_2212_pp0_iter13_reg <= tmp_22_reg_2212_pp0_iter12_reg;
        tmp_4_reg_2158_pp0_iter11_reg <= tmp_4_reg_2158;
        tmp_4_reg_2158_pp0_iter12_reg <= tmp_4_reg_2158_pp0_iter11_reg;
        tmp_4_reg_2158_pp0_iter13_reg <= tmp_4_reg_2158_pp0_iter12_reg;
        tmp_5_reg_2168_pp0_iter11_reg <= tmp_5_reg_2168;
        tmp_5_reg_2168_pp0_iter12_reg <= tmp_5_reg_2168_pp0_iter11_reg;
        tmp_5_reg_2168_pp0_iter13_reg <= tmp_5_reg_2168_pp0_iter12_reg;
        tmp_65_reg_2216_pp0_iter11_reg <= tmp_65_reg_2216;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1372_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        output0_addr_2_reg_2152 <= output0_8_sum_cast_fu_1395_p1;
        tmp_49_reg_2147 <= tmp_49_fu_1378_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_fu_1434_p2 == 1'd0) & (brmerge_reg_1996_pp0_iter10_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        output0_addr_3_reg_2162 <= output1_10_sum_cast_fu_1449_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (((tmp_5_fu_1482_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (tmp_4_fu_1434_p2 == 1'd1)) | ((tmp_5_fu_1482_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (brmerge_reg_1996_pp0_iter10_reg == 1'd1))))) begin
        output0_addr_4_reg_2172 <= output1_10_sum1_cast_fu_1497_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (output0_offset_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (output0_offset_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (output0_offset_0_vld_reg == 1'b1)))) begin
        output0_offset_0_data_reg <= output0_offset;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_14_reg_2000_pp0_iter10_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (or_cond1_fu_1536_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        output1_addr_2_reg_2197 <= output2_12_sum1_cast_fu_1597_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (((tmp_14_reg_2000_pp0_iter10_reg == 1'd0) & (tmp_16_fu_1551_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)) | ((or_cond1_fu_1536_p2 == 1'd0) & (tmp_16_fu_1551_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1))))) begin
        output1_addr_3_reg_2186 <= output2_12_sum_cast_fu_1566_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((tmp_22_reg_2212 == 1'd0) & (or_cond2_reg_2208 == 1'd1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)) | ((tmp_22_reg_2212 == 1'd0) & (tmp_14_reg_2000_pp0_iter10_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1))))) begin
        output1_addr_4_reg_2226 <= output3_14_sum_cast_fu_1675_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (output1_offset_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (output1_offset_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (output1_offset_0_vld_reg == 1'b1)))) begin
        output1_offset_0_data_reg <= output1_offset;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (output2_s_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (output2_s_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (output2_s_0_vld_reg == 1'b1)))) begin
        output2_s_0_data_reg <= output2_s;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (output3_s_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (output3_s_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (output3_s_0_vld_reg == 1'b1)))) begin
        output3_s_0_data_reg <= output3_s;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | (~(((grp_update_indata_fu_616_input01_V_blk_n_R & grp_update_indata_fu_616_input01_V_blk_n_AR) == 1'b0) | ((grp_update_indata_fu_616_input00_V_blk_n_R & grp_update_indata_fu_616_input00_V_blk_n_AR) == 1'b0)) & (1'b1 == ap_CS_fsm_state10)))) begin
        reg_760 <= grp_update_indata_fu_616_ap_return_0;
        reg_764 <= grp_update_indata_fu_616_ap_return_1;
        reg_768 <= grp_update_indata_fu_616_ap_return_2;
        reg_772 <= grp_update_indata_fu_616_ap_return_3;
        reg_776 <= grp_update_indata_fu_616_ap_return_4;
        reg_780 <= grp_update_indata_fu_616_ap_return_5;
        reg_784 <= grp_update_indata_fu_616_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_4_fu_1434_p2 == 1'd0) & (brmerge_reg_1996_pp0_iter10_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (((tmp_5_fu_1482_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (tmp_4_fu_1434_p2 == 1'd1)) | ((tmp_5_fu_1482_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (brmerge_reg_1996_pp0_iter10_reg == 1'd1)))))) begin
        reg_788 <= {{ap_phi_reg_pp0_iter10_signal_1_1_reg_486[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_14_reg_2000_pp0_iter10_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (or_cond1_fu_1536_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (((tmp_14_reg_2000_pp0_iter10_reg == 1'd0) & (tmp_16_fu_1551_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)) | ((or_cond1_fu_1536_p2 == 1'd0) & (tmp_16_fu_1551_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)))))) begin
        reg_794 <= {{ap_phi_reg_pp0_iter10_signal_1_1_reg_486[95:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (stable_para_offset_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (stable_para_offset_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (stable_para_offset_0_vld_reg == 1'b1)))) begin
        stable_para_offset_0_data_reg <= stable_para_offset;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (((tmp_14_reg_2000_pp0_iter10_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)) | ((or_cond1_fu_1536_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1))))) begin
        tmp_16_reg_2182 <= tmp_16_fu_1551_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_reg_2143 <= tmp_1_fu_1372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (((tmp_14_reg_2000_pp0_iter10_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)) | ((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (or_cond2_fu_1635_p2 == 1'd1))))) begin
        tmp_22_reg_2212 <= tmp_22_fu_1650_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1992_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_41_reg_2009 <= tmp_41_fu_1273_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (1'b0 == ap_block_state42_io))) begin
        tmp_44_reg_2237 <= {{num_o_reg_474[63:32]}};
        tmp_45_reg_2242 <= {{num_o_reg_474[95:64]}};
        tmp_46_reg_2247 <= {{num_o_reg_474[127:96]}};
        tmp_47_reg_2232 <= tmp_47_fu_1704_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_reg_1996_pp0_iter10_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_4_reg_2158 <= tmp_4_fu_1434_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (tmp_4_fu_1434_p2 == 1'd1)) | ((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (brmerge_reg_1996_pp0_iter10_reg == 1'd1))))) begin
        tmp_5_reg_2168 <= tmp_5_fu_1482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond2_reg_2208 == 1'd0) & (tmp_14_reg_2000_pp0_iter10_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_64_reg_2221 <= {{ap_phi_reg_pp0_iter11_num_o_5_reg_567[127:96]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (((tmp_14_reg_2000_pp0_iter10_reg == 1'd0) & (tmp_22_fu_1650_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)) | ((tmp_22_fu_1650_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (or_cond2_fu_1635_p2 == 1'd1))))) begin
        tmp_65_reg_2216 <= {{ap_phi_reg_pp0_iter10_signal_1_1_reg_486[127:96]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        ap_condition_pp0_exit_iter10_state33 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter10_state33 = 1'b0;
    end
end

always @ (*) begin
    if ((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_8_reg_1992 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_466_p4 = i_1_reg_2004;
    end else begin
        ap_phi_mux_i_phi_fu_466_p4 = i_reg_462;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2404)) begin
        if ((tmp_1_fu_1372_p2 == 1'd0)) begin
            ap_phi_mux_num_o_1_phi_fu_547_p4 = num_o_2_fu_1411_p5;
        end else if ((tmp_1_fu_1372_p2 == 1'd1)) begin
            ap_phi_mux_num_o_1_phi_fu_547_p4 = ap_phi_mux_num_o_phi_fu_478_p4;
        end else begin
            ap_phi_mux_num_o_1_phi_fu_547_p4 = ap_phi_reg_pp0_iter10_num_o_1_reg_544;
        end
    end else begin
        ap_phi_mux_num_o_1_phi_fu_547_p4 = ap_phi_reg_pp0_iter10_num_o_1_reg_544;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2301)) begin
        if ((1'b1 == ap_condition_1429)) begin
            ap_phi_mux_num_o_3_phi_fu_557_p6 = num_o_6_fu_1507_p5;
        end else if ((1'b1 == ap_condition_2314)) begin
            ap_phi_mux_num_o_3_phi_fu_557_p6 = ap_phi_mux_num_o_1_phi_fu_547_p4;
        end else if ((1'b1 == ap_condition_1417)) begin
            ap_phi_mux_num_o_3_phi_fu_557_p6 = num_o_4_fu_1459_p5;
        end else begin
            ap_phi_mux_num_o_3_phi_fu_557_p6 = ap_phi_reg_pp0_iter10_num_o_3_reg_554;
        end
    end else begin
        ap_phi_mux_num_o_3_phi_fu_557_p6 = ap_phi_reg_pp0_iter10_num_o_3_reg_554;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_mux_num_o_phi_fu_478_p4 = num_o_7_reg_579;
    end else begin
        ap_phi_mux_num_o_phi_fu_478_p4 = num_o_reg_474;
    end
end

always @ (*) begin
    if ((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_output0_s_AWREADY == 1'b0)) begin
        ap_sig_ioackin_output0_s_AWREADY = output0_s_AWREADY;
    end else begin
        ap_sig_ioackin_output0_s_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_output0_s_WREADY == 1'b0)) begin
        ap_sig_ioackin_output0_s_WREADY = output0_s_WREADY;
    end else begin
        ap_sig_ioackin_output0_s_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_output1_s_AWREADY == 1'b0)) begin
        ap_sig_ioackin_output1_s_AWREADY = output1_s_AWREADY;
    end else begin
        ap_sig_ioackin_output1_s_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_output1_s_WREADY == 1'b0)) begin
        ap_sig_ioackin_output1_s_WREADY = output1_s_WREADY;
    end else begin
        ap_sig_ioackin_output1_s_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_stable_para_ARREADY == 1'b0)) begin
        ap_sig_ioackin_stable_para_ARREADY = stable_para_ARREADY;
    end else begin
        ap_sig_ioackin_stable_para_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3402)) begin
            grp_execute_fu_594_I_e_read = I_e_1_fu_186;
        end else if ((1'b1 == ap_condition_3399)) begin
            grp_execute_fu_594_I_e_read = I_e_2_fu_214;
        end else begin
            grp_execute_fu_594_I_e_read = 'bx;
        end
    end else begin
        grp_execute_fu_594_I_e_read = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3402)) begin
            grp_execute_fu_594_V_m_read = V_m_1_fu_202;
        end else if ((1'b1 == ap_condition_3399)) begin
            grp_execute_fu_594_V_m_read = V_m_2_fu_230;
        end else begin
            grp_execute_fu_594_V_m_read = 'bx;
        end
    end else begin
        grp_execute_fu_594_V_m_read = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_execute_fu_594_ap_ce = 1'b1;
    end else begin
        grp_execute_fu_594_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3402)) begin
            grp_execute_fu_594_i = i_reg_462_pp0_iter4_reg;
        end else if ((1'b1 == ap_condition_3399)) begin
            grp_execute_fu_594_i = i_reg_462_pp0_iter3_reg;
        end else begin
            grp_execute_fu_594_i = 'bx;
        end
    end else begin
        grp_execute_fu_594_i = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3402)) begin
            grp_execute_fu_594_i_syn_ex_read = i_syn_ex_1_fu_190;
        end else if ((1'b1 == ap_condition_3399)) begin
            grp_execute_fu_594_i_syn_ex_read = i_syn_ex_2_fu_218;
        end else begin
            grp_execute_fu_594_i_syn_ex_read = 'bx;
        end
    end else begin
        grp_execute_fu_594_i_syn_ex_read = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3402)) begin
            grp_execute_fu_594_i_syn_in_read = i_syn_in_1_fu_194;
        end else if ((1'b1 == ap_condition_3399)) begin
            grp_execute_fu_594_i_syn_in_read = i_syn_in_2_fu_222;
        end else begin
            grp_execute_fu_594_i_syn_in_read = 'bx;
        end
    end else begin
        grp_execute_fu_594_i_syn_in_read = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3402)) begin
            grp_execute_fu_594_r_ref_read = r_ref_1_fu_198;
        end else if ((1'b1 == ap_condition_3399)) begin
            grp_execute_fu_594_r_ref_read = r_ref_2_fu_226;
        end else begin
            grp_execute_fu_594_r_ref_read = 'bx;
        end
    end else begin
        grp_execute_fu_594_r_ref_read = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3402)) begin
            grp_execute_fu_594_weighted_spikes_ex_s = weighted_spikes_ex_1_fu_178;
        end else if ((1'b1 == ap_condition_3399)) begin
            grp_execute_fu_594_weighted_spikes_ex_s = weighted_spikes_ex_2_fu_206;
        end else begin
            grp_execute_fu_594_weighted_spikes_ex_s = 'bx;
        end
    end else begin
        grp_execute_fu_594_weighted_spikes_ex_s = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3402)) begin
            grp_execute_fu_594_weighted_spikes_in_s = weighted_spikes_in_1_fu_182;
        end else if ((1'b1 == ap_condition_3399)) begin
            grp_execute_fu_594_weighted_spikes_in_s = weighted_spikes_in_2_fu_210;
        end else begin
            grp_execute_fu_594_weighted_spikes_in_s = 'bx;
        end
    end else begin
        grp_execute_fu_594_weighted_spikes_in_s = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & ((tmp_8_reg_1992_pp0_iter4_reg == 1'd1) | (tmp_8_reg_1992_pp0_iter3_reg == 1'd1) | (tmp_8_reg_1992_pp0_iter2_reg == 1'd1) | (tmp_8_reg_1992_pp0_iter1_reg == 1'd1) | (tmp_8_reg_1992 == 1'd1))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & ((tmp_8_reg_1992_pp0_iter3_reg == 1'd1) | (tmp_8_reg_1992_pp0_iter2_reg == 1'd1) | (tmp_8_reg_1992_pp0_iter1_reg == 1'd1) | (tmp_8_reg_1992 == 1'd1))) | ((1'b1 == ap_CS_fsm_state4) & (ap_sig_ioackin_stable_para_ARREADY == 1'b1)))) begin
        grp_update_indata_fu_616_ap_ce = 1'b1;
    end else begin
        grp_update_indata_fu_616_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_update_indata_fu_616_i = i_reg_462;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_update_indata_fu_616_i = 30'd0;
    end else begin
        grp_update_indata_fu_616_i = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_update_indata_fu_616_input00_V_offset = input00_V3_reg_1852;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_update_indata_fu_616_input00_V_offset = {{input00_V_0_data_reg[31:7]}};
    end else begin
        grp_update_indata_fu_616_input00_V_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_update_indata_fu_616_input01_V_offset = input01_V5_reg_1846;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_update_indata_fu_616_input01_V_offset = {{input01_V_0_data_reg[31:7]}};
    end else begin
        grp_update_indata_fu_616_input01_V_offset = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & ((tmp_8_reg_1992_pp0_iter13_reg == 1'd1) | (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) | (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) | (tmp_8_reg_1992_pp0_iter12_reg == 1'd1))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & ((tmp_8_reg_1992_pp0_iter13_reg == 1'd1) | (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) | (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) | (tmp_8_reg_1992_pp0_iter12_reg == 1'd1))))) begin
        grp_update_outdata_fu_629_ap_ce = 1'b1;
    end else begin
        grp_update_outdata_fu_629_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_8_reg_1992_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((tmp_8_reg_1992_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_8_reg_1992 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input00_ARVALID = grp_update_indata_fu_616_m_axi_input01_V_ARVALID;
    end else begin
        input00_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter12_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
        input00_AWVALID = grp_update_outdata_fu_629_m_axi_input01_V_AWVALID;
    end else begin
        input00_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter12_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
        input00_BREADY = grp_update_outdata_fu_629_m_axi_input01_V_BREADY;
    end else begin
        input00_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_8_reg_1992_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((tmp_8_reg_1992_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_8_reg_1992 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input00_RREADY = grp_update_indata_fu_616_m_axi_input01_V_RREADY;
    end else begin
        input00_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
        input00_V_0_ack_out = 1'b1;
    end else begin
        input00_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter12_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
        input00_WVALID = grp_update_outdata_fu_629_m_axi_input01_V_WVALID;
    end else begin
        input00_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_8_reg_1992 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input00_blk_n_AR = grp_update_indata_fu_616_input01_V_blk_n_AR;
    end else begin
        input00_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input00_blk_n_AW = grp_update_outdata_fu_629_input01_V_blk_n_AW;
    end else begin
        input00_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input00_blk_n_B = grp_update_outdata_fu_629_input01_V_blk_n_B;
    end else begin
        input00_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_8_reg_1992 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input00_blk_n_R = grp_update_indata_fu_616_input01_V_blk_n_R;
    end else begin
        input00_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input00_blk_n_W = grp_update_outdata_fu_629_input01_V_blk_n_W;
    end else begin
        input00_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_8_reg_1992_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((tmp_8_reg_1992_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_8_reg_1992 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input01_ARVALID = grp_update_indata_fu_616_m_axi_input00_V_ARVALID;
    end else begin
        input01_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_8_reg_1992_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_reg_1992_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((tmp_8_reg_1992_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_8_reg_1992 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input01_RREADY = grp_update_indata_fu_616_m_axi_input00_V_RREADY;
    end else begin
        input01_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
        input01_V_0_ack_out = 1'b1;
    end else begin
        input01_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_8_reg_1992 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input01_blk_n_AR = grp_update_indata_fu_616_input00_V_blk_n_AR;
    end else begin
        input01_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_8_reg_1992 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input01_blk_n_R = grp_update_indata_fu_616_input00_V_blk_n_R;
    end else begin
        input01_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
        num_0_ack_out = 1'b1;
    end else begin
        num_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
        output0_offset_0_ack_out = 1'b1;
    end else begin
        output0_offset_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_output0_s_AWREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state43)) begin
            output0_s_AWADDR = output0_addr_reg_1919;
        end else if ((1'b1 == ap_CS_fsm_state42)) begin
            output0_s_AWADDR = output0_addr_1_reg_1930;
        end else if ((1'b1 == ap_condition_2507)) begin
            output0_s_AWADDR = output0_addr_4_reg_2172;
        end else if ((1'b1 == ap_condition_2497)) begin
            output0_s_AWADDR = output0_addr_3_reg_2162;
        end else if ((1'b1 == ap_condition_2455)) begin
            output0_s_AWADDR = output0_addr_2_reg_2152;
        end else begin
            output0_s_AWADDR = 'bx;
        end
    end else begin
        output0_s_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_output0_s_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state42)) | ((ap_reg_ioackin_output0_s_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state43)) | ((ap_predicate_op395_writereq_state35 == 1'b1) & (ap_reg_ioackin_output0_s_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_predicate_op394_writereq_state35 == 1'b1) & (ap_reg_ioackin_output0_s_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_predicate_op374_writereq_state34 == 1'b1) & (ap_reg_ioackin_output0_s_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output0_s_AWVALID = 1'b1;
    end else begin
        output0_s_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state48)) | (~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49)) | ((ap_predicate_op441_writeresp_state41 == 1'b1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op440_writeresp_state41 == 1'b1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op433_writeresp_state40 == 1'b1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output0_s_BREADY = 1'b1;
    end else begin
        output0_s_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_output0_s_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state44))) begin
        output0_s_WDATA = tmp_44_reg_2237;
    end else if (((ap_reg_ioackin_output0_s_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state43))) begin
        output0_s_WDATA = tmp_47_reg_2232;
    end else if ((((ap_predicate_op403_write_state36 == 1'b1) & (ap_reg_ioackin_output0_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_predicate_op402_write_state36 == 1'b1) & (ap_reg_ioackin_output0_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output0_s_WDATA = reg_788_pp0_iter11_reg;
    end else if (((ap_predicate_op393_write_state35 == 1'b1) & (ap_reg_ioackin_output0_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output0_s_WDATA = tmp_49_reg_2147;
    end else begin
        output0_s_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_output0_s_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state44)) | ((ap_reg_ioackin_output0_s_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state43)) | ((ap_predicate_op393_write_state35 == 1'b1) & (ap_reg_ioackin_output0_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_predicate_op403_write_state36 == 1'b1) & (ap_reg_ioackin_output0_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_predicate_op402_write_state36 == 1'b1) & (ap_reg_ioackin_output0_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output0_s_WVALID = 1'b1;
    end else begin
        output0_s_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state43) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((tmp_5_reg_2168 == 1'd0) & (tmp_4_reg_2158 == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)) | ((tmp_5_reg_2168 == 1'd0) & (brmerge_reg_1996_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)))) | ((tmp_4_reg_2158 == 1'd0) & (brmerge_reg_1996_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_1_reg_2143 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output0_s_blk_n_AW = m_axi_output0_s_AWREADY;
    end else begin
        output0_s_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state49) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((tmp_5_reg_2168_pp0_iter13_reg == 1'd0) & (tmp_4_reg_2158_pp0_iter13_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter14_reg == 1'd1)) | ((tmp_5_reg_2168_pp0_iter13_reg == 1'd0) & (brmerge_reg_1996_pp0_iter14_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter14_reg == 1'd1)))) | ((tmp_4_reg_2158_pp0_iter13_reg == 1'd0) & (brmerge_reg_1996_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter14_reg == 1'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_1_reg_2143_pp0_iter13_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output0_s_blk_n_B = m_axi_output0_s_BVALID;
    end else begin
        output0_s_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | ((tmp_1_reg_2143 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_5_reg_2168_pp0_iter11_reg == 1'd0) & (tmp_4_reg_2158_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)) | ((tmp_5_reg_2168_pp0_iter11_reg == 1'd0) & (brmerge_reg_1996_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)))) | ((tmp_4_reg_2158_pp0_iter11_reg == 1'd0) & (brmerge_reg_1996_pp0_iter11_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output0_s_blk_n_W = m_axi_output0_s_WREADY;
    end else begin
        output0_s_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
        output1_offset_0_ack_out = 1'b1;
    end else begin
        output1_offset_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_output1_s_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state42))) begin
        output1_s_AWADDR = output1_addr_1_reg_1907;
    end else if (((ap_predicate_op399_writereq_state35 == 1'b1) & (ap_reg_ioackin_output1_s_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output1_s_AWADDR = output1_addr_4_reg_2226;
    end else if ((((ap_reg_ioackin_output1_s_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state43)) | ((ap_predicate_op398_writereq_state35 == 1'b1) & (ap_reg_ioackin_output1_s_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        output1_s_AWADDR = output1_addr_reg_1894;
    end else if (((ap_predicate_op376_writereq_state34 == 1'b1) & (ap_reg_ioackin_output1_s_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output1_s_AWADDR = output1_addr_2_reg_2197;
    end else if (((ap_predicate_op375_writereq_state34 == 1'b1) & (ap_reg_ioackin_output1_s_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output1_s_AWADDR = output1_addr_3_reg_2186;
    end else begin
        output1_s_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_output1_s_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state42)) | ((ap_reg_ioackin_output1_s_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state43)) | ((ap_predicate_op399_writereq_state35 == 1'b1) & (ap_reg_ioackin_output1_s_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_predicate_op398_writereq_state35 == 1'b1) & (ap_reg_ioackin_output1_s_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_predicate_op376_writereq_state34 == 1'b1) & (ap_reg_ioackin_output1_s_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_predicate_op375_writereq_state34 == 1'b1) & (ap_reg_ioackin_output1_s_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output1_s_AWVALID = 1'b1;
    end else begin
        output1_s_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state48)) | (~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49)) | ((ap_predicate_op443_writeresp_state41 == 1'b1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op442_writeresp_state41 == 1'b1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op437_writeresp_state40 == 1'b1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op436_writeresp_state40 == 1'b1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output1_s_BREADY = 1'b1;
    end else begin
        output1_s_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_output1_s_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state44))) begin
        output1_s_WDATA = tmp_46_reg_2247;
    end else if (((ap_reg_ioackin_output1_s_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state43))) begin
        output1_s_WDATA = tmp_45_reg_2242;
    end else if (((ap_predicate_op407_write_state36 == 1'b1) & (ap_reg_ioackin_output1_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output1_s_WDATA = tmp_65_reg_2216_pp0_iter11_reg;
    end else if (((ap_predicate_op406_write_state36 == 1'b1) & (ap_reg_ioackin_output1_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output1_s_WDATA = tmp_64_reg_2221;
    end else if ((((ap_predicate_op397_write_state35 == 1'b1) & (ap_reg_ioackin_output1_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_predicate_op396_write_state35 == 1'b1) & (ap_reg_ioackin_output1_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        output1_s_WDATA = reg_794;
    end else begin
        output1_s_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_output1_s_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state44)) | ((ap_reg_ioackin_output1_s_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state43)) | ((ap_predicate_op397_write_state35 == 1'b1) & (ap_reg_ioackin_output1_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_predicate_op396_write_state35 == 1'b1) & (ap_reg_ioackin_output1_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_predicate_op407_write_state36 == 1'b1) & (ap_reg_ioackin_output1_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_predicate_op406_write_state36 == 1'b1) & (ap_reg_ioackin_output1_s_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output1_s_WVALID = 1'b1;
    end else begin
        output1_s_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state43) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((tmp_22_reg_2212 == 1'd0) & (or_cond2_reg_2208 == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)) | ((tmp_22_reg_2212 == 1'd0) & (tmp_14_reg_2000_pp0_iter11_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)))) | ((or_cond2_reg_2208 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (tmp_14_reg_2000_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_16_reg_2182 == 1'd0) & (or_cond1_reg_2178 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)) | ((tmp_16_reg_2182 == 1'd0) & (tmp_14_reg_2000_pp0_iter10_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)))) | ((or_cond1_reg_2178 == 1'd1) & (tmp_14_reg_2000_pp0_iter10_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output1_s_blk_n_AW = m_axi_output1_s_AWREADY;
    end else begin
        output1_s_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state49) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((tmp_22_reg_2212_pp0_iter13_reg == 1'd0) & (or_cond2_reg_2208_pp0_iter13_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter14_reg == 1'd1)) | ((tmp_22_reg_2212_pp0_iter13_reg == 1'd0) & (tmp_14_reg_2000_pp0_iter14_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter14_reg == 1'd1)))) | ((or_cond2_reg_2208_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (tmp_14_reg_2000_pp0_iter14_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter14_reg == 1'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_16_reg_2182_pp0_iter13_reg == 1'd0) & (or_cond1_reg_2178_pp0_iter13_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter13_reg == 1'd1)) | ((tmp_16_reg_2182_pp0_iter13_reg == 1'd0) & (tmp_14_reg_2000_pp0_iter13_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter13_reg == 1'd1)))) | ((or_cond1_reg_2178_pp0_iter13_reg == 1'd1) & (tmp_14_reg_2000_pp0_iter13_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output1_s_blk_n_B = m_axi_output1_s_BVALID;
    end else begin
        output1_s_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((tmp_16_reg_2182 == 1'd0) & (tmp_14_reg_2000_pp0_iter11_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)) | ((tmp_16_reg_2182 == 1'd0) & (or_cond1_reg_2178 == 1'd0) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)))) | ((1'b0 == ap_block_pp0_stage1) & (or_cond1_reg_2178 == 1'd1) & (tmp_14_reg_2000_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_22_reg_2212_pp0_iter11_reg == 1'd0) & (or_cond2_reg_2208_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)) | ((tmp_22_reg_2212_pp0_iter11_reg == 1'd0) & (tmp_14_reg_2000_pp0_iter11_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)))) | ((or_cond2_reg_2208_pp0_iter11_reg == 1'd0) & (tmp_14_reg_2000_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output1_s_blk_n_W = m_axi_output1_s_WREADY;
    end else begin
        output1_s_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
        output2_s_0_ack_out = 1'b1;
    end else begin
        output2_s_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
        output3_s_0_ack_out = 1'b1;
    end else begin
        output3_s_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_stable_para_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state4))) begin
        stable_para_ARVALID = 1'b1;
    end else begin
        stable_para_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((stable_para_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        stable_para_RREADY = 1'b1;
    end else begin
        stable_para_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        stable_para_blk_n_AR = m_axi_stable_para_ARREADY;
    end else begin
        stable_para_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        stable_para_blk_n_R = m_axi_stable_para_RVALID;
    end else begin
        stable_para_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
        stable_para_offset_0_ack_out = 1'b1;
    end else begin
        stable_para_offset_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if ((~(((grp_update_indata_fu_616_input01_V_blk_n_R & grp_update_indata_fu_616_input01_V_blk_n_AR) == 1'b0) | ((grp_update_indata_fu_616_input00_V_blk_n_R & grp_update_indata_fu_616_input00_V_blk_n_AR) == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (ap_sig_ioackin_stable_para_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if ((~(((grp_update_indata_fu_616_input01_V_blk_n_R & grp_update_indata_fu_616_input01_V_blk_n_AR) == 1'b0) | ((grp_update_indata_fu_616_input00_V_blk_n_R & grp_update_indata_fu_616_input00_V_blk_n_AR) == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((stable_para_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter9 == 1'b0)) & ~((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter9 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (1'b0 == ap_block_state42_io))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((1'b0 == ap_block_state43_io) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((1'b0 == ap_block_state44_io) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if ((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if ((~((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign P11ex_s_fu_1161_p1 = tmp_36_fu_1151_p4;

assign P11in_s_fu_1175_p1 = tmp_37_fu_1165_p4;

assign P20_s_fu_1105_p1 = tmp_10_fu_1101_p1;

assign P21ex_s_fu_1133_p1 = tmp_34_fu_1123_p4;

assign P21in_s_fu_1147_p1 = tmp_35_fu_1137_p4;

assign P22_s_fu_1119_p1 = tmp_s_fu_1109_p4;

assign RefractoryCounts_s_fu_1203_p1 = tmp_39_fu_1193_p4;

assign Theta_s_fu_1189_p1 = tmp_38_fu_1179_p4;

assign V_reset_s_fu_1217_p1 = tmp_40_fu_1207_p4;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state2 = ap_NS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter14 == 1'b1) & (((tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & ((grp_update_outdata_fu_629_input01_V_blk_n_W & grp_update_outdata_fu_629_input01_V_blk_n_B & grp_update_outdata_fu_629_input01_V_blk_n_AW) == 1'b0)) | ((ap_predicate_op437_writeresp_state40 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op436_writeresp_state40 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op433_writeresp_state40 == 1'b1) & (output0_s_BVALID == 1'b0)))) | ((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & ((grp_update_outdata_fu_629_input01_V_blk_n_W & grp_update_outdata_fu_629_input01_V_blk_n_B & grp_update_outdata_fu_629_input01_V_blk_n_AW) == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((tmp_8_reg_1992 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((grp_update_indata_fu_616_input01_V_blk_n_R & grp_update_indata_fu_616_input01_V_blk_n_AR) == 1'b0) | ((grp_update_indata_fu_616_input00_V_blk_n_R & grp_update_indata_fu_616_input00_V_blk_n_AR) == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state36_io) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (((tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & ((grp_update_outdata_fu_629_input01_V_blk_n_W & grp_update_outdata_fu_629_input01_V_blk_n_B & grp_update_outdata_fu_629_input01_V_blk_n_AW) == 1'b0)) | ((ap_predicate_op437_writeresp_state40 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op436_writeresp_state40 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op433_writeresp_state40 == 1'b1) & (output0_s_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter11 == 1'b1) & ((1'b1 == ap_block_state34_io) | ((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & ((grp_update_outdata_fu_629_input01_V_blk_n_W & grp_update_outdata_fu_629_input01_V_blk_n_B & grp_update_outdata_fu_629_input01_V_blk_n_AW) == 1'b0)))) | ((tmp_8_reg_1992 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((grp_update_indata_fu_616_input01_V_blk_n_R & grp_update_indata_fu_616_input01_V_blk_n_AR) == 1'b0) | ((grp_update_indata_fu_616_input00_V_blk_n_R & grp_update_indata_fu_616_input00_V_blk_n_AR) == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state36_io) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (((tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & ((grp_update_outdata_fu_629_input01_V_blk_n_W & grp_update_outdata_fu_629_input01_V_blk_n_B & grp_update_outdata_fu_629_input01_V_blk_n_AW) == 1'b0)) | ((ap_predicate_op437_writeresp_state40 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op436_writeresp_state40 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op433_writeresp_state40 == 1'b1) & (output0_s_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter11 == 1'b1) & ((1'b1 == ap_block_state34_io) | ((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & ((grp_update_outdata_fu_629_input01_V_blk_n_W & grp_update_outdata_fu_629_input01_V_blk_n_B & grp_update_outdata_fu_629_input01_V_blk_n_AW) == 1'b0)))) | ((tmp_8_reg_1992 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((grp_update_indata_fu_616_input01_V_blk_n_R & grp_update_indata_fu_616_input01_V_blk_n_AR) == 1'b0) | ((grp_update_indata_fu_616_input00_V_blk_n_R & grp_update_indata_fu_616_input00_V_blk_n_AR) == 1'b0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((ap_enable_reg_pp0_iter14 == 1'b1) & (((ap_predicate_op443_writeresp_state41 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op442_writeresp_state41 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op441_writeresp_state41 == 1'b1) & (output0_s_BVALID == 1'b0)) | ((ap_predicate_op440_writeresp_state41 == 1'b1) & (output0_s_BVALID == 1'b0)))) | ((tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & ((grp_update_outdata_fu_629_input01_V_blk_n_W & grp_update_outdata_fu_629_input01_V_blk_n_B & grp_update_outdata_fu_629_input01_V_blk_n_AW) == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (((grp_update_indata_fu_616_input01_V_blk_n_R & grp_update_indata_fu_616_input01_V_blk_n_AR) == 1'b0) | ((grp_update_indata_fu_616_input00_V_blk_n_R & grp_update_indata_fu_616_input00_V_blk_n_AR) == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter14 == 1'b1) & (((ap_predicate_op443_writeresp_state41 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op442_writeresp_state41 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op441_writeresp_state41 == 1'b1) & (output0_s_BVALID == 1'b0)) | ((ap_predicate_op440_writeresp_state41 == 1'b1) & (output0_s_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter11 == 1'b1) & ((1'b1 == ap_block_state35_io) | ((tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & ((grp_update_outdata_fu_629_input01_V_blk_n_W & grp_update_outdata_fu_629_input01_V_blk_n_B & grp_update_outdata_fu_629_input01_V_blk_n_AW) == 1'b0)))) | ((tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (((grp_update_indata_fu_616_input01_V_blk_n_R & grp_update_indata_fu_616_input01_V_blk_n_AR) == 1'b0) | ((grp_update_indata_fu_616_input00_V_blk_n_R & grp_update_indata_fu_616_input00_V_blk_n_AR) == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter14 == 1'b1) & (((ap_predicate_op443_writeresp_state41 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op442_writeresp_state41 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op441_writeresp_state41 == 1'b1) & (output0_s_BVALID == 1'b0)) | ((ap_predicate_op440_writeresp_state41 == 1'b1) & (output0_s_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter11 == 1'b1) & ((1'b1 == ap_block_state35_io) | ((tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & ((grp_update_outdata_fu_629_input01_V_blk_n_W & grp_update_outdata_fu_629_input01_V_blk_n_B & grp_update_outdata_fu_629_input01_V_blk_n_AW) == 1'b0)))) | ((tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (((grp_update_indata_fu_616_input01_V_blk_n_R & grp_update_indata_fu_616_input01_V_blk_n_AR) == 1'b0) | ((grp_update_indata_fu_616_input00_V_blk_n_R & grp_update_indata_fu_616_input00_V_blk_n_AR) == 1'b0))));
end

always @ (*) begin
    ap_block_state10 = (((grp_update_indata_fu_616_input01_V_blk_n_R & grp_update_indata_fu_616_input01_V_blk_n_AR) == 1'b0) | ((grp_update_indata_fu_616_input00_V_blk_n_R & grp_update_indata_fu_616_input00_V_blk_n_AR) == 1'b0));
end

assign ap_block_state12_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter1 = ((tmp_8_reg_1992 == 1'd1) & (((grp_update_indata_fu_616_input01_V_blk_n_R & grp_update_indata_fu_616_input01_V_blk_n_AR) == 1'b0) | ((grp_update_indata_fu_616_input00_V_blk_n_R & grp_update_indata_fu_616_input00_V_blk_n_AR) == 1'b0)));
end

assign ap_block_state15_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_pp0_stage1_iter4 = ((tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (((grp_update_indata_fu_616_input01_V_blk_n_R & grp_update_indata_fu_616_input01_V_blk_n_AR) == 1'b0) | ((grp_update_indata_fu_616_input00_V_blk_n_R & grp_update_indata_fu_616_input00_V_blk_n_AR) == 1'b0)));
end

assign ap_block_state22_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3 = (((grp_update_indata_fu_616_input01_V_blk_n_R & grp_update_indata_fu_616_input01_V_blk_n_AR) == 1'b0) | ((grp_update_indata_fu_616_input00_V_blk_n_R & grp_update_indata_fu_616_input00_V_blk_n_AR) == 1'b0));
end

assign ap_block_state30_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state34_io = (((ap_predicate_op376_writereq_state34 == 1'b1) & (ap_sig_ioackin_output1_s_AWREADY == 1'b0)) | ((ap_predicate_op375_writereq_state34 == 1'b1) & (ap_sig_ioackin_output1_s_AWREADY == 1'b0)) | ((ap_predicate_op374_writereq_state34 == 1'b1) & (ap_sig_ioackin_output0_s_AWREADY == 1'b0)));
end

always @ (*) begin
    ap_block_state34_pp0_stage0_iter11 = ((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & ((grp_update_outdata_fu_629_input01_V_blk_n_W & grp_update_outdata_fu_629_input01_V_blk_n_B & grp_update_outdata_fu_629_input01_V_blk_n_AW) == 1'b0));
end

always @ (*) begin
    ap_block_state35_io = (((ap_predicate_op397_write_state35 == 1'b1) & (ap_sig_ioackin_output1_s_WREADY == 1'b0)) | ((ap_predicate_op396_write_state35 == 1'b1) & (ap_sig_ioackin_output1_s_WREADY == 1'b0)) | ((ap_predicate_op393_write_state35 == 1'b1) & (ap_sig_ioackin_output0_s_WREADY == 1'b0)) | ((ap_predicate_op399_writereq_state35 == 1'b1) & (ap_sig_ioackin_output1_s_AWREADY == 1'b0)) | ((ap_predicate_op398_writereq_state35 == 1'b1) & (ap_sig_ioackin_output1_s_AWREADY == 1'b0)) | ((ap_predicate_op395_writereq_state35 == 1'b1) & (ap_sig_ioackin_output0_s_AWREADY == 1'b0)) | ((ap_predicate_op394_writereq_state35 == 1'b1) & (ap_sig_ioackin_output0_s_AWREADY == 1'b0)));
end

always @ (*) begin
    ap_block_state35_pp0_stage1_iter11 = ((tmp_8_reg_1992_pp0_iter11_reg == 1'd1) & ((grp_update_outdata_fu_629_input01_V_blk_n_W & grp_update_outdata_fu_629_input01_V_blk_n_B & grp_update_outdata_fu_629_input01_V_blk_n_AW) == 1'b0));
end

always @ (*) begin
    ap_block_state36_io = (((ap_predicate_op407_write_state36 == 1'b1) & (ap_sig_ioackin_output1_s_WREADY == 1'b0)) | ((ap_predicate_op406_write_state36 == 1'b1) & (ap_sig_ioackin_output1_s_WREADY == 1'b0)) | ((ap_predicate_op403_write_state36 == 1'b1) & (ap_sig_ioackin_output0_s_WREADY == 1'b0)) | ((ap_predicate_op402_write_state36 == 1'b1) & (ap_sig_ioackin_output0_s_WREADY == 1'b0)));
end

assign ap_block_state36_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state40_pp0_stage0_iter14 = (((tmp_8_reg_1992_pp0_iter13_reg == 1'd1) & ((grp_update_outdata_fu_629_input01_V_blk_n_W & grp_update_outdata_fu_629_input01_V_blk_n_B & grp_update_outdata_fu_629_input01_V_blk_n_AW) == 1'b0)) | ((ap_predicate_op437_writeresp_state40 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op436_writeresp_state40 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op433_writeresp_state40 == 1'b1) & (output0_s_BVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state41_pp0_stage1_iter14 = (((ap_predicate_op443_writeresp_state41 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op442_writeresp_state41 == 1'b1) & (output1_s_BVALID == 1'b0)) | ((ap_predicate_op441_writeresp_state41 == 1'b1) & (output0_s_BVALID == 1'b0)) | ((ap_predicate_op440_writeresp_state41 == 1'b1) & (output0_s_BVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state42_io = ((ap_sig_ioackin_output1_s_AWREADY == 1'b0) | (ap_sig_ioackin_output0_s_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state43_io = ((ap_sig_ioackin_output1_s_WREADY == 1'b0) | (ap_sig_ioackin_output0_s_WREADY == 1'b0) | (ap_sig_ioackin_output1_s_AWREADY == 1'b0) | (ap_sig_ioackin_output0_s_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state44_io = ((ap_sig_ioackin_output1_s_WREADY == 1'b0) | (ap_sig_ioackin_output0_s_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state48 = ((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state49 = ((output1_s_BVALID == 1'b0) | (output0_s_BVALID == 1'b0));
end

always @ (*) begin
    ap_condition_1411 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_1417 = ((tmp_4_fu_1434_p2 == 1'd0) & (brmerge_reg_1996_pp0_iter10_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1));
end

always @ (*) begin
    ap_condition_1429 = (((tmp_5_fu_1482_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (tmp_4_fu_1434_p2 == 1'd1)) | ((tmp_5_fu_1482_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (brmerge_reg_1996_pp0_iter10_reg == 1'd1)));
end

always @ (*) begin
    ap_condition_1441 = (((tmp_14_reg_2000_pp0_iter10_reg == 1'd0) & (tmp_16_fu_1551_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)) | ((or_cond1_fu_1536_p2 == 1'd0) & (tmp_16_fu_1551_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)));
end

always @ (*) begin
    ap_condition_1444 = ((tmp_14_reg_2000_pp0_iter10_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (or_cond1_fu_1536_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_2301 = ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1));
end

always @ (*) begin
    ap_condition_2314 = (((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (tmp_5_fu_1482_p2 == 1'd1) & (tmp_4_fu_1434_p2 == 1'd1)) | ((tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (tmp_5_fu_1482_p2 == 1'd1) & (brmerge_reg_1996_pp0_iter10_reg == 1'd1)));
end

always @ (*) begin
    ap_condition_2336 = (((tmp_14_reg_2000_pp0_iter10_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (tmp_16_fu_1551_p2 == 1'd1)) | ((or_cond1_fu_1536_p2 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (tmp_16_fu_1551_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_2404 = ((1'b0 == ap_block_pp0_stage1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1));
end

always @ (*) begin
    ap_condition_2455 = ((ap_predicate_op374_writereq_state34 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_2497 = ((ap_predicate_op394_writereq_state35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_2507 = ((ap_predicate_op395_writereq_state35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3399 = ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op224_call_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_3402 = ((1'b0 == ap_block_pp0_stage1) & (ap_predicate_op243_call_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_V_m_r_1_reg_534 = 'bx;

assign ap_phi_reg_pp0_iter0_i_syn_ex_rr_1_reg_524 = 'bx;

assign ap_phi_reg_pp0_iter0_i_syn_in_rr_1_reg_514 = 'bx;

assign ap_phi_reg_pp0_iter0_num_o_5_reg_567 = 'bx;

assign ap_phi_reg_pp0_iter0_r_ref_r_1_reg_504 = 'bx;

assign ap_phi_reg_pp0_iter0_signal_1_18_reg_495 = 'bx;

assign ap_phi_reg_pp0_iter0_signal_1_1_reg_486 = 'bx;

assign ap_phi_reg_pp0_iter10_num_o_1_reg_544 = 'bx;

assign ap_phi_reg_pp0_iter10_num_o_3_reg_554 = 'bx;

assign ap_phi_reg_pp0_iter11_num_o_7_reg_579 = 'bx;

always @ (*) begin
    ap_predicate_op224_call_state20 = ((tmp_41_fu_1273_p1 == 1'd1) & (tmp_8_reg_1992_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op243_call_state21 = ((tmp_41_reg_2009 == 1'd0) & (tmp_8_reg_1992_pp0_iter4_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op253_call_state22 = ((tmp_8_reg_1992_pp0_iter4_reg == 1'd1) & (tmp_41_reg_2009 == 1'd1));
end

always @ (*) begin
    ap_predicate_op374_writereq_state34 = ((tmp_1_reg_2143 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op375_writereq_state34 = (((tmp_16_reg_2182 == 1'd0) & (or_cond1_reg_2178 == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)) | ((tmp_16_reg_2182 == 1'd0) & (tmp_14_reg_2000_pp0_iter10_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1)));
end

always @ (*) begin
    ap_predicate_op376_writereq_state34 = ((or_cond1_reg_2178 == 1'd1) & (tmp_14_reg_2000_pp0_iter10_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter10_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op393_write_state35 = ((tmp_1_reg_2143 == 1'd0) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op394_writereq_state35 = ((tmp_4_reg_2158 == 1'd0) & (brmerge_reg_1996_pp0_iter11_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op395_writereq_state35 = (((tmp_5_reg_2168 == 1'd0) & (tmp_4_reg_2158 == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)) | ((tmp_5_reg_2168 == 1'd0) & (brmerge_reg_1996_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)));
end

always @ (*) begin
    ap_predicate_op396_write_state35 = (((tmp_16_reg_2182 == 1'd0) & (tmp_14_reg_2000_pp0_iter11_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)) | ((tmp_16_reg_2182 == 1'd0) & (or_cond1_reg_2178 == 1'd0) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)));
end

always @ (*) begin
    ap_predicate_op397_write_state35 = ((or_cond1_reg_2178 == 1'd1) & (tmp_14_reg_2000_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op398_writereq_state35 = ((or_cond2_reg_2208 == 1'd0) & (tmp_14_reg_2000_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op399_writereq_state35 = (((tmp_22_reg_2212 == 1'd0) & (or_cond2_reg_2208 == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)) | ((tmp_22_reg_2212 == 1'd0) & (tmp_14_reg_2000_pp0_iter11_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)));
end

always @ (*) begin
    ap_predicate_op402_write_state36 = ((tmp_4_reg_2158_pp0_iter11_reg == 1'd0) & (brmerge_reg_1996_pp0_iter11_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op403_write_state36 = (((tmp_5_reg_2168_pp0_iter11_reg == 1'd0) & (tmp_4_reg_2158_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)) | ((tmp_5_reg_2168_pp0_iter11_reg == 1'd0) & (brmerge_reg_1996_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)));
end

always @ (*) begin
    ap_predicate_op406_write_state36 = ((or_cond2_reg_2208_pp0_iter11_reg == 1'd0) & (tmp_14_reg_2000_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op407_write_state36 = (((tmp_22_reg_2212_pp0_iter11_reg == 1'd0) & (or_cond2_reg_2208_pp0_iter11_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)) | ((tmp_22_reg_2212_pp0_iter11_reg == 1'd0) & (tmp_14_reg_2000_pp0_iter11_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter11_reg == 1'd1)));
end

always @ (*) begin
    ap_predicate_op433_writeresp_state40 = ((tmp_1_reg_2143_pp0_iter13_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter13_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op436_writeresp_state40 = (((tmp_16_reg_2182_pp0_iter13_reg == 1'd0) & (or_cond1_reg_2178_pp0_iter13_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter13_reg == 1'd1)) | ((tmp_16_reg_2182_pp0_iter13_reg == 1'd0) & (tmp_14_reg_2000_pp0_iter13_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter13_reg == 1'd1)));
end

always @ (*) begin
    ap_predicate_op437_writeresp_state40 = ((or_cond1_reg_2178_pp0_iter13_reg == 1'd1) & (tmp_14_reg_2000_pp0_iter13_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter13_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op440_writeresp_state41 = ((tmp_4_reg_2158_pp0_iter13_reg == 1'd0) & (brmerge_reg_1996_pp0_iter14_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter14_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op441_writeresp_state41 = (((tmp_5_reg_2168_pp0_iter13_reg == 1'd0) & (tmp_4_reg_2158_pp0_iter13_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter14_reg == 1'd1)) | ((tmp_5_reg_2168_pp0_iter13_reg == 1'd0) & (brmerge_reg_1996_pp0_iter14_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter14_reg == 1'd1)));
end

always @ (*) begin
    ap_predicate_op442_writeresp_state41 = ((or_cond2_reg_2208_pp0_iter13_reg == 1'd0) & (tmp_14_reg_2000_pp0_iter14_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter14_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op443_writeresp_state41 = (((tmp_22_reg_2212_pp0_iter13_reg == 1'd0) & (or_cond2_reg_2208_pp0_iter13_reg == 1'd1) & (tmp_8_reg_1992_pp0_iter14_reg == 1'd1)) | ((tmp_22_reg_2212_pp0_iter13_reg == 1'd0) & (tmp_14_reg_2000_pp0_iter14_reg == 1'd0) & (tmp_8_reg_1992_pp0_iter14_reg == 1'd1)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign brmerge_fu_1257_p2 = (p_not_fu_1252_p2 | icmp_reg_1878);

assign grp_fu_708_p4 = {{ap_phi_mux_num_o_1_phi_fu_547_p4[63:32]}};

assign grp_fu_718_p2 = ($signed(grp_fu_708_p4) + $signed(32'd1));

assign grp_fu_734_p4 = {{ap_phi_mux_num_o_3_phi_fu_557_p6[95:64]}};

assign grp_fu_744_p2 = ($signed(grp_fu_734_p4) + $signed(32'd1));

assign grp_fu_750_p4 = {{ap_phi_reg_pp0_iter11_num_o_5_reg_567[127:96]}};

assign grp_update_indata_fu_616_ap_start = grp_update_indata_fu_616_ap_start_reg;

assign grp_update_outdata_fu_629_ap_start = grp_update_outdata_fu_629_ap_start_reg;

assign i_1_fu_1267_p2 = (i_reg_462 + 30'd1);

assign i_cast_fu_1243_p1 = ap_phi_mux_i_phi_fu_466_p4;

assign icmp_fu_1037_p2 = ((tmp_29_fu_1027_p4 != 4'd0) ? 1'b1 : 1'b0);

assign num_o_10_fu_1691_p5 = {{ap_phi_reg_pp0_iter11_num_o_5_reg_567[255:128]}, {tmp_24_fu_1685_p2}, {ap_phi_reg_pp0_iter11_num_o_5_reg_567[95:0]}};

assign num_o_2_fu_1411_p5 = {{ap_phi_mux_num_o_phi_fu_478_p4[255:32]}, {tmp_3_fu_1405_p2}};

assign num_o_4_fu_1459_p5 = {{ap_phi_mux_num_o_1_phi_fu_547_p4[255:64]}, {grp_fu_718_p2}, {ap_phi_mux_num_o_1_phi_fu_547_p4[31:0]}};

assign num_o_6_fu_1507_p5 = {{ap_phi_mux_num_o_1_phi_fu_547_p4[255:64]}, {grp_fu_718_p2}, {ap_phi_mux_num_o_1_phi_fu_547_p4[31:0]}};

assign num_o_8_fu_1607_p5 = {{ap_phi_mux_num_o_3_phi_fu_557_p6[255:96]}, {grp_fu_744_p2}, {ap_phi_mux_num_o_3_phi_fu_557_p6[63:0]}};

assign num_o_9_fu_1576_p5 = {{ap_phi_mux_num_o_3_phi_fu_557_p6[255:96]}, {grp_fu_744_p2}, {ap_phi_mux_num_o_3_phi_fu_557_p6[63:0]}};

assign or_cond1_fu_1536_p2 = (tmp_7_reg_1873 & tmp_15_fu_1530_p2);

assign or_cond2_fu_1635_p2 = (tmp_reg_1867 | tmp_21_fu_1629_p2);

assign output0_8_sum_cast_fu_1395_p1 = $signed(output0_8_sum_fu_1390_p2);

assign output0_8_sum_fu_1390_p2 = ($signed(tmp_27_cast_reg_1925) + $signed(tmp_2_cast_fu_1386_p1));

assign output1_10_sum1_cast_fu_1497_p1 = $signed(output1_10_sum1_fu_1492_p2);

assign output1_10_sum1_fu_1492_p2 = ($signed(tmp_12_cast_fu_1488_p1) + $signed(tmp_26_cast_reg_1913));

assign output1_10_sum_cast_fu_1449_p1 = $signed(output1_10_sum_fu_1444_p2);

assign output1_10_sum_fu_1444_p2 = ($signed(tmp_10_cast_fu_1440_p1) + $signed(tmp_26_cast_reg_1913));

assign output2_12_sum1_cast_fu_1597_p1 = $signed(output2_12_sum1_fu_1592_p2);

assign output2_12_sum1_fu_1592_p2 = ($signed(tmp_17_cast_fu_1588_p1) + $signed(tmp_25_cast_reg_1901));

assign output2_12_sum_cast_fu_1566_p1 = $signed(output2_12_sum_fu_1561_p2);

assign output2_12_sum_fu_1561_p2 = ($signed(tmp_19_cast_fu_1557_p1) + $signed(tmp_25_cast_reg_1901));

assign output3_14_sum_cast_fu_1675_p1 = $signed(output3_14_sum_fu_1670_p2);

assign output3_14_sum_fu_1670_p2 = ($signed(tmp_23_cast_fu_1666_p1) + $signed(tmp_9_cast_reg_1889));

assign p_and_f_fu_967_p3 = {{29'd0}, {tmp_17_fu_963_p1}};

assign p_and_t_fu_979_p3 = {{29'd0}, {tmp_19_fu_975_p1}};

assign p_lshr_cast_fu_931_p1 = tmp_32_fu_921_p4;

assign p_lshr_f_cast_fu_951_p1 = tmp_33_fu_941_p4;

assign p_neg_fu_915_p2 = (32'd0 - num_0_data_reg);

assign p_neg_t1_fu_987_p2 = (32'd0 - p_and_t_fu_979_p3);

assign p_neg_t_fu_935_p2 = (30'd0 - p_lshr_cast_fu_931_p1);

assign p_not_fu_1252_p2 = ((i_cast_fu_1243_p1 != tmp_6_reg_1986) ? 1'b1 : 1'b0);

assign rmd_0_off_fu_1015_p2 = ($signed(5'd30) + $signed(tmp_23_fu_1001_p1));

assign rmd_fu_993_p3 = ((tmp_12_fu_907_p3[0:0] === 1'b1) ? p_neg_t1_fu_987_p2 : p_and_f_fu_967_p3);

assign stable_para_ARADDR = tmp_30_fu_1043_p1;

assign time_1_fu_1224_p2 = ($signed(31'd1) + $signed(time_cast_fu_1221_p1));

assign time_2_fu_1230_p3 = ((tmp_reg_1867[0:0] === 1'b1) ? time_cast_fu_1221_p1 : time_1_fu_1224_p2);

assign time_cast_fu_1221_p1 = $signed(time_s_reg_1862);

assign time_s_fu_955_p3 = ((tmp_12_fu_907_p3[0:0] === 1'b1) ? p_neg_t_fu_935_p2 : p_lshr_f_cast_fu_951_p1);

assign tmp_10_cast_fu_1440_p1 = grp_fu_708_p4;

assign tmp_10_fu_1101_p1 = stable_para_RDATA[31:0];

assign tmp_12_cast_fu_1488_p1 = grp_fu_708_p4;

assign tmp_12_fu_907_p3 = num_0_data_reg[32'd31];

assign tmp_14_fu_1262_p2 = ((i_cast_fu_1243_p1 == tmp_6_reg_1986) ? 1'b1 : 1'b0);

assign tmp_15_fu_1530_p2 = ((tmp_56_fu_1520_p4 != 32'd4294967295) ? 1'b1 : 1'b0);

assign tmp_16_fu_1551_p2 = ((tmp_57_fu_1541_p4 == 32'd4294967295) ? 1'b1 : 1'b0);

assign tmp_17_cast_fu_1588_p1 = grp_fu_734_p4;

assign tmp_17_fu_963_p1 = num_0_data_reg[2:0];

assign tmp_19_cast_fu_1557_p1 = grp_fu_734_p4;

assign tmp_19_fu_975_p1 = p_neg_fu_915_p2[2:0];

assign tmp_1_fu_1372_p2 = ((tmp_48_fu_1368_p1 == 32'd4294967295) ? 1'b1 : 1'b0);

assign tmp_21_fu_1629_p2 = ((tmp_62_fu_1619_p4 == 32'd4294967295) ? 1'b1 : 1'b0);

assign tmp_22_fu_1650_p2 = ((tmp_63_fu_1640_p4 == 32'd4294967295) ? 1'b1 : 1'b0);

assign tmp_23_cast_fu_1666_p0 = grp_fu_750_p4;

assign tmp_23_cast_fu_1666_p1 = tmp_23_cast_fu_1666_p0;

assign tmp_23_fu_1001_p1 = rmd_fu_993_p3[4:0];

assign tmp_24_fu_1685_p0 = grp_fu_750_p4;

assign tmp_24_fu_1685_p2 = ($signed(tmp_24_fu_1685_p0) + $signed(32'd1));

assign tmp_25_cast_fu_1068_p1 = output2_1_reg_1828;

assign tmp_25_fu_1065_p1 = output2_1_reg_1828;

assign tmp_26_cast_fu_1080_p1 = output1_offset9_reg_1834;

assign tmp_26_fu_1077_p1 = output1_offset9_reg_1834;

assign tmp_27_cast_fu_1092_p1 = output0_offset7_reg_1840;

assign tmp_27_fu_1089_p1 = output0_offset7_reg_1840;

assign tmp_28_fu_1005_p1 = rmd_fu_993_p3[3:0];

assign tmp_29_fu_1027_p4 = {{rmd_0_off_fu_1015_p2[4:1]}};

assign tmp_2_cast_fu_1386_p1 = tmp_67_fu_1382_p1;

assign tmp_30_fu_1043_p1 = stable_para_offset1_reg_1857;

assign tmp_32_fu_921_p4 = {{p_neg_fu_915_p2[31:3]}};

assign tmp_33_fu_941_p4 = {{num_0_data_reg[31:3]}};

assign tmp_34_fu_1123_p4 = {{stable_para_RDATA[95:64]}};

assign tmp_35_fu_1137_p4 = {{stable_para_RDATA[127:96]}};

assign tmp_36_fu_1151_p4 = {{stable_para_RDATA[159:128]}};

assign tmp_37_fu_1165_p4 = {{stable_para_RDATA[191:160]}};

assign tmp_38_fu_1179_p4 = {{stable_para_RDATA[223:192]}};

assign tmp_39_fu_1193_p4 = {{stable_para_RDATA[255:224]}};

assign tmp_3_fu_1405_p2 = ($signed(32'd1) + $signed(tmp_67_fu_1382_p1));

assign tmp_40_fu_1207_p4 = {{stable_para_RDATA[287:256]}};

assign tmp_41_fu_1273_p1 = i_reg_462_pp0_iter3_reg[0:0];

assign tmp_47_fu_1704_p1 = num_o_reg_474[31:0];

assign tmp_48_fu_1368_p1 = ap_phi_reg_pp0_iter10_signal_1_18_reg_495[31:0];

assign tmp_49_fu_1378_p1 = ap_phi_reg_pp0_iter10_signal_1_1_reg_486[31:0];

assign tmp_4_fu_1434_p2 = ((tmp_50_fu_1424_p4 == 32'd4294967295) ? 1'b1 : 1'b0);

assign tmp_50_fu_1424_p4 = {{ap_phi_reg_pp0_iter10_signal_1_18_reg_495[63:32]}};

assign tmp_51_fu_1472_p4 = {{ap_phi_reg_pp0_iter10_signal_1_18_reg_495[63:32]}};

assign tmp_56_fu_1520_p4 = {{ap_phi_reg_pp0_iter10_signal_1_18_reg_495[95:64]}};

assign tmp_57_fu_1541_p4 = {{ap_phi_reg_pp0_iter10_signal_1_18_reg_495[95:64]}};

assign tmp_5_fu_1482_p2 = ((tmp_51_fu_1472_p4 == 32'd4294967295) ? 1'b1 : 1'b0);

assign tmp_62_fu_1619_p4 = {{ap_phi_reg_pp0_iter10_signal_1_18_reg_495[127:96]}};

assign tmp_63_fu_1640_p4 = {{ap_phi_reg_pp0_iter10_signal_1_18_reg_495[127:96]}};

assign tmp_67_fu_1382_p1 = ap_phi_mux_num_o_phi_fu_478_p4[31:0];

assign tmp_6_fu_1237_p2 = ($signed(31'd2147483647) + $signed(time_2_fu_1230_p3));

assign tmp_7_fu_1021_p2 = ((tmp_28_fu_1005_p1 == 4'd3) ? 1'b1 : 1'b0);

assign tmp_8_fu_1247_p2 = (($signed(i_cast_fu_1243_p1) < $signed(time_2_reg_1981)) ? 1'b1 : 1'b0);

assign tmp_9_cast_fu_1056_p1 = output3_1_reg_1822;

assign tmp_9_fu_1053_p1 = output3_1_reg_1822;

assign tmp_fu_1009_p2 = ((tmp_28_fu_1005_p1 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_1109_p4 = {{stable_para_RDATA[63:32]}};

always @ (posedge ap_clk) begin
    tmp_9_cast_reg_1889[32:30] <= 3'b000;
    output1_addr_reg_1894[31:30] <= 2'b00;
    tmp_25_cast_reg_1901[32:30] <= 3'b000;
    output1_addr_1_reg_1907[31:30] <= 2'b00;
    tmp_26_cast_reg_1913[32:30] <= 3'b000;
    output0_addr_reg_1919[31:30] <= 2'b00;
    tmp_27_cast_reg_1925[32:30] <= 3'b000;
    output0_addr_1_reg_1930[31:30] <= 2'b00;
end

endmodule //update_n
